package cc.vergence.features.languages.impl;

import cc.vergence.Vergence;
import cc.vergence.features.languages.Language;
import cc.vergence.features.managers.other.TextManager;

public class ChineseLanguage extends Language {
    public ChineseLanguage() {
        load();
        Vergence.CONSOLE.logInfo("language \"简体中文 (Chinese)\" was loaded!");
    }

    @Override
    public void load() {
        languageBase.put("COMMANDS.Aim.desc", "瞄准到指定位置");
        languageBase.put("COMMANDS.Friend.desc", "编辑好友列表");
        languageBase.put("COMMANDS.Enemy.desc", "编辑敌人列表");
        languageBase.put("COMMANDS.Bind.desc", "绑定按键");
        languageBase.put("COMMANDS.Prefix.desc", "设置指令前缀");
        languageBase.put("COMMANDS.Toggle.desc", "切换模块状态");
        languageBase.put("COMMANDS.CONFIG.desc", "管理配置文件");
        languageBase.put("COMMANDS.MESSAGE.COMMAND_NOT_FOUND", "未找到相关指令:");
        languageBase.put("COMMANDS.MESSAGE.INVALID_COMMAND", "§c无效的指令! §f输入§b help§f查看指令列表");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.LIST_TITLE", "§b好友:");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.EMPTY", "好友列表为空");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.RESET", "好友列表已重置");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.REMOVE", "好友删除成功");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.ADD", "好友添加成功");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.IS_ENEMY", "§c该玩家在你的敌人列表中!");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.LIST_TITLE", "§b敌人:");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.EMPTY", "敌人列表为空");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.RESET", "敌人列表已重置");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.REMOVE", "敌人删除成功");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.ADD", "敌人添加成功");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.IS_FRIEND", "§c该玩家在你的好友列表中!");
        languageBase.put("COMMANDS.MESSAGE.BIND.UNKNOWN_MODULE", "目标是一个未知模块");
        languageBase.put("COMMANDS.MESSAGE.BIND.NO_KEY", "请指定一个按键");
        languageBase.put("COMMANDS.MESSAGE.BIND.UNKNOWN_ERROR", "未知内部错误");
        languageBase.put("COMMANDS.MESSAGE.BIND.BIND_OK", "按键绑定成功");
        languageBase.put("COMMANDS.MESSAGE.PREFIX.NO_PREFIX", "请指定一个前缀。（一个字符）");
        languageBase.put("COMMANDS.MESSAGE.PREFIX.OK", "当前前缀是");
        languageBase.put("COMMANDS.MESSAGE.TOGGLE.UNKNOWN_MODULE", "目标是一个未知模块");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.SAVED", "配置 \"{config}\" 已保存");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.LOADED", "配置 \"{config}\" 已加载");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.LIST_TITLE", "配置:");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.NO_CONFIGS", "§c未找到配置文件");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.NOT_FOUND", "配置 §b{config} §r未找到");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.MISSING_NAME", "§c请指定一个配置名称");
        languageBase.put("COMMANDS.THEME.desc", "管理自定义主题");
        languageBase.put("COMMANDS.THEME.MESSAGE.SAVED", "主题 \"{theme}\" 已保存");
        languageBase.put("COMMANDS.THEME.MESSAGE.LOADED", "主题 \"{theme}\" 已加载");
        languageBase.put("COMMANDS.THEME.MESSAGE.LIST_TITLE", "主题:");
        languageBase.put("COMMANDS.THEME.MESSAGE.NO_THEMES", "§c未找到主题!");
        languageBase.put("COMMANDS.THEME.MESSAGE.NOT_FOUND", "主题 §b{theme} §r未找到");
        languageBase.put("COMMANDS.THEME.MESSAGE.MISSING_NAME", "§c请指定一个主题名称");
        languageBase.put("COMMANDS.THEME.MESSAGE.DELETED", "主题 \"{theme}\" 已删除");
        languageBase.put("COMMANDS.THEME.MESSAGE.CANNOT_DELETE_DEFAULT", "§c无法删除默认主题");

        languageBase.put("SCREEN.MainMenu.Buttons.SinglePlayer", "单人游戏");
        languageBase.put("SCREEN.MainMenu.Buttons.MultiPlayer", "多人游戏");
        languageBase.put("SCREEN.MainMenu.Buttons.Options", "选项");
        languageBase.put("SCREEN.MainMenu.Buttons.Exit", "退出");

        languageBase.put("Module.Category.CLIENT.name", "客户端");
        languageBase.put("Module.Category.COMBAT.name", "战斗类");
        languageBase.put("Module.Category.MOVEMENT.name", "移动类");
        languageBase.put("Module.Category.PLAYER.name", "玩家类");
        languageBase.put("Module.Category.EXPLOIT.name", "漏洞类");
        languageBase.put("Module.Category.VISUAL.name", "视觉类");
        languageBase.put("Module.Category.MISC.name", "杂项");
        languageBase.put("Module.Category.HUD.name", "HUD");

        languageBase.put("Module.Special.Options.MultipleOptions.Empty", "空");
        languageBase.put("Module.Special.Messages.Blocked", "模块 §b{a} §r被 §b{b}§r 阻止");
        languageBase.put("Module.Special.Messages.Unblock", "模块 §b{a} §r被 §b{b}§r 解除阻止");
        languageBase.put("Module.Special.Messages.Enable", "模块 {module} 已§a启用");
        languageBase.put("Module.Special.Messages.Disable", "模块 {module} 已§c禁用");
        languageBase.put("Module.Special.ModuleBind.name", "快捷键");
        languageBase.put("Module.Special.ModuleBind.description", "模块的快捷键");
        languageBase.put("Module.Special.ModulePriority.name", "优先级");
        languageBase.put("Module.Special.ModulePriority.description", "模块的优先级");
        languageBase.put("Module.Special.ModuleDraw.name", "显示");
        languageBase.put("Module.Special.ModuleDraw.description", "在 ArrayList 中显示模块");

        languageBase.put("Theme.DefaultTheme.name", "默认主题");
        languageBase.put("Theme.DefaultTheme.description", "vergence 客户端的默认主题");
        languageBase.put("Theme.Messages.Loaded", "主题 \"{theme}\" ({raw_theme}) 已加载!");

        languageBase.put("Module.Modules.ClickGUI.name", "点击界面");
        languageBase.put("Module.Modules.ClickGUI.description", "点击界面的选项");
        languageBase.put("Module.Modules.ClickGUI.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.ClickGUI.Options.TextOption.Title.description", "客户端点击界面的标题");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.BlurBackground.name", "背景模糊");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.BlurBackground.description", "在点击界面背景使用模糊效果");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.ShowOptionDescription.name", "显示选项描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.ShowOptionDescription.description", "显示选项的详细描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchForDescription.name", "搜索描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchForDescription.description", "在搜索中包含选项描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchIgnoreCase.name", "忽略大小写");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchIgnoreCase.description", "搜索时忽略大小写");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.RainbowSync.name", "彩虹同步");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.RainbowSync.description", "使所有彩虹颜色保持一致");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowOffset.name", "彩虹偏移");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowOffset.description", "彩虹颜色之间的最大偏移量");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowSpeed.name", "彩虹速度");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowSpeed.description", "彩虹颜色变化的速度");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.MainPageAnimationTime.name", "主页面动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.MainPageAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ModuleSpreadAnimationTime.name", "模块动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ModuleSpreadAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.OptionsSpreadAnimationTime.name", "选项动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.OptionsSpreadAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.DescriptionSpreadAnimationTime.name", "描述动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.DescriptionSpreadAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollAnimationTime.name", "滚动动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollScale.name", "滚动比例");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollScale.description", "滚轮滚动的距离比例");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ColorAnimationTime.name", "颜色动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ColorAnimationTime.description", "动画的持续时间");

        languageBase.put("Module.Modules.Client.name", "客户端设置");
        languageBase.put("Module.Modules.Client.description", "管理Vergence客户端的许多设置");
        languageBase.put("Module.Modules.Client.Options.BooleanOption.Sync.name", "同步共享");
        languageBase.put("Module.Modules.Client.Options.BooleanOption.Sync.description", "共享你的Vergence用户状态，让其他启用了\"同步共享\"的用户可以看到你的Vergence图标");
        languageBase.put("Module.Modules.Client.Options.TextOption.Brand.name", "品牌");
        languageBase.put("Module.Modules.Client.Options.TextOption.Brand.description", "客户端品牌名称");
        languageBase.put("Module.Modules.Client.Options.EnumOption.UIScale.name", "UI缩放");
        languageBase.put("Module.Modules.Client.Options.EnumOption.UIScale.description", "客户端的UI缩放");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Language.name", "语言");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Language.description", "客户端的语言");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Font.name", "字体");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Font.description", "客户端的字体样式");

        languageBase.put("Module.Modules.Notify.name", "通知");
        languageBase.put("Module.Modules.Notify.description", "关于通知的设置");
        languageBase.put("Module.Modules.Notify.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.Notify.Options.BooleanOption.Rounded.description", "为通知使用圆角矩形");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Radius.description", "通知的圆角半径");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.NotificationAliveTime.name", "通知存活时间");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.NotificationAliveTime.description", "通知在屏幕上停留的时间");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AnimationSpeed.name", "动画速度");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AnimationSpeed.description", "动画的速度");

        languageBase.put("Module.Modules.HudEditor.name", "HUD编辑器");
        languageBase.put("Module.Modules.HudEditor.description", "编辑HUD相关内容");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.TextColor.description", "HUD编辑器中HUD的文本颜色");
        languageBase.put("Module.Modules.HudEditor.Options.BooleanOption.Outline.name", "轮廓");
        languageBase.put("Module.Modules.HudEditor.Options.BooleanOption.Outline.description", "选中HUD时显示轮廓");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.OutlineColor.name", "轮廓颜色");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.OutlineColor.description", "HUD的轮廓颜色");

        languageBase.put("Module.Modules.Watermark.name", "水印");
        languageBase.put("Module.Modules.Watermark.description", "在屏幕上绘制水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.CustomTitle.name", "自定义标题");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.CustomTitle.description", "是否自定义水印标题");
        languageBase.put("Module.Modules.Watermark.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.Watermark.Options.TextOption.Title.description", "水印标题");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Outline.name", "轮廓");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Outline.description", "显示轮廓");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.OutlineWidth.name", "轮廓宽度");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.OutlineWidth.description", "轮廓的宽度");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Rounded.name", "圆角矩形");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Rounded.description", "为水印应用圆角矩形");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.Radius.name", "圆角半径");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.Radius.description", "水印的圆角半径");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Split.name", "分割");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Split.description", "将水印各部分显示为独立区域");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedTime.name", "包含时间");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedTime.description", "将时间组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedFPS.name", "包含FPS");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedFPS.description", "将FPS组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedUser.name", "包含用户名");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedUser.description", "将用户名组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedConfig.name", "包含配置");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedConfig.description", "将配置组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.TextColor.description", "水印的文本颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.BackgroundColor.description", "水印的背景颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.OutlineColor.name", "轮廓颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.OutlineColor.description", "水印的轮廓颜色");

        languageBase.put("Module.Modules.Spammer.name", "刷屏工具");
        languageBase.put("Module.Modules.Spammer.description", "自动在聊天栏发送文本");
        languageBase.put("Module.Modules.Spammer.Options.DoubleOption.Cooldown.name", "冷却时间");
        languageBase.put("Module.Modules.Spammer.Options.DoubleOption.Cooldown.description", "发送消息的冷却时间");
        languageBase.put("Module.Modules.Spammer.Options.EnumOption.ListOrder.name", "列表顺序");
        languageBase.put("Module.Modules.Spammer.Options.EnumOption.ListOrder.description", "文本列表的顺序");
        languageBase.put("Module.Modules.Spammer.Options.TextOption.FileName.name", "文件名");
        languageBase.put("Module.Modules.Spammer.Options.TextOption.FileName.description", "文本列表的文件名");

        languageBase.put("Module.Modules.AutoSprint.name", "自动疾跑");
        languageBase.put("Module.Modules.AutoSprint.description", "移动时自动保持疾跑");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.Attack.name", "攻击");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.Attack.description", "攻击时模块会受到影响");
        languageBase.put("Module.Modules.AutoSprint.Options.DoubleOption.AttackCounteract.name", "攻击抵消");
        languageBase.put("Module.Modules.AutoSprint.Options.DoubleOption.AttackCounteract.description", "攻击的抵消比例");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.UseItem.name", "使用物品");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.UseItem.description", "使用物品时保持疾跑");

        languageBase.put("Module.Modules.FastUse.name", "快速使用");
        languageBase.put("Module.Modules.FastUse.description", "减少动作间的延迟");
        languageBase.put("Module.Modules.FastUse.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.FastUse.Options.DoubleOption.Delay.description", "动作的延迟");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Blocks.name", "方块");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Blocks.description", "减少方块间的间隔");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Crystals.name", "水晶");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Crystals.description", "减少水晶间的间隔");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.XP.name", "经验");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.XP.description", "减少丢弃经验瓶的间隔");

        languageBase.put("Module.Modules.ESP.name", "玩家透视");
        languageBase.put("Module.Modules.ESP.description", "始终显示玩家信息");

        languageBase.put("Module.Modules.AntiHungry.name", "保持饱腹");
        languageBase.put("Module.Modules.AntiHungry.description", "通过合理方法降低饥饿感");
        languageBase.put("Module.Modules.AntiHungry.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.AntiHungry.Options.EnumOption.AntiCheat.description", "确定哪些功能需要被反作弊模式阻止");

        languageBase.put("Module.Modules.BetterChat.name", "更好的聊天");
        languageBase.put("Module.Modules.BetterChat.description", "允许自定义聊天界面");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.Prefix.name", "前缀");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.Prefix.description", "Vergence客户端前缀的样式");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PrefixColor.name", "前缀颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PrefixColor.description", "前缀的颜色");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomNameColor.name", "自定义名称颜色");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomNameColor.description", "启用玩家名的自定义颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerNameColor.name", "玩家名称颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerNameColor.description", "玩家名称的颜色");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.PlayerNamePrefix.name", "名称前缀");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.PlayerNamePrefix.description", "玩家名称前的前缀");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.PlayerNameSuffix.name", "名称后缀");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.PlayerNameSuffix.description", "玩家名称后的后缀");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomChatColor.name", "自定义聊天颜色");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomChatColor.description", "启用聊天消息的自定义颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerChatColor.name", "聊天文本颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerChatColor.description", "聊天消息的颜色");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.PlayerChatPrefix.name", "聊天前缀");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.PlayerChatPrefix.description", "名称与消息之间的前缀");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationTime.name", "动画时间");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationTime.description", "动画的频率");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationOffset.name", "动画偏移");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationOffset.description", "动画的偏移量");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.AnimationQuadType.name", "动画类型");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.AnimationQuadType.description", "动画的计算方式");

        languageBase.put("Module.Modules.SafeMode.name", "安全模式");
        languageBase.put("Module.Modules.SafeMode.description", "尽力避免被反作弊检测");
        languageBase.put("Module.Modules.SafeMode.Options.EnumOption.AntiCheatMode.name", "反作弊模式");
        languageBase.put("Module.Modules.SafeMode.Options.EnumOption.AntiCheatMode.description", "确定哪些功能需要被反作弊模式阻止");
        languageBase.put("Module.Modules.SafeMode.Options.BooleanOption.AllowTimer.name", "允许计时器");
        languageBase.put("Module.Modules.SafeMode.Options.BooleanOption.AllowTimer.description", "启用后允许使用计时器，可能导致被反作弊检测");

        languageBase.put("Module.Modules.KillAura.name", "杀戮光环");
        languageBase.put("Module.Modules.KillAura.description", "自动攻击一定范围内的目标");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.AntiCheat.description", "确定要绕过的反作弊策略");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.ClickType.name", "点击类型");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.ClickType.description", "选择自动攻击的点击模式");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Range.description", "攻击目标的最大距离");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.FOV.name", "视野");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.FOV.description", "攻击视野角度");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MinCPS.name", "最小CPS");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MinCPS.description", "每秒最小点击次数");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MaxCPS.name", "最大CPS");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MaxCPS.description", "每秒最大点击次数");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Delay.description", "每次点击间的延迟");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.CrosshairLock.name", "准星锁定");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.CrosshairLock.description", "准星对准目标时才攻击");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.RotateType.name", "旋转类型");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.RotateType.description", "攻击时使用的旋转类型");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateSpeed.name", "旋转速度");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateSpeed.description", "旋转速度");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.SmoothRotate.name", "平滑旋转");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.SmoothRotate.description", "启用平滑旋转");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.SmoothOffset.name", "平滑偏移");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.SmoothOffset.description", "平滑旋转偏移");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.RotateLock.name", "旋转锁定");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.RotateLock.description", "锁定旋转");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateLockTime.name", "旋转锁定时间");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateLockTime.description", "旋转锁定持续时间");
        languageBase.put("Module.Modules.KillAura.Options.MultipleOption.Targets.name", "目标");
        languageBase.put("Module.Modules.KillAura.Options.MultipleOption.Targets.description", "攻击目标");

        languageBase.put("Module.Modules.Scaffold.name", "自动搭路");
        languageBase.put("Module.Modules.Scaffold.description", "移动时自动在脚下放置方块");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.AntiCheat.description", "确定哪些功能需要被反作弊模式阻止");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingHand.name", "挥动方式");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingHand.description", "放置方块时的挥动手");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceableRange.name", "可放置范围");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceableRange.description", "最大放置距离");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.RotateMode.name", "旋转模式");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.RotateMode.description", "放置时的旋转模式");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.DoShift.name", "自动潜行");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.DoShift.description", "放置方块时自动潜行");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Rotate.name", "旋转");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Rotate.description", "启用旋转");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MinThreshold.name", "最小阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MinThreshold.description", "最小随机边缘阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelay.name", "放置延迟");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelay.description", "方块放置间隔");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.PlaceMode.name", "放置模式");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.PlaceMode.description", "放置模式");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomThreshold.name", "随机阈值");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomThreshold.description", "随机化边缘阈值");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingMode.name", "挥动模式");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingMode.description", "挥动动画模式");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MaxThreshold.name", "最大阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MaxThreshold.description", "最大随机边缘阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateSpeed.name", "旋转速度");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateSpeed.description", "放置时的旋转速度");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Swing.name", "挥动");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Swing.description", "启用挥动动画");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Sprint.name", "疾跑");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Sprint.description", "放置方块时保持疾跑");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateYawOffset.name", "旋转Yaw偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateYawOffset.description", "旋转Yaw偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotatePitchOffset.name", "旋转Pitch偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotatePitchOffset.description", "旋转Pitch偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.Threshold.name", "阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.Threshold.description", "边缘阈值");

        languageBase.put("Module.Modules.Reach.name", "更远交互");
        languageBase.put("Module.Modules.Reach.description", "改变互动和攻击的范围");
        languageBase.put("Module.Modules.Reach.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.Reach.Options.DoubleOption.Range.description", "互动和攻击的范围");

        languageBase.put("Module.Modules.FakePlayer.name", "假人");
        languageBase.put("Module.Modules.FakePlayer.description", "创建一个假人");
        languageBase.put("Module.Modules.FakePlayer.Options.TextOption.PlayerName.name", "玩家名称");
        languageBase.put("Module.Modules.FakePlayer.Options.TextOption.PlayerName.description", "要显示的假玩家名称");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.GoldenApple.name", "金苹果");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.GoldenApple.description", "为假人启用金苹果效果");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.AutoTotem.name", "自动图腾");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.AutoTotem.description", "假人死亡时自动使用图腾");

        languageBase.put("Module.Modules.SafeWalk.name", "安全行走");
        languageBase.put("Module.Modules.SafeWalk.description", "让你能安全地沿着方块边缘行走");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoInject.name", "注入输入");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoInject.description", "使用不安全的方法防止掉落");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoShift.name", "自动潜行");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoShift.description", "靠近边缘时自动潜行");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.RandomThreshold.name", "随机阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.RandomThreshold.description", "随机化潜行边缘阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.Threshold.name", "边缘阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.Threshold.description", "触发潜行的固定距离");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MaxThreshold.name", "最大阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MaxThreshold.description", "最大随机边缘阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MinThreshold.name", "最小阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MinThreshold.description", "最小随机边缘阈值");

        languageBase.put("Module.Modules.FOVModifier.name", "视野修改器");
        languageBase.put("Module.Modules.FOVModifier.description", "改变玩家的视野");
        languageBase.put("Module.Modules.FOVModifier.Options.DoubleOption.FOV.name", "视野");
        languageBase.put("Module.Modules.FOVModifier.Options.DoubleOption.FOV.description", "视野值");
        languageBase.put("Module.Modules.FOVModifier.Options.BooleanOption.Items.name", "物品");
        languageBase.put("Module.Modules.FOVModifier.Options.BooleanOption.Items.description", "将效果应用于物品");

        languageBase.put("Module.Modules.Disabler.name", "禁用器");
        languageBase.put("Module.Modules.Disabler.description", "尝试禁用某些反作弊行为");
        languageBase.put("Module.Modules.Disabler.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.Disabler.Options.EnumOption.AntiCheat.description", "确定哪些功能需要被反作弊模式阻止");

        languageBase.put("Module.Modules.InventoryMove.name", "背包移动");
        languageBase.put("Module.Modules.InventoryMove.description", "打开某些GUI时可以移动");
        languageBase.put("Module.Modules.InventoryMove.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.InventoryMove.Options.EnumOption.AntiCheat.description", "确定哪些功能需要被反作弊模式阻止");
        languageBase.put("Module.Modules.InventoryMove.Options.BooleanOption.HorizontalCollision.name", "水平碰撞");
        languageBase.put("Module.Modules.InventoryMove.Options.BooleanOption.HorizontalCollision.description", "发送数据包时是否启用水平碰撞");

        languageBase.put("Module.Modules.AutoWalk.name", "自动行走");
        languageBase.put("Module.Modules.AutoWalk.description", "自动向前移动");
        languageBase.put("Module.Modules.AutoWalk.Options.EnumOption.Mode.name", "模式");
        languageBase.put("Module.Modules.AutoWalk.Options.EnumOption.Mode.description", "Baritone支持");

        languageBase.put("Module.Modules.NoCooldown.name", "无冷却时间");
        languageBase.put("Module.Modules.NoCooldown.description", "减少操作间的冷却时间");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Attack.name", "攻击");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Attack.description", "无攻击冷却");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Jump.name", "跳跃");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Jump.description", "无跳跃冷却");
        languageBase.put("Module.Modules.NoCooldown.Options.DoubleOption.JumpTicks.name", "跳跃刻");
        languageBase.put("Module.Modules.NoCooldown.Options.DoubleOption.JumpTicks.description", "再次跳跃前需要等待的刻数");

        languageBase.put("Module.Modules.PortalGod.name", "传送门GUI");
        languageBase.put("Module.Modules.PortalGod.description", "允许你在传送门内操作GUI");

        languageBase.put("Module.Modules.NoFall.name", "无摔落伤害");
        languageBase.put("Module.Modules.NoFall.description", "防止摔落伤害");
        languageBase.put("Module.Modules.NoFall.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.NoFall.Options.EnumOption.AntiCheat.description", "确定哪些功能需要被反作弊模式阻止");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.HorizontalCollision.name", "水平碰撞");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.HorizontalCollision.description", "为Grim启用水平碰撞检查");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.AlwaysActive.name", "始终激活");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.AlwaysActive.description", "无论是否下落始终激活");

        languageBase.put("Module.Modules.Placeholder.name", "占位符预览");
        languageBase.put("Module.Modules.Placeholder.description", "显示客户端和玩家信息占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_ID.name", "{id}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_ID.description", "客户端ID占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Name.name", "{name}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Name.description", "客户端名称占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Full_Name.name", "{full_name}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Full_Name.description", "客户端全名占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Version.name", "{version}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Version.description", "客户端版本占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Player.name", "{player}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Player.description", "玩家名称占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_HP.name", "{hp}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_HP.description", "玩家生命值占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Max_HP.name", "{max_hp}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Max_HP.description", "玩家最大生命值占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Armor.name", "{armor}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Armor.description", "玩家护甲占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_OverWorld.name", "{world} (主世界)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_OverWorld.description", "主世界维度占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Nether.name", "{world} (下界)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Nether.description", "下界维度占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_TheEnd.name", "{world} (末地)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_TheEnd.description", "末地维度占位符");

        languageBase.put("Module.Modules.Title.name", "自定义标题");
        languageBase.put("Module.Modules.Title.description", "自定义并动画化窗口标题");
        languageBase.put("Module.Modules.Title.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.Title.Options.TextOption.Title.description", "窗口标题文本");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.Animation.name", "动画");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.Animation.description", "启用标题动画");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.ReverseAnimation.name", "反向动画");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.ReverseAnimation.description", "反转动画方向");
        languageBase.put("Module.Modules.Title.Options.DoubleOption.AnimationDelay.name", "动画延迟");
        languageBase.put("Module.Modules.Title.Options.DoubleOption.AnimationDelay.description", "动画步骤之间的延迟");

        languageBase.put("Module.Modules.BetterTab.name", "更好的TAB");
        languageBase.put("Module.Modules.BetterTab.description", "使用自定义颜色和限制以改进TAB");
        languageBase.put("Module.Modules.BetterTab.Options.DoubleOption.PlayerLimit.name", "玩家限制");
        languageBase.put("Module.Modules.BetterTab.Options.DoubleOption.PlayerLimit.description", "标签页中显示的最大玩家数");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Myself.name", "自己");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Myself.description", "在标签页中高亮自己");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.MyColor.name", "自己颜色");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.MyColor.description", "自己的颜色");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Friends.name", "好友");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Friends.description", "在标签页中高亮好友");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.FriendColor.name", "好友颜色");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.FriendColor.description", "好友的颜色");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Enemies.name", "敌人");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Enemies.description", "在标签页中高亮敌人");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.EnemyColor.name", "敌人颜色");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.EnemyColor.description", "敌人的颜色");

        languageBase.put("Module.Modules.ModuleList.name", "模块列表");
        languageBase.put("Module.Modules.ModuleList.description", "在HUD上显示已启用模块的列表");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.Align.name", "对齐");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.Align.description", "模块列表对齐方式");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.FontSize.name", "字体大小");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.FontSize.description", "模块名称字体大小");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Details.name", "详情");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Details.description", "显示模块详情");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.DetailsColor.name", "详情颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.DetailsColor.description", "详情文本颜色");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.DetailsType.name", "详情类型");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.DetailsType.description", "要显示的详情类型");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Padding.name", "间距");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Padding.description", "元素之间的间距");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.TextColor.description", "模块名称颜色");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Background.name", "背景");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Background.description", "启用背景");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.BackgroundColor.description", "背景颜色");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rounded.description", "背景圆角");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Radius.description", "圆角半径");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rect.name", "矩形");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rect.description", "启用文字周围矩形");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RectWidth.name", "矩形宽度");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RectWidth.description", "矩形宽度");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.RectColor.name", "矩形颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.RectColor.description", "矩形颜色");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.RoundedRect.name", "圆角矩形");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.RoundedRect.description", "圆角矩形");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RadiusRect.name", "矩形圆角半径");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RadiusRect.description", "矩形圆角半径");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Animation.name", "动画");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Animation.description", "启用淡入动画");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.AnimationTime.name", "动画时间");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.AnimationTime.description", "动画持续时间");

        languageBase.put("Module.Modules.Advertiser.name", "广告机");
        languageBase.put("Module.Modules.Advertiser.description", "在聊天中自动发送广告消息");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.Command.name", "命令");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.Command.description", "用于广告的命令");
        languageBase.put("Module.Modules.Advertiser.Options.DoubleOption.Cooldown.name", "冷却");
        languageBase.put("Module.Modules.Advertiser.Options.DoubleOption.Cooldown.description", "广告之间的冷却时间");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.FileName.name", "文件名");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.FileName.description", "包含广告消息的文件");
        languageBase.put("Module.Modules.Advertiser.Options.EnumOption.ListOrder.name", "列表顺序");
        languageBase.put("Module.Modules.Advertiser.Options.EnumOption.ListOrder.description", "广告消息顺序");

        languageBase.put("Module.Modules.Hotkeys.name", "快捷键");
        languageBase.put("Module.Modules.Hotkeys.description", "在HUD上显示绑定的快捷键");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.OnlyEnabled.name", "仅启用");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.OnlyEnabled.description", "仅显示已启用模块的快捷键");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.Aligns.name", "对齐");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.Aligns.description", "快捷键列表对齐方式");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.FontSize.name", "字体大小");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.FontSize.description", "快捷键条目字体大小");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Padding.name", "间距");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Padding.description", "元素之间的间距");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.Rounded.description", "背景圆角");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Radius.description", "圆角半径");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextTopColor.name", "标题文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextTopColor.description", "标题文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextColor.description", "快捷键文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundTopColor.name", "标题背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundTopColor.description", "标题栏背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundColor.description", "列表背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextEnabledColor.name", "启用文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextEnabledColor.description", "启用模块文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundEnabledColor.name", "启用背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundEnabledColor.description", "启用模块背景颜色");

        languageBase.put("Module.Modules.MainMenu.name", "主菜单");
        languageBase.put("Module.Modules.MainMenu.description", "自定义主菜单外观");
        languageBase.put("Module.Modules.MainMenu.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.MainMenu.Options.TextOption.Title.description", "主菜单标题文本");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TitleColor.name", "标题颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TitleColor.description", "标题文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TextColor.description", "菜单内通用文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.BooleanOption.Background.name", "背景");
        languageBase.put("Module.Modules.MainMenu.Options.BooleanOption.Background.description", "启用背景");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.BackgroundColor.description", "菜单背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonTextColor.name", "按钮文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonTextColor.description", "按钮文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredTextColor.name", "按钮悬停文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredTextColor.description", "按钮悬停时的文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonBackgroundColor.name", "按钮背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonBackgroundColor.description", "按钮背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredBackgroundColor.name", "按钮悬停背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredBackgroundColor.description", "按钮悬停时的背景颜色");

    }
}
