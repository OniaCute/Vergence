package cc.vergence.modules.exploit;

import cc.vergence.features.event.events.MoveEvent;
import cc.vergence.features.event.events.PacketEvent;
import cc.vergence.features.options.Option;
import cc.vergence.features.options.impl.BooleanOption;
import cc.vergence.injections.accessors.player.PlayerMoveC2SPacketAccessor;
import cc.vergence.modules.Module;
import cc.vergence.modules.client.AntiCheat;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;

public class AntiHungry extends Module {
    public static AntiHungry INSTANCE;
    private boolean lastOnGround = false;
    private boolean ignored = false;

    public AntiHungry() {
        super("AntiHungry", Category.EXPLOIT);
        INSTANCE = this;
    }

    public Option<Boolean> sprint = addOption(new BooleanOption("Sprint", false));
    public Option<Boolean> ground = addOption(new BooleanOption("Ground", false));

    @Override
    public String getDetails() {
        return AntiCheat.INSTANCE.getAntiCheat();
    }

    @Override
    public void onSendPacket(PacketEvent.Send event, Packet<?> packet) {
        if (isNull()) {
            return ;
        }

        if (ignored && event.getPacket() instanceof PlayerMoveC2SPacket) {
            ignored = false;
            return;
        }

        if (mc.player.hasVehicle() || mc.player.isTouchingWater() || mc.player.isSubmergedInWater()) {
            return;
        }

        if (packet instanceof PlayerMoveC2SPacket && ground.getValue()) {
            if (mc.player.isOnGround() && mc.player.fallDistance <= 0.0 && !mc.interactionManager.isBreakingBlock()) {
                ((PlayerMoveC2SPacketAccessor) packet).setOnGround(false);
            }
        }

        if (event.getPacket() instanceof ClientCommandC2SPacket packet1 && sprint.getValue()) {
            if (packet1.getMode() == ClientCommandC2SPacket.Mode.START_SPRINTING) {
                event.cancel();
            }
        }
    }

    @Override
    public void onMoveEvent(MoveEvent event, double x, double y, double z) {
        if (isNull()) {
            return ;
        }

        if (mc.player.isOnGround() && !lastOnGround && ground.getValue()) {
            ignored = true;
        }
        lastOnGround = mc.player.isOnGround();
    }

    @Override
    public void onEnable() {
        if (mc.player == null) {
            return;
        }
        lastOnGround = mc.player.isOnGround();
    }

    @Override
    public void onDisable() {
        if (mc.player == null) {
            return;
        }
        lastOnGround = mc.player.isOnGround();
    }
}
