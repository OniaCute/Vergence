package cc.vergence.features.languages.impl;

import cc.vergence.Vergence;
import cc.vergence.features.languages.Language;
import cc.vergence.features.managers.other.TextManager;

public class ChineseLanguage extends Language {
    public ChineseLanguage() {
        load();
        Vergence.CONSOLE.logInfo("language \"简体中文 (Chinese)\" was loaded!");
    }

    @Override
    public void load() {
        languageBase.put("COMMANDS.Aim.desc", "瞄准到指定位置");
        languageBase.put("COMMANDS.Friend.desc", "编辑好友列表");
        languageBase.put("COMMANDS.Enemy.desc", "编辑敌人列表");
        languageBase.put("COMMANDS.Bind.desc", "绑定按键");
        languageBase.put("COMMANDS.Prefix.desc", "设置指令前缀");
        languageBase.put("COMMANDS.Toggle.desc", "切换模块状态");
        languageBase.put("COMMANDS.CONFIG.desc", "管理配置文件");
        languageBase.put("COMMANDS.MESSAGE.COMMAND_NOT_FOUND", "未找到相关指令:");
        languageBase.put("COMMANDS.MESSAGE.INVALID_COMMAND", "无效的指令! 输入 help 查看指令列表");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.LIST_TITLE", "好友:");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.EMPTY", "好友列表为空");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.RESET", "好友列表已重置");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.REMOVE", "好友删除成功");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.ADD", "好友添加成功");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.IS_ENEMY", "该玩家在你的敌人列表中!");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.LIST_TITLE", "敌人:");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.EMPTY", "敌人列表为空");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.RESET", "敌人列表已重置");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.REMOVE", "敌人删除成功");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.ADD", "敌人添加成功");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.IS_FRIEND", "该玩家在你的好友列表中!");
        languageBase.put("COMMANDS.MESSAGE.BIND.UNKNOWN_MODULE", "目标是一个未知模块");
        languageBase.put("COMMANDS.MESSAGE.BIND.NO_KEY", "请指定一个按键");
        languageBase.put("COMMANDS.MESSAGE.BIND.UNKNOWN_ERROR", "未知内部错误");
        languageBase.put("COMMANDS.MESSAGE.BIND.BIND_OK", "按键绑定成功");
        languageBase.put("COMMANDS.MESSAGE.PREFIX.NO_PREFIX", "请指定一个前缀。（一个字符）");
        languageBase.put("COMMANDS.MESSAGE.PREFIX.OK", "当前前缀是");
        languageBase.put("COMMANDS.MESSAGE.TOGGLE.UNKNOWN_MODULE", "目标是一个未知模块");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.SAVED", "配置 \"{config}\" 已保存");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.LOADED", "配置 \"{config}\" 已加载");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.LIST_TITLE", "配置:");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.NO_CONFIGS", "未找到配置文件");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.NOT_FOUND", "配置 {config} 未找到");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.MISSING_NAME", "请指定一个配置名称");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.DELETED", "已删除配置文件 \"{theme}\"");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.CANNOT_DELETE_DEFAULT", "无法删除默认配置文件");
        languageBase.put("COMMANDS.THEME.desc", "管理自定义主题");
        languageBase.put("COMMANDS.THEME.MESSAGE.SAVED", "主题 \"{theme}\" 已保存");
        languageBase.put("COMMANDS.THEME.MESSAGE.LOADED", "主题 \"{theme}\" 已加载");
        languageBase.put("COMMANDS.THEME.MESSAGE.LIST_TITLE", "主题:");
        languageBase.put("COMMANDS.THEME.MESSAGE.NO_THEMES", "未找到主题!");
        languageBase.put("COMMANDS.THEME.MESSAGE.NOT_FOUND", "主题 {theme} 未找到");
        languageBase.put("COMMANDS.THEME.MESSAGE.MISSING_NAME", "请指定一个主题名称");
        languageBase.put("COMMANDS.THEME.MESSAGE.DELETED", "已删除主题 \"{theme}\"");
        languageBase.put("COMMANDS.THEME.MESSAGE.CANNOT_DELETE_DEFAULT", "无法删除默认主题");
        languageBase.put("SCREEN.MainMenu.Buttons.SinglePlayer", "单人游戏");
        languageBase.put("SCREEN.MainMenu.Buttons.MultiPlayer", "多人游戏");
        languageBase.put("SCREEN.MainMenu.Buttons.Options", "选项");
        languageBase.put("SCREEN.MainMenu.Buttons.Exit", "退出");
        languageBase.put("Module.Category.CLIENT.name", "客户端");
        languageBase.put("Module.Category.COMBAT.name", "战斗类");
        languageBase.put("Module.Category.MOVEMENT.name", "移动类");
        languageBase.put("Module.Category.PLAYER.name", "玩家类");
        languageBase.put("Module.Category.EXPLOIT.name", "漏洞类");
        languageBase.put("Module.Category.VISUAL.name", "视觉类");
        languageBase.put("Module.Category.MISC.name", "杂项");
        languageBase.put("Module.Category.HUD.name", "HUD");
        languageBase.put("Module.Special.Options.MultipleOptions.Empty", "空");
        languageBase.put("Module.Special.Messages.Blocked", "模块 {a} 被 {b} 阻止");
        languageBase.put("Module.Special.Messages.Unblock", "模块 {a} 被 {b} 解除阻止");
        languageBase.put("Module.Special.Messages.Enable", "模块 {module} 已启用");
        languageBase.put("Module.Special.Messages.Disable", "模块 {module} 已禁用");
        languageBase.put("Module.Special.ModuleBind.name", "快捷键");
        languageBase.put("Module.Special.ModuleBind.description", "模块的快捷键");
        languageBase.put("Module.Special.ModulePriority.name", "优先级");
        languageBase.put("Module.Special.ModulePriority.description", "模块的优先级");
        languageBase.put("Module.Special.ModuleDraw.name", "显示");
        languageBase.put("Module.Special.ModuleDraw.description", "在 ArrayList 中显示模块");
        languageBase.put("Theme.DefaultTheme.name", "默认主题");
        languageBase.put("Theme.DefaultTheme.description", "vergence 客户端的默认主题");
        languageBase.put("Theme.Messages.Loaded", "主题 \"{theme}\" ({raw_theme}) 已加载!");
        languageBase.put("Config.Messages.Loaded", "配置 \"{config}\" 已加载!");
        languageBase.put("Config.Messages.OutOfDate", "配置 \"{version}\" 的版本可能已过时!");
        languageBase.put("Module.Modules.ClickGUI.name", "点击界面");
        languageBase.put("Module.Modules.ClickGUI.description", "点击界面的选项");
        languageBase.put("Module.Modules.ClickGUI.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.ClickGUI.Options.TextOption.Title.description", "客户端点击界面的标题");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.BlurBackground.name", "背景模糊");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.BlurBackground.description", "在点击界面背景使用模糊效果");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.ShowOptionDescription.name", "显示选项描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.ShowOptionDescription.description", "显示选项的详细描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchForDescription.name", "搜索描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchForDescription.description", "在搜索中包含选项描述");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchIgnoreCase.name", "忽略大小写");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchIgnoreCase.description", "搜索时忽略大小写");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.RainbowSync.name", "彩虹同步");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.RainbowSync.description", "使所有彩虹颜色保持一致");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowOffset.name", "彩虹偏移");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowOffset.description", "彩虹颜色之间的最大偏移量");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowSpeed.name", "彩虹速度");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowSpeed.description", "彩虹颜色变化的速度");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.MainPageAnimationTime.name", "主页面动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.MainPageAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ModuleSpreadAnimationTime.name", "模块动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ModuleSpreadAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.OptionsSpreadAnimationTime.name", "选项动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.OptionsSpreadAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.DescriptionSpreadAnimationTime.name", "描述动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.DescriptionSpreadAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollAnimationTime.name", "滚动动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollScale.name", "滚动比例");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollScale.description", "滚轮滚动的距离比例");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ColorAnimationTime.name", "颜色动画时间");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ColorAnimationTime.description", "动画的持续时间");
        languageBase.put("Module.Modules.Client.name", "客户端设置");
        languageBase.put("Module.Modules.Client.description", "管理Vergence客户端的许多设置");
        languageBase.put("Module.Modules.Client.Options.BooleanOption.Sync.name", "同步共享");
        languageBase.put("Module.Modules.Client.Options.BooleanOption.Sync.description", "共享你的Vergence用户状态，让其他启用了\"同步共享\"的用户可以看到你的Vergence图标");
        languageBase.put("Module.Modules.Client.Options.TextOption.Brand.name", "品牌");
        languageBase.put("Module.Modules.Client.Options.TextOption.Brand.description", "客户端品牌名称");
        languageBase.put("Module.Modules.Client.Options.EnumOption.UIScale.name", "UI缩放");
        languageBase.put("Module.Modules.Client.Options.EnumOption.UIScale.description", "客户端的UI缩放");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Language.name", "语言");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Language.description", "客户端的语言");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Font.name", "字体");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Font.description", "客户端的字体样式");
        languageBase.put("Module.Modules.Notify.name", "通知");
        languageBase.put("Module.Modules.Notify.description", "关于通知的设置");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.Align.name", "对齐");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.Align.description", "通知的水平对齐方式");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.PopType.name", "弹出类型");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.PopType.description", "通知动画的方向");
        languageBase.put("Module.Modules.Notify.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.Notify.Options.BooleanOption.Rounded.description", "为通知使用圆角矩形");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Radius.description", "通知的圆角半径");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Padding.name", "间距");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Padding.description", "通知内容周围的间距");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeWidth.name", "存活时间宽度");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeWidth.description", "存活时间条的宽度倍数");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.NotificationAliveTime.name", "通知存活时间");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.NotificationAliveTime.description", "通知在屏幕上停留的时间");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AnimationTime.name", "动画时间");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AnimationTime.description", "显示/隐藏动画的持续时间");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeRadius.name", "存活时间半径");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeRadius.description", "存活时间条的圆角半径");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.BackgroundColor.description", "通知背景颜色");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TitleColor.name", "标题颜色");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TitleColor.description", "通知标题的颜色");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TextColor.description", "通知正文的颜色");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.AliveTimeColor.name", "存活时间颜色");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.AliveTimeColor.description", "存活时间条的颜色");
        languageBase.put("Module.Modules.HudEditor.name", "HUD编辑器");
        languageBase.put("Module.Modules.HudEditor.description", "编辑HUD相关内容");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.TextColor.description", "HUD编辑器中HUD的文本颜色");
        languageBase.put("Module.Modules.HudEditor.Options.BooleanOption.Outline.name", "轮廓");
        languageBase.put("Module.Modules.HudEditor.Options.BooleanOption.Outline.description", "选中HUD时显示轮廓");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.OutlineColor.name", "轮廓颜色");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.OutlineColor.description", "HUD的轮廓颜色");
        languageBase.put("Module.Modules.Watermark.name", "水印");
        languageBase.put("Module.Modules.Watermark.description", "在屏幕上绘制水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.CustomTitle.name", "自定义标题");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.CustomTitle.description", "是否自定义水印标题");
        languageBase.put("Module.Modules.Watermark.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.Watermark.Options.TextOption.Title.description", "水印标题");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Outline.name", "轮廓");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Outline.description", "显示轮廓");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.OutlineWidth.name", "轮廓宽度");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.OutlineWidth.description", "轮廓的宽度");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Rounded.name", "圆角矩形");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Rounded.description", "为水印应用圆角矩形");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.Radius.name", "圆角半径");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.Radius.description", "水印的圆角半径");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Split.name", "分割");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Split.description", "将水印各部分显示为独立区域");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedTime.name", "包含时间");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedTime.description", "将时间组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedFPS.name", "包含FPS");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedFPS.description", "将FPS组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedUser.name", "包含用户名");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedUser.description", "将用户名组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedConfig.name", "包含配置");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedConfig.description", "将配置组件纳入水印");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.TextColor.description", "水印的文本颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.BackgroundColor.description", "水印的背景颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.OutlineColor.name", "轮廓颜色");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.OutlineColor.description", "水印的轮廓颜色");
        languageBase.put("Module.Modules.Spammer.name", "刷屏工具");
        languageBase.put("Module.Modules.Spammer.description", "自动在聊天栏发送文本");
        languageBase.put("Module.Modules.Spammer.Options.DoubleOption.Cooldown.name", "冷却时间");
        languageBase.put("Module.Modules.Spammer.Options.DoubleOption.Cooldown.description", "发送消息的冷却时间");
        languageBase.put("Module.Modules.Spammer.Options.EnumOption.ListOrder.name", "列表顺序");
        languageBase.put("Module.Modules.Spammer.Options.EnumOption.ListOrder.description", "文本列表的顺序");
        languageBase.put("Module.Modules.Spammer.Options.TextOption.FileName.name", "文件名");
        languageBase.put("Module.Modules.Spammer.Options.TextOption.FileName.description", "文本列表的文件名");
        languageBase.put("Module.Modules.AutoSprint.name", "自动疾跑");
        languageBase.put("Module.Modules.AutoSprint.description", "移动时自动保持疾跑");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.Attack.name", "攻击");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.Attack.description", "攻击时模块会受到影响");
        languageBase.put("Module.Modules.AutoSprint.Options.DoubleOption.AttackCounteract.name", "攻击抵消");
        languageBase.put("Module.Modules.AutoSprint.Options.DoubleOption.AttackCounteract.description", "攻击的抵消比例");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.UseItem.name", "使用物品");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.UseItem.description", "使用物品时保持疾跑");
        languageBase.put("Module.Modules.FastUse.name", "快速使用");
        languageBase.put("Module.Modules.FastUse.description", "减少动作间的延迟");
        languageBase.put("Module.Modules.FastUse.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.FastUse.Options.DoubleOption.Delay.description", "动作的延迟");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Blocks.name", "方块");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Blocks.description", "减少方块间的间隔");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Crystals.name", "水晶");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Crystals.description", "减少水晶间的间隔");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.XP.name", "经验");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.XP.description", "减少丢弃经验瓶的间隔");
        languageBase.put("Module.Modules.AntiHungry.name", "保持饱腹");
        languageBase.put("Module.Modules.AntiHungry.description", "通过合理方法降低饥饿感");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Sprint.name", "疾跑");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Sprint.description", "取消疾跑封包以防止饥饿");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Ground.name", "地面");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Ground.description", "修改onGround标志以防止饥饿");
        languageBase.put("Module.Modules.BetterChat.name", "更好的聊天");
        languageBase.put("Module.Modules.BetterChat.description", "允许自定义聊天界面");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.Prefix.name", "前缀样式");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.Prefix.description", "选择默认或行前缀样式用于消息");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PrefixColor.name", "前缀颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PrefixColor.description", "聊天前缀的颜色");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatPrefix.name", "聊天前缀");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatPrefix.description", "每条聊天消息前的文本");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatSuffix.name", "聊天后缀");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatSuffix.description", "每条聊天消息后的文本");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomNameColor.name", "自定义名称颜色");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomNameColor.description", "为你的玩家名称应用自定义颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerNameColor.name", "玩家名称颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerNameColor.description", "启用自定义颜色时使用的玩家名称颜色");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomChatColor.name", "自定义聊天颜色");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomChatColor.description", "为你的聊天消息应用自定义颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerChatColor.name", "玩家聊天颜色");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerChatColor.description", "启用自定义颜色时使用的聊天消息颜色");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationTime.name", "动画时间");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationTime.description", "聊天消息淡入动画的持续时间（毫秒）");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationOffset.name", "动画偏移");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationOffset.description", "淡入动画的水平偏移");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.AnimationQuadType.name", "动画类型");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.AnimationQuadType.description", "聊天淡入动画的缓动类型");
        languageBase.put("Module.Modules.SafeMode.name", "安全模式");
        languageBase.put("Module.Modules.SafeMode.description", "尽力避免被反作弊检测");
        languageBase.put("Module.Modules.SafeMode.Options.EnumOption.AntiCheatMode.name", "反作弊模式");
        languageBase.put("Module.Modules.SafeMode.Options.EnumOption.AntiCheatMode.description", "确定哪些功能需要被反作弊模式阻止");
        languageBase.put("Module.Modules.SafeMode.Options.BooleanOption.AllowTimer.name", "允许计时器");
        languageBase.put("Module.Modules.SafeMode.Options.BooleanOption.AllowTimer.description", "启用后允许使用计时器，可能导致被反作弊检测");
        languageBase.put("Module.Modules.KillAura.name", "杀戮光环");
        languageBase.put("Module.Modules.KillAura.description", "自动攻击一定范围内的目标");
        languageBase.put("Module.Modules.KillAura.Options.MultipleOption.Targets.name", "目标");
        languageBase.put("Module.Modules.KillAura.Options.MultipleOption.Targets.description", "将被攻击的实体类型");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.ClickType.name", "点击类型");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.ClickType.description", "攻击时机方法：旧版 = 基于CPS，新版 = 完全冷却后延迟");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Range.description", "攻击目标的最大距离");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.FOV.name", "视野");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.FOV.description", "目标必须位于的水平视野角度");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MinCPS.name", "最小CPS");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MinCPS.description", "每秒最小点击次数");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MaxCPS.name", "最大CPS");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MaxCPS.description", "每秒最大点击次数");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Delay.description", "完全冷却后的延迟（毫秒）");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.CrosshairLock.name", "准星锁定");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.CrosshairLock.description", "仅当准星直接对准目标时攻击");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.RotateType.name", "旋转类型");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.RotateType.description", "用于朝向目标的旋转方法");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateSpeed.name", "旋转速度");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateSpeed.description", "朝向目标时每刻的旋转度数");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.RotateLock.name", "旋转锁定");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.RotateLock.description", "攻击后锁定旋转一段时间");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateLockTime.name", "旋转锁定时间");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateLockTime.description", "攻击后锁定旋转的持续时间（毫秒）");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.SwingMode.name", "挥动模式");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.SwingMode.description", "攻击时的挥动模式");
        languageBase.put("Module.Modules.Scaffold.name", "自动搭路");
        languageBase.put("Module.Modules.Scaffold.description", "移动时自动在脚下放置方块");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Sprint.name", "疾跑");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Sprint.description", "放置方块时允许疾跑");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Rotate.name", "旋转");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Rotate.description", "朝向放置位置旋转");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.RotateMode.name", "旋转模式");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.RotateMode.description", "用于查看放置点的旋转方法");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateSpeed.name", "旋转速度");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateSpeed.description", "朝向目标时每刻的旋转度数");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableRotateRandom.name", "启用旋转随机");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableRotateRandom.description", "为旋转添加小的随机偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomYaw.name", "旋转随机Yaw");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomYaw.description", "旋转的随机Yaw偏移最大值（度）");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomPitch.name", "旋转随机Pitch");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomPitch.description", "旋转的随机Pitch偏移最大值（度）");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Swing.name", "挥动");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Swing.description", "放置时执行挥动动画");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableSwing.name", "启用自定义挥动");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableSwing.description", "启用自定义挥动设置");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingMode.name", "挥动模式");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingMode.description", "挥动动画显示位置");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingHand.name", "挥动手");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingHand.description", "用于挥动动画的手");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.PlaceMode.name", "放置模式");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.PlaceMode.description", "用于放置方块的方法");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomPlaceDelay.name", "随机放置延迟");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomPlaceDelay.description", "随机化放置延迟");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMin.name", "最小放置延迟");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMin.description", "最小放置延迟（毫秒）");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMax.name", "最大放置延迟");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMax.description", "最大放置延迟（毫秒）");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceableRange.name", "可放置范围");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceableRange.description", "最大放置距离");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateYawOffset.name", "旋转Yaw偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateYawOffset.description", "额外的Yaw偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotatePitchOffset.name", "旋转Pitch偏移");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotatePitchOffset.description", "额外的Pitch偏移");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.DoShift.name", "执行潜行");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.DoShift.description", "放置方块时自动潜行");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.OnlyBack.name", "仅向后");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.OnlyBack.description", "仅在向后移动时潜行");
        languageBase.put("Module.Modules.Scaffold.Options.MultipleOption.SneakMode.name", "潜行模式");
        languageBase.put("Module.Modules.Scaffold.Options.MultipleOption.SneakMode.description", "潜行交互方式");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.SneakDelay.name", "潜行延迟");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.SneakDelay.description", "再次潜行前的延迟（刻）");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomThreshold.name", "随机阈值");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomThreshold.description", "随机化潜行触发距离");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.Threshold.name", "阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.Threshold.description", "触发潜行的固定距离");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MaxThreshold.name", "最大阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MaxThreshold.description", "最大随机潜行触发距离");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MinThreshold.name", "最小阈值");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MinThreshold.description", "最小随机潜行触发距离");
        languageBase.put("Module.Modules.Reach.name", "更远交互");
        languageBase.put("Module.Modules.Reach.description", "改变互动和攻击的范围");
        languageBase.put("Module.Modules.Reach.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.Reach.Options.DoubleOption.Range.description", "互动和攻击的范围");
        languageBase.put("Module.Modules.FakePlayer.name", "假人");
        languageBase.put("Module.Modules.FakePlayer.description", "创建一个假人");
        languageBase.put("Module.Modules.FakePlayer.Options.TextOption.PlayerName.name", "玩家名称");
        languageBase.put("Module.Modules.FakePlayer.Options.TextOption.PlayerName.description", "要显示的假玩家名称");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.GoldenApple.name", "金苹果");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.GoldenApple.description", "为假人启用金苹果效果");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.AutoTotem.name", "自动图腾");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.AutoTotem.description", "假人死亡时自动使用图腾");
        languageBase.put("Module.Modules.SafeWalk.name", "安全行走");
        languageBase.put("Module.Modules.SafeWalk.description", "靠近边缘时自动潜行以防止掉落");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoInject.name", "执行注入");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoInject.description", "启用不安全的移动");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoShift.name", "执行潜行");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoShift.description", "靠近边缘时自动潜行");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.OnlyBack.name", "仅向后");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.OnlyBack.description", "仅检查玩家身后方向");
        languageBase.put("Module.Modules.SafeWalk.Options.MultipleOption.SneakMode.name", "潜行模式");
        languageBase.put("Module.Modules.SafeWalk.Options.MultipleOption.SneakMode.description", "应用潜行的位置");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.SneakDelay.name", "潜行延迟");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.SneakDelay.description", "再次潜行前的延迟（刻）");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.RandomThreshold.name", "随机阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.RandomThreshold.description", "使用随机边缘检测距离");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.Threshold.name", "阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.Threshold.description", "触发潜行的固定距离");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MaxThreshold.name", "最大阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MaxThreshold.description", "最大随机边缘距离");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MinThreshold.name", "最小阈值");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MinThreshold.description", "最小随机边缘距离");
        languageBase.put("Module.Modules.FOVModifier.name", "视野修改器");
        languageBase.put("Module.Modules.FOVModifier.description", "改变玩家的视野");
        languageBase.put("Module.Modules.FOVModifier.Options.DoubleOption.FOV.name", "视野");
        languageBase.put("Module.Modules.FOVModifier.Options.DoubleOption.FOV.description", "视野值");
        languageBase.put("Module.Modules.FOVModifier.Options.BooleanOption.Items.name", "物品");
        languageBase.put("Module.Modules.FOVModifier.Options.BooleanOption.Items.description", "将效果应用于物品");
        languageBase.put("Module.Modules.Disabler.name", "禁用器");
        languageBase.put("Module.Modules.Disabler.description", "尝试禁用某些反作弊行为");
        languageBase.put("Module.Modules.InventoryMove.name", "背包移动");
        languageBase.put("Module.Modules.InventoryMove.description", "打开某些GUI时可以移动");
        languageBase.put("Module.Modules.InventoryMove.Options.BooleanOption.HorizontalCollision.name", "水平碰撞");
        languageBase.put("Module.Modules.InventoryMove.Options.BooleanOption.HorizontalCollision.description", "发送数据包时启用水平碰撞");
        languageBase.put("Module.Modules.AutoWalk.name", "自动行走");
        languageBase.put("Module.Modules.AutoWalk.description", "自动向前移动");
        languageBase.put("Module.Modules.AutoWalk.Options.EnumOption.Mode.name", "模式");
        languageBase.put("Module.Modules.AutoWalk.Options.EnumOption.Mode.description", "Baritone支持");
        languageBase.put("Module.Modules.NoCooldown.name", "无冷却时间");
        languageBase.put("Module.Modules.NoCooldown.description", "减少操作间的冷却时间");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Break.name", "破坏");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Break.description", "无破坏冷却");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Attack.name", "攻击");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Attack.description", "无攻击冷却");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Jump.name", "跳跃");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Jump.description", "无跳跃冷却");
        languageBase.put("Module.Modules.NoCooldown.Options.DoubleOption.JumpTicks.name", "跳跃刻");
        languageBase.put("Module.Modules.NoCooldown.Options.DoubleOption.JumpTicks.description", "再次跳跃前需要等待的刻数");
        languageBase.put("Module.Modules.PortalGod.name", "传送门GUI");
        languageBase.put("Module.Modules.PortalGod.description", "允许你在传送门内操作GUI");
        languageBase.put("Module.Modules.NoFall.name", "无摔落伤害");
        languageBase.put("Module.Modules.NoFall.description", "防止摔落伤害");
        languageBase.put("Module.Modules.NoFall.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.NoFall.Options.EnumOption.AntiCheat.description", "确定哪些功能需要被反作弊模式阻止");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.HorizontalCollision.name", "水平碰撞");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.HorizontalCollision.description", "为Grim启用水平碰撞检查");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.AlwaysActive.name", "始终激活");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.AlwaysActive.description", "无论是否下落始终激活");
        languageBase.put("Module.Modules.Placeholder.name", "占位符预览");
        languageBase.put("Module.Modules.Placeholder.description", "显示客户端和玩家信息占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_ID.name", "{id}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_ID.description", "客户端ID占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Name.name", "{name}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Name.description", "客户端名称占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Full_Name.name", "{full_name}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Full_Name.description", "客户端全名占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Version.name", "{version}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Version.description", "客户端版本占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Player.name", "{player}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Player.description", "玩家名称占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_HP.name", "{hp}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_HP.description", "玩家生命值占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Max_HP.name", "{max_hp}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Max_HP.description", "玩家最大生命值占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Armor.name", "{armor}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Armor.description", "玩家护甲占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_OverWorld.name", "{world} (主世界)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_OverWorld.description", "主世界维度占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Nether.name", "{world} (下界)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Nether.description", "下界维度占位符");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_TheEnd.name", "{world} (末地)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_TheEnd.description", "末地维度占位符");
        languageBase.put("Module.Modules.Title.name", "自定义标题");
        languageBase.put("Module.Modules.Title.description", "自定义并动画化窗口标题");
        languageBase.put("Module.Modules.Title.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.Title.Options.TextOption.Title.description", "窗口标题文本");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.Animation.name", "动画");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.Animation.description", "启用标题动画");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.ReverseAnimation.name", "反向动画");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.ReverseAnimation.description", "反转动画方向");
        languageBase.put("Module.Modules.Title.Options.DoubleOption.AnimationDelay.name", "动画延迟");
        languageBase.put("Module.Modules.Title.Options.DoubleOption.AnimationDelay.description", "动画步骤之间的延迟");
        languageBase.put("Module.Modules.BetterTab.name", "更好的TAB");
        languageBase.put("Module.Modules.BetterTab.description", "使用自定义颜色和限制以改进TAB");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Clean.name", "简洁");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Clean.description", "移除随机字符效果");
        languageBase.put("Module.Modules.BetterTab.Options.DoubleOption.PlayerLimit.name", "玩家限制");
        languageBase.put("Module.Modules.BetterTab.Options.DoubleOption.PlayerLimit.description", "标签页中显示的最大玩家数");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Myself.name", "自己");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Myself.description", "对自己的名称应用自定义前缀、后缀和颜色");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MyPrefix.name", "我的前缀");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MyPrefix.description", "放在自己名称前的文本");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MySuffix.name", "我的后缀");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MySuffix.description", "放在自己名称后的文本");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.MyColor.name", "我的颜色");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.MyColor.description", "自己的颜色");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Friends.name", "好友");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Friends.description", "对好友名称应用自定义前缀、后缀和颜色");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendPrefix.name", "好友前缀");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendPrefix.description", "放在好友名称前的文本");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendSuffix.name", "好友后缀");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendSuffix.description", "放在好友名称后的文本");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.FriendColor.name", "好友颜色");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.FriendColor.description", "好友的颜色");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Enemies.name", "敌人");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Enemies.description", "对敌人名称应用自定义前缀、后缀和颜色");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemyPrefix.name", "敌人前缀");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemyPrefix.description", "放在敌人名称前的文本");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemySuffix.name", "敌人后缀");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemySuffix.description", "放在敌人名称后的文本");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.EnemyColor.name", "敌人颜色");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.EnemyColor.description", "敌人的颜色");
        languageBase.put("Module.Modules.ModuleList.name", "模块列表");
        languageBase.put("Module.Modules.ModuleList.description", "在HUD上显示已启用模块的列表");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.Align.name", "对齐");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.Align.description", "模块列表对齐方式");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.FontSize.name", "字体大小");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.FontSize.description", "模块名称字体大小");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Details.name", "详情");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Details.description", "显示模块详情");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.DetailsColor.name", "详情颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.DetailsColor.description", "详情文本颜色");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.DetailsType.name", "详情类型");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.DetailsType.description", "要显示的详情类型");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Padding.name", "间距");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Padding.description", "元素之间的间距");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.TextColor.description", "模块名称颜色");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Background.name", "背景");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Background.description", "启用背景");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.BackgroundColor.description", "背景颜色");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rounded.description", "背景圆角");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Radius.description", "圆角半径");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rect.name", "矩形");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rect.description", "启用文字周围矩形");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RectWidth.name", "矩形宽度");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RectWidth.description", "矩形宽度");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.RectColor.name", "矩形颜色");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.RectColor.description", "矩形颜色");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.RoundedRect.name", "圆角矩形");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.RoundedRect.description", "圆角矩形");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RadiusRect.name", "矩形圆角半径");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RadiusRect.description", "矩形圆角半径");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Animation.name", "动画");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Animation.description", "启用淡入动画");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.AnimationTime.name", "动画时间");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.AnimationTime.description", "动画持续时间");
        languageBase.put("Module.Modules.Advertiser.name", "广告机");
        languageBase.put("Module.Modules.Advertiser.description", "在聊天中自动发送广告消息");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.Command.name", "命令");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.Command.description", "用于广告的命令");
        languageBase.put("Module.Modules.Advertiser.Options.DoubleOption.Cooldown.name", "冷却时间");
        languageBase.put("Module.Modules.Advertiser.Options.DoubleOption.Cooldown.description", "广告之间的冷却时间");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.FileName.name", "文件名");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.FileName.description", "包含广告消息的文件");
        languageBase.put("Module.Modules.Advertiser.Options.EnumOption.ListOrder.name", "列表顺序");
        languageBase.put("Module.Modules.Advertiser.Options.EnumOption.ListOrder.description", "广告消息顺序");
        languageBase.put("Module.Modules.Hotkeys.name", "快捷键");
        languageBase.put("Module.Modules.Hotkeys.description", "在HUD上显示绑定的快捷键");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.OnlyEnabled.name", "仅启用");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.OnlyEnabled.description", "仅显示已启用模块的快捷键");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.FontSize.name", "字体大小");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.FontSize.description", "快捷键条目字体大小");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Padding.name", "间距");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Padding.description", "元素之间的间距");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.Rounded.description", "背景圆角");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Radius.description", "圆角半径");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextTopColor.name", "标题文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextTopColor.description", "标题文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextColor.description", "快捷键文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundTopColor.name", "标题背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundTopColor.description", "标题栏背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundColor.description", "列表背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextEnabledColor.name", "启用文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextEnabledColor.description", "启用模块文本颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundEnabledColor.name", "启用背景颜色");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundEnabledColor.description", "启用模块背景颜色");
        languageBase.put("Module.Modules.MainMenu.name", "主菜单");
        languageBase.put("Module.Modules.MainMenu.description", "自定义主菜单外观");
        languageBase.put("Module.Modules.MainMenu.Options.TextOption.Title.name", "标题");
        languageBase.put("Module.Modules.MainMenu.Options.TextOption.Title.description", "主菜单标题文本");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TitleColor.name", "标题颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TitleColor.description", "标题文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TextColor.description", "菜单内通用文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.BooleanOption.Background.name", "背景");
        languageBase.put("Module.Modules.MainMenu.Options.BooleanOption.Background.description", "启用背景");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.BackgroundColor.description", "菜单背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonTextColor.name", "按钮文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonTextColor.description", "按钮文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredTextColor.name", "按钮悬停文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredTextColor.description", "按钮悬停时的文本颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonBackgroundColor.name", "按钮背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonBackgroundColor.description", "按钮背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredBackgroundColor.name", "按钮悬停背景颜色");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredBackgroundColor.description", "按钮悬停时的背景颜色");
        languageBase.put("Module.Modules.AutoSword.name", "自动切换剑");
        languageBase.put("Module.Modules.AutoSword.description", "附近有敌人时自动切换到剑");
        languageBase.put("Module.Modules.AutoSword.Options.MultipleOption.Targets.name", "目标");
        languageBase.put("Module.Modules.AutoSword.Options.MultipleOption.Targets.description", "触发剑切换的实体类型");
        languageBase.put("Module.Modules.AutoSword.Options.BooleanOption.SlotBack.name", "返回原槽");
        languageBase.put("Module.Modules.AutoSword.Options.BooleanOption.SlotBack.description", "无目标时返回之前槽位");
        languageBase.put("Module.Modules.AutoSword.Options.DoubleOption.Distance.name", "距离");
        languageBase.put("Module.Modules.AutoSword.Options.DoubleOption.Distance.description", "触发剑切换的最大距离");
        languageBase.put("Module.Modules.AirPearl.name", "空中珍珠");
        languageBase.put("Module.Modules.AirPearl.description", "下落时自动切换到珍珠");
        languageBase.put("Module.Modules.AirPearl.Options.BooleanOption.FastCheck.name", "快速检查");
        languageBase.put("Module.Modules.AirPearl.Options.BooleanOption.FastCheck.description", "使用简单的地面检查代替下落距离");
        languageBase.put("Module.Modules.AirPearl.Options.DoubleOption.Distance.name", "距离");
        languageBase.put("Module.Modules.AirPearl.Options.DoubleOption.Distance.description", "触发珍珠切换的最小下落距离");
        languageBase.put("Module.Modules.AutoTool.name", "自动切换工具");
        languageBase.put("Module.Modules.AutoTool.description", "自动切换到最适合的工具");
        languageBase.put("Module.Modules.AutoTool.Options.BooleanOption.SlotBack.name", "返回原槽");
        languageBase.put("Module.Modules.AutoTool.Options.BooleanOption.SlotBack.description", "操作完成后返回之前槽位");
        languageBase.put("Module.Modules.NoBacktrack.name", "无回溯");
        languageBase.put("Module.Modules.NoBacktrack.description", "不显示玩家动作的连续性（可能提高性能）");
        languageBase.put("Module.Modules.NoRender.name", "无渲染");
        languageBase.put("Module.Modules.NoRender.description", "禁用烦人的视觉效果和实体");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoBlindness.name", "无失明");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoBlindness.description", "移除失明效果");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoCorpses.name", "无尸体");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoCorpses.description", "隐藏尸体实体");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoLiquidOverlay.name", "无液体覆盖");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoLiquidOverlay.description", "禁用液体覆盖效果");
        languageBase.put("Module.Modules.FreeCamera.name", "自由摄像机");
        languageBase.put("Module.Modules.FreeCamera.description", "允许分离的摄像机移动");
        languageBase.put("Module.Modules.FreeCamera.Options.BooleanOption.RotateSync.name", "旋转同步");
        languageBase.put("Module.Modules.FreeCamera.Options.BooleanOption.RotateSync.description", "同步玩家的实际头部转动与摄像机");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.HorizontalSpeed.name", "水平速度");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.HorizontalSpeed.description", "水平摄像机移动速度");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.VerticalSpeed.name", "垂直速度");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.VerticalSpeed.description", "垂直摄像机移动速度");
        languageBase.put("Module.Modules.CameraClip.name", "摄像机穿透");
        languageBase.put("Module.Modules.CameraClip.description", "允许摄像机穿透墙壁");
        languageBase.put("Module.Modules.CameraClip.Options.DoubleOption.Distance.name", "距离");
        languageBase.put("Module.Modules.CameraClip.Options.DoubleOption.Distance.description", "第三人称摄像机与角色的距离");
        languageBase.put("Module.Modules.Chams.name", "透视");
        languageBase.put("Module.Modules.Chams.description", "通过墙壁高亮实体，可自定义填充和轮廓颜色");
        languageBase.put("Module.Modules.Chams.Options.MultipleOption.Targets.name", "目标");
        languageBase.put("Module.Modules.Chams.Options.MultipleOption.Targets.description", "要高亮的实体类别");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderEnemy.name", "渲染敌人");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderEnemy.description", "高亮敌方玩家");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderFriend.name", "渲染朋友");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderFriend.description", "高亮友方玩家");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderSelf.name", "渲染自己");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderSelf.description", "高亮自己");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.Shine.name", "发光");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.Shine.description", "为高亮模型应用发光效果");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyFill.name", "敌人填充");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyFill.description", "敌方玩家的填充颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyOutline.name", "敌人轮廓");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyOutline.description", "敌方玩家的轮廓颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendFill.name", "朋友填充");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendFill.description", "友方玩家的填充颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendOutline.name", "朋友轮廓");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendOutline.description", "友方玩家的轮廓颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfFill.name", "自己填充");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfFill.description", "自己的填充颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfOutline.name", "自己轮廓");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfOutline.description", "自己的轮廓颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobFill.name", "怪物填充");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobFill.description", "敌对生物的填充颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobOutline.name", "怪物轮廓");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobOutline.description", "敌对生物的轮廓颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalFill.name", "动物填充");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalFill.description", "被动动物的填充颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalOutline.name", "动物轮廓");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalOutline.description", "被动动物的轮廓颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultFill.name", "默认填充");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultFill.description", "未匹配实体的备用填充颜色");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultOutline.name", "默认轮廓");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultOutline.description", "未匹配实体的备用轮廓颜色");
        languageBase.put("Module.Modules.FullBright.name", "全亮");
        languageBase.put("Module.Modules.FullBright.description", "移除黑暗并提供最大视野");
        languageBase.put("Module.Modules.FullBright.Options.EnumOption.Mode.name", "模式");
        languageBase.put("Module.Modules.FullBright.Options.EnumOption.Mode.description", "亮度实现方法");
        languageBase.put("Module.Modules.SwingModifier.name", "挥动修改器");
        languageBase.put("Module.Modules.SwingModifier.description", "自定义攻击挥动动画的速度和移动组件");
        languageBase.put("Module.Modules.SwingModifier.Options.DoubleOption.Speed.name", "速度");
        languageBase.put("Module.Modules.SwingModifier.Options.DoubleOption.Speed.description", "挥动动画速度倍数");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateX.name", "X轴平移");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateX.description", "挥动时启用X轴平移");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateY.name", "Y轴平移");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateY.description", "挥动时启用Y轴平移");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateZ.name", "Z轴平移");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateZ.description", "挥动时启用Z轴平移");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationX.name", "X轴旋转");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationX.description", "挥动时启用俯仰旋转");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationY.name", "Y轴旋转");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationY.description", "挥动时启用偏航旋转");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationZ.name", "Z轴旋转");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationZ.description", "挥动时启用翻滚旋转");
        languageBase.put("Module.Modules.HandModifier.name", "手部修改器");
        languageBase.put("Module.Modules.HandModifier.description", "自定义第一人称手部位置和挥动进度以及进食动画");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.NoEatingAnimation.name", "无进食动画");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.NoEatingAnimation.description", "禁用进食动画");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.MainHandModify.name", "修改主手");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.MainHandModify.description", "启用主手的自定义挥动进度");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.MainHandProgress.name", "主手进度");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.MainHandProgress.description", "主手的挥动进度");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.OffHandModify.name", "修改副手");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.OffHandModify.description", "启用副手的自定义挥动进度");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.OffHandProgress.name", "副手进度");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.OffHandProgress.description", "副手的挥动进度");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateX.name", "X轴平移");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateX.description", "手部的水平偏移");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateY.name", "Y轴平移");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateY.description", "手部的垂直偏移");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateZ.name", "Z轴平移");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateZ.description", "手部的前后偏移");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationX.name", "X轴旋转");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationX.description", "手部的俯仰旋转（度）");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationY.name", "Y轴旋转");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationY.description", "手部的偏航旋转（度）");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationZ.name", "Z轴旋转");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationZ.description", "手部的翻滚旋转（度）");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleX.name", "X轴缩放");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleX.description", "手部的宽度缩放倍数");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleY.name", "Y轴缩放");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleY.description", "手部的高度缩放倍数");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleZ.name", "Z轴缩放");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleZ.description", "手部的深度缩放倍数");
        languageBase.put("Module.Modules.BlockHighlight.name", "方块高亮");
        languageBase.put("Module.Modules.BlockHighlight.description", "为你所看向的方块绘制轮廓或填充");
        languageBase.put("Module.Modules.BlockHighlight.Options.MultipleOption.Mode.name", "模式");
        languageBase.put("Module.Modules.BlockHighlight.Options.MultipleOption.Mode.description", "高亮的视觉风格");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.FillColor.name", "填充颜色");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.FillColor.description", "启用填充模式时的颜色");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.Outline.name", "轮廓颜色");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.Outline.description", "轮廓的颜色");
        languageBase.put("Module.Modules.BlockHighlight.Options.EnumOption.AnimationMode.name", "动画模式");
        languageBase.put("Module.Modules.BlockHighlight.Options.EnumOption.AnimationMode.description", "目标方块改变时的动画风格");
        languageBase.put("Module.Modules.BlockHighlight.Options.DoubleOption.AnimationSmooth.name", "动画平滑度");
        languageBase.put("Module.Modules.BlockHighlight.Options.DoubleOption.AnimationSmooth.description", "滑动动画的持续时间（秒）");
        languageBase.put("Module.Modules.MiddleClickExpansion.name", "中键扩展");
        languageBase.put("Module.Modules.MiddleClickExpansion.description", "为中键添加额外操作");
        languageBase.put("Module.Modules.MiddleClickExpansion.Options.EnumOption.Action.name", "操作");
        languageBase.put("Module.Modules.MiddleClickExpansion.Options.EnumOption.Action.description", "中键点击时执行的操作");
        languageBase.put("Module.Modules.SaveBreak.name", "保存破坏进度");
        languageBase.put("Module.Modules.SaveBreak.description", "保存破坏进度以确保不会中断");
        languageBase.put("Module.Modules.Timer.name", "计时器");
        languageBase.put("Module.Modules.Timer.description", "全局调整游戏速度");
        languageBase.put("Module.Modules.Timer.Options.DoubleOption.TimerScale.name", "计时器缩放");
        languageBase.put("Module.Modules.Timer.Options.DoubleOption.TimerScale.description", "客户端刻速度的倍数");
        languageBase.put("Module.Modules.MovementLagSpoof.name", "移动延迟伪造");
        languageBase.put("Module.Modules.MovementLagSpoof.description", "延迟移动数据包以模拟延迟");
        languageBase.put("Module.Modules.MovementLagSpoof.Options.DoubleOption.Choke.name", "阻塞时间");
        languageBase.put("Module.Modules.MovementLagSpoof.Options.DoubleOption.Choke.description", "释放移动数据包前的延迟（毫秒）");
        languageBase.put("Module.Modules.AntiLevitation.name", "反漂浮");
        languageBase.put("Module.Modules.AntiLevitation.description", "减少漂浮效果");
        languageBase.put("Module.Modules.Parkour.name", "跑酷");
        languageBase.put("Module.Modules.Parkour.description", "尝试沿方块边缘尽可能远地跳跃");
        languageBase.put("Module.Modules.TickShift.name", "刻转移");
        languageBase.put("Module.Modules.TickShift.description", "存储空闲刻并释放以获得速度提升");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.SafeDistance.name", "安全距离");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.SafeDistance.description", "刻转移暂停的下落距离");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.MaxTicks.name", "最大刻数");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.MaxTicks.description", "速度爆发时可用的最大存储刻数");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.Delay.description", "存储另一个刻前的延迟（刻）");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.TimerSpeed.name", "计时器速度");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.TimerSpeed.description", "使用存储刻时应用的速度倍数");
        languageBase.put("Module.Modules.NameProtect.name", "名称保护");
        languageBase.put("Module.Modules.NameProtect.description", "为本地玩家添加昵称以保护真实名称");
        languageBase.put("Module.Modules.NameProtect.Options.TextOption.NickName.name", "昵称");
        languageBase.put("Module.Modules.NameProtect.Options.TextOption.NickName.description", "本地玩家的昵称");
        languageBase.put("Module.Modules.AutoLogin.name", "自动登录");
        languageBase.put("Module.Modules.AutoLogin.description", "本地玩家加入服务器时自动发送登录命令");
        languageBase.put("Module.Modules.AutoLogin.Options.TextOption.Password.name", "密码");
        languageBase.put("Module.Modules.AutoLogin.Options.TextOption.Password.description", "附加到命令的密码");
        languageBase.put("Module.Modules.VisualRange.name", "视觉范围");
        languageBase.put("Module.Modules.VisualRange.description", "当玩家进入或离开你的渲染距离时通知你");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerJoin.name", "玩家加入");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerJoin.description", "当玩家进入视觉范围时显示通知");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerLeave.name", "玩家离开");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerLeave.description", "当玩家离开视觉范围时显示通知");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Friend.name", "包含好友");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Friend.description", "即使玩家在好友列表中也显示通知");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Sound.name", "播放声音");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Sound.description", "播放声音");
        languageBase.put("Module.Modules.VisualRange.Messages.Join", "玩家 {player} 已加入视觉范围!");
        languageBase.put("Module.Modules.VisualRange.Messages.Leave", "玩家 {player} 已离开视觉范围!");
        languageBase.put("Module.Modules.SilentDisconnect.name", "静默断开连接");
        languageBase.put("Module.Modules.SilentDisconnect.description", "当你被服务器踢出时，你将保留在服务器中");
        languageBase.put("Module.Modules.SilentDisconnect.Messages.Disconnect", "你被踢出: {reason}");
        languageBase.put("Module.Modules.CarryPro.name", "携带+");
        languageBase.put("Module.Modules.CarryPro.description", "保持组合栏中的物品");
        languageBase.put("Module.Modules.AutoRespawn.name", "自动重生");
        languageBase.put("Module.Modules.AutoRespawn.description", "死亡时自动重生");
        languageBase.put("Module.Modules.PacketsLimit.name", "数据包限制");
        languageBase.put("Module.Modules.PacketsLimit.description", "限制发送到服务器的移动数据包的速率，以减少反作弊标记");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Stop.name", "停止");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Stop.description", "超过限制时停止发送数据包");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.ResetTime.name", "重置时间");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.ResetTime.description", "重置记录的间隔");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.Limit.name", "完整数据包限制");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.Limit.description", "在一定时间内发送的最大完整玩家移动数据包数");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Notify.name", "通知");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Notify.description", "当数据包数量达到限制时通知");
        languageBase.put("Module.Modules.PacketsLimit.Messages.Full", "数据包数量已达到限制!");
        languageBase.put("Module.Modules.NameTags.name", "名称标签");
        languageBase.put("Module.Modules.NameTags.description", "在玩家上方渲染可自定义的3D名称标签");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.AntiBot.name", "反机器人");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.AntiBot.description", "不对机器人玩家应用名称标签");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Myself.name", "对自己");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Myself.description", "对自己的名称标签应用自定义设置");
        languageBase.put("Module.Modules.NameTags.Options.EnumOption.FonsSize.name", "字体大小");
        languageBase.put("Module.Modules.NameTags.Options.EnumOption.FonsSize.description", "名称标签的字体大小");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.TextColor.description", "玩家名称和附加文本的颜色");
        languageBase.put("Module.Modules.NameTags.Options.MultipleOption.Modes.name", "模式");
        languageBase.put("Module.Modules.NameTags.Options.MultipleOption.Modes.description", "可视层");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FillColor.name", "填充颜色");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FillColor.description", "启用填充模式时的背景填充颜色");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.OutlineColor.name", "轮廓颜色");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.OutlineColor.description", "启用轮廓模式时的边框颜色");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.OutlineWidth.name", "轮廓宽度");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.OutlineWidth.description", "轮廓边框的厚度（像素）");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Rounded.description", "为背景矩形应用圆角");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Radius.description", "启用圆角时的圆角半径");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Ping.name", "包含延迟");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Ping.description", "在玩家名称旁显示延迟");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Health.name", "包含生命值");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Health.description", "显示当前生命值和吸收量");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Distance.name", "包含距离");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Distance.description", "显示与本地玩家的距离");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.GameMode.name", "包含游戏模式");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.GameMode.description", "显示玩家当前的游戏模式");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Popped.name", "包含图腾弹出");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Popped.description", "显示最近的图腾弹出次数");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Height.name", "高度偏移");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Height.description", "从默认位置的垂直偏移");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MaxScale.name", "最大缩放");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MaxScale.description", "基于距离的最大缩放倍数");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MineScale.name", "最小缩放");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MineScale.description", "非常接近目标时的最小缩放");
        languageBase.put("Module.Modules.ResourceESP.name", "资源ESP");
        languageBase.put("Module.Modules.ResourceESP.description", "高亮显示周围的矿石和方块");
        languageBase.put("Module.Modules.ResourceESP.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.ResourceESP.Options.DoubleOption.Range.description", "最大搜索半径（方块）");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetherPortalColor.name", "下界传送门颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetherPortalColor.description", "用于下界传送门轮廓的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.DiamondColor.name", "钻石颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.DiamondColor.description", "钻石矿石和方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.GoldColor.name", "金颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.GoldColor.description", "金矿石和方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.EmeraldColor.name", "绿宝石颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.EmeraldColor.description", "绿宝石矿石和方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.RedstoneColor.name", "红石颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.RedstoneColor.description", "红石矿石和方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.LapisColor.name", "青金石颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.LapisColor.description", "青金石矿石和方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.IronColor.name", "铁颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.IronColor.description", "铁矿石和方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.CoalColor.name", "煤炭颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.CoalColor.description", "煤炭矿石和方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetheriteColor.name", "下界合金颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetheriteColor.description", "下界合金方块的颜色");
        languageBase.put("Module.Modules.ResourceESP.Options.MultipleOption.Mode.name", "模式");
        languageBase.put("Module.Modules.ResourceESP.Options.MultipleOption.Mode.description", "是否绘制填充方块");
        languageBase.put("Module.Modules.StorageESP.name", "存储ESP");
        languageBase.put("Module.Modules.StorageESP.description", "高亮显示周围的存储容器");
        languageBase.put("Module.Modules.StorageESP.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.StorageESP.Options.DoubleOption.Range.description", "最大搜索半径（方块）");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ChestColor.name", "箱子颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ChestColor.description", "箱子的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.TrappedChestColor.name", "陷阱箱颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.TrappedChestColor.description", "陷阱箱的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.EnderChestColor.name", "末影箱颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.EnderChestColor.description", "末影箱的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BarrelColor.name", "桶颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BarrelColor.description", "桶的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ShulkerBoxColor.name", "鞘翅箱颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ShulkerBoxColor.description", "鞘翅箱的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.FurnaceColor.name", "熔炉颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.FurnaceColor.description", "熔炉的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BlastFurnaceColor.name", "高炉颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BlastFurnaceColor.description", "高炉的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.SmokerColor.name", "烟熏炉颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.SmokerColor.description", "烟熏炉的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DispenserColor.name", "分配器颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DispenserColor.description", "分配器的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DropperColor.name", "投掷器颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DropperColor.description", "投掷器的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.HopperColor.name", "漏斗颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.HopperColor.description", "漏斗的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.CraftingTableColor.name", "工作台颜色");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.CraftingTableColor.description", "工作台的颜色");
        languageBase.put("Module.Modules.StorageESP.Options.MultipleOption.Mode.name", "模式");
        languageBase.put("Module.Modules.StorageESP.Options.MultipleOption.Mode.description", "是否绘制填充方块");
        languageBase.put("Module.Modules.HitBoxDesync.name", "碰撞盒错位");
        languageBase.put("Module.Modules.HitBoxDesync.description", "将你的碰撞盒稍微移动以与实际位置错位");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Alternating.name", "交替");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Alternating.description", "每个间隔切换两个方向");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Specific.name", "特定");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Specific.description", "交替时使用精确偏移");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.AutoDisable.name", "自动禁用");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.AutoDisable.description", "一个周期后禁用模块");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.JumpDisable.name", "跳跃禁用");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.JumpDisable.description", "跳跃时禁用模块");
        languageBase.put("Module.Modules.MurdererCatcher.name", "凶手捕捉器");
        languageBase.put("Module.Modules.MurdererCatcher.description", "检测并标记附近玩家死亡时的凶手");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.MarkEnemy.name", "标记凶手");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.MarkEnemy.description", "自动将凶手添加到敌人列表");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.Sound.name", "播放声音");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.Sound.description", "播放声音");
        languageBase.put("Module.Modules.MurdererCatcher.Messages.PlayerDiedSuppose", "玩家 {player} 被 {Murderer} 杀死（距离: {distance}m）");
        languageBase.put("Module.Modules.MurdererCatcher.Messages.ItemCheckSuppose", "玩家 {murderer} 拥有剑！（距离: {distance}m）");
        languageBase.put("Module.Modules.MurdererCatcher.Messages.BowCheck", "玩家 {bowmen} 拥有弓！（距离: {distance}m）");
        languageBase.put("Module.Modules.ColorMatcher.name", "颜色匹配器");
        languageBase.put("Module.Modules.ColorMatcher.description", "根据染料颜色高亮显示彩色方块，可在可配置范围内");
        languageBase.put("Module.Modules.ColorMatcher.Options.MultipleOption.Mode.name", "模式");
        languageBase.put("Module.Modules.ColorMatcher.Options.MultipleOption.Mode.description", "高亮的视觉风格（填充、轮廓或两者）");
        languageBase.put("Module.Modules.ColorMatcher.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.ColorMatcher.Options.DoubleOption.Range.description", "最大搜索半径（方块）");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.NearestColor.name", "最近颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.NearestColor.description", "用于高亮最近彩色方块的特殊颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.WhiteColor.name", "白色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.WhiteColor.description", "白色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.OrangeColor.name", "橙色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.OrangeColor.description", "橙色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.MagentaColor.name", "品红色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.MagentaColor.description", "品红色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightBlueColor.name", "浅蓝色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightBlueColor.description", "浅蓝色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.YellowColor.name", "黄色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.YellowColor.description", "黄色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LimeColor.name", "青色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LimeColor.description", "青色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PinkColor.name", "粉色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PinkColor.description", "粉色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GrayColor.name", "灰色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GrayColor.description", "灰色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightGrayColor.name", "浅灰色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightGrayColor.description", "浅灰色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.CyanColor.name", "青绿色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.CyanColor.description", "青绿色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PurpleColor.name", "紫色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PurpleColor.description", "紫色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlueColor.name", "蓝色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlueColor.description", "蓝色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BrownColor.name", "棕色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BrownColor.description", "棕色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GreenColor.name", "绿色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GreenColor.description", "绿色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.RedColor.name", "红色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.RedColor.description", "红色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlackColor.name", "黑色");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlackColor.description", "黑色彩色方块的高亮颜色");
        languageBase.put("Module.Modules.FakeAnimalCatcher.name", "假动物捕捉器");
        languageBase.put("Module.Modules.FakeAnimalCatcher.description", "检测并高亮可能是假玩家或伪装机器人的动物");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.BooleanOption.Shine.name", "发光");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.BooleanOption.Shine.description", "为高亮的假动物应用发光效果");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.FillColor.name", "填充颜色");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.FillColor.description", "动物模型的填充颜色");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.OutlineColor.name", "轮廓颜色");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.OutlineColor.description", "动物模型轮廓的颜色");
        languageBase.put("Module.Modules.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.AntiCheat.description", "全局反作弊预设，调整所有模块以保持未被检测");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.AntiCheat.name", "反作弊");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.AntiCheat.description", "要适应的反作弊或服务器类型");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.RotateMode.name", "旋转模式");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.RotateMode.description", "战斗模块使用的默认旋转方法");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.SwingMode.name", "挥动模式");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.SwingMode.description", "战斗模块使用的默认挥动动画");
        languageBase.put("Module.Modules.AutoLogout.name", "自动登出");
        languageBase.put("Module.Modules.AutoLogout.description", "在满足危险条件时自动从服务器断开连接");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AutoDisable.name", "自动禁用");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AutoDisable.description", "成功断开连接后禁用模块");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AntiMistake.name", "防误操作");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AntiMistake.description", "通过等待短暂延迟防止即时断开");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.RegretTime.name", "后悔时间");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.RegretTime.description", "允许断开连接前的等待时间（秒）");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IllegalDisconnect.name", "非法断开连接");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IllegalDisconnect.description", "发送无效数据包以强制断开连接");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Health.name", "低生命值");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Health.description", "生命值低于阈值时断开连接");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.LowestHealth.name", "最低生命值");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.LowestHealth.description", "触发断开连接的生命值");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Players.name", "玩家数量");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Players.description", "玩家数量超过限制时断开连接");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MaxPlayers.name", "最大玩家数量");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MaxPlayers.description", "允许的最大玩家数量");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Distance.name", "敌人距离");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Distance.description", "敌人距离过近时断开连接");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MinDistance.name", "最小距离");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MinDistance.description", "触发断开连接的最小距离");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IgnoreFriend.name", "忽略好友");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IgnoreFriend.description", "在检查玩家数量和距离时排除好友");
        languageBase.put("Module.Modules.AutoLogout.Messages.LowHealth", "低生命值: {health}");
        languageBase.put("Module.Modules.AutoLogout.Messages.TooManyPlayers", "玩家过多: {amount}");
        languageBase.put("Module.Modules.AutoLogout.Messages.TooCloseAround", "附近有敌人: {distance}");
        languageBase.put("Module.Modules.AutoRepairArmor.name", "自动修复盔甲");
        languageBase.put("Module.Modules.AutoRepairArmor.description", "耐久度低时自动使用经验瓶修复盔甲");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Notify.name", "通知");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Notify.description", "修复物品时通知你");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Sounds.name", "播放声音");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Sounds.description", "修复物品时播放声音");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.DurabilityCheck.name", "耐久度检查");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.DurabilityCheck.description", "所有物品修复完成后停止修复");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Rotate.name", "旋转");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Rotate.description", "投掷经验瓶前向上看");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Swing.name", "挥动");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Swing.description", "投掷时执行挥动动画");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.DoubleOption.Delay.description", "每次投掷经验瓶之间的延迟（毫秒）");
        languageBase.put("Module.Modules.AutoRepairArmor.Messages.Repairing", "正在尝试修复盔甲");
        languageBase.put("Module.Modules.AutoRepairArmor.Messages.Stopped", "已停止修复盔甲");
        languageBase.put("Module.Modules.Scoreboard.name", "记分板");
        languageBase.put("Module.Modules.Scoreboard.description", "自定义记分板外观");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Hide.name", "隐藏");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Hide.description", "隐藏记分板");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleColor.name", "标题颜色");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleColor.description", "记分板标题的颜色");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TextColor.name", "文本颜色");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TextColor.description", "记分板文本的颜色");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Rounded.name", "圆角");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Rounded.description", "为背景应用圆角");
        languageBase.put("Module.Modules.Scoreboard.Options.DoubleOption.Radius.name", "半径");
        languageBase.put("Module.Modules.Scoreboard.Options.DoubleOption.Radius.description", "启用圆角时的圆角半径");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.TitleBackground.name", "标题背景");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.TitleBackground.description", "在记分板标题后绘制背景");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleBackgroundColor.name", "标题背景颜色");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleBackgroundColor.description", "标题背景的颜色");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Background.name", "背景");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Background.description", "在记分板后绘制背景");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.BackgroundColor.name", "背景颜色");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.BackgroundColor.description", "记分板背景的颜色");
        languageBase.put("Module.Modules.ThemeEditor.name", "主题编辑器");
        languageBase.put("Module.Modules.ThemeEditor.description", "编辑Vergence客户端的主题");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.DisplayName.name", "显示名称");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.DisplayName.description", "主题的显示名称");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Description.name", "描述");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Description.description", "主题的简要描述");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Author.name", "作者");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Author.description", "主题的作者（用逗号分隔）");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainColor.name", "主色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainColor.description", "主题的主要颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageBackgroundColor.name", "主页面背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageBackgroundColor.description", "主页面的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageSplitLineColor.name", "主页面分割线颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageSplitLineColor.description", "主页面分割线的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryBackgroundColor.name", "分类背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryBackgroundColor.description", "分类的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryTextColor.name", "分类文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryTextColor.description", "分类的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredBackgroundColor.name", "分类悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredBackgroundColor.description", "分类悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredTextColor.name", "分类悬停文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredTextColor.description", "分类悬停时的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentBackgroundColor.name", "当前分类背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentBackgroundColor.description", "当前分类的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentTextColor.name", "当前分类文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentTextColor.description", "当前分类的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleBackgroundColor.name", "模块背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleBackgroundColor.description", "模块的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledBackgroundColor.name", "启用模块背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledBackgroundColor.description", "启用模块的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleTextColor.name", "模块文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleTextColor.description", "模块的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledTextColor.name", "启用模块文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledTextColor.description", "启用模块的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredBackgroundColor.name", "模块悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredBackgroundColor.description", "模块悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredTextColor.name", "模块悬停文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredTextColor.description", "模块悬停时的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleGearTextColor.name", "模块齿轮文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleGearTextColor.description", "模块齿轮的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredGearTextColor.name", "模块悬停齿轮文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredGearTextColor.description", "模块悬停时齿轮的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledGearTextColor.name", "启用模块齿轮文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledGearTextColor.description", "启用模块时齿轮的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationBackgroundColor.name", "通知背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationBackgroundColor.description", "通知的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationTextColor.name", "通知文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationTextColor.description", "通知的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationHighlightTextColor.name", "通知高亮文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationHighlightTextColor.description", "通知中高亮文本的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonCircleColor.name", "按钮圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonCircleColor.description", "按钮的圆形部分颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonInlineColor.name", "按钮内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonInlineColor.description", "按钮的内联部分颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledCircleColor.name", "启用按钮圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledCircleColor.description", "启用按钮的圆形部分颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledInlineColor.name", "启用按钮内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledInlineColor.description", "启用按钮的内联部分颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonBackgroundColor.name", "按钮背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonBackgroundColor.description", "按钮的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredBackgroundColor.name", "按钮悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredBackgroundColor.description", "按钮悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledBackgroundColor.name", "启用按钮背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledBackgroundColor.description", "启用按钮的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredInlineColor.name", "按钮悬停内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredInlineColor.description", "按钮悬停时的内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredCircleColor.name", "按钮悬停圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredCircleColor.description", "按钮悬停时的圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderBackgroundColor.name", "滑块背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderBackgroundColor.description", "滑块的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredBackgroundColor.name", "滑块悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredBackgroundColor.description", "滑块悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderCircleColor.name", "滑块圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderCircleColor.description", "滑块的圆形部分颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderInlineColor.name", "滑块内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderInlineColor.description", "滑块的内联部分颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredCircleColor.name", "滑块悬停圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredCircleColor.description", "滑块悬停时的圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredInlineColor.name", "滑块悬停内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredInlineColor.description", "滑块悬停时的内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedCircleColor.name", "滑块点击圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedCircleColor.description", "滑块点击时的圆形颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedInlineColor.name", "滑块点击内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedInlineColor.description", "滑块点击时的内联颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderValuedBackgroundColor.name", "滑块值背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderValuedBackgroundColor.description", "滑块值部分的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionsTextColor.name", "选项文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionsTextColor.description", "选项的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionAreaBackgroundColor.name", "选项区域背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionAreaBackgroundColor.description", "选项区域的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HudEditorTipsTextColor.name", "HUD编辑器提示文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HudEditorTipsTextColor.description", "HUD编辑器提示的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentBackgroundColor.name", "悬停组件背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentBackgroundColor.description", "悬停组件的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentTextColor.name", "悬停组件文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentTextColor.description", "悬停组件的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionBackgroundColor.name", "描述背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionBackgroundColor.description", "描述的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionTextColor.name", "描述文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionTextColor.description", "描述的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChatPrefixColor.name", "聊天前缀颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChatPrefixColor.description", "聊天前缀的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.TopBarBackgroundColor.name", "顶部栏背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.TopBarBackgroundColor.description", "顶部栏的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameBackgroundColor.name", "输入框背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameBackgroundColor.description", "输入框的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameTextColor.name", "输入框文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameTextColor.description", "输入框的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredBackgroundColor.name", "输入框悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredBackgroundColor.description", "输入框悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredTextColor.name", "输入框悬停文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredTextColor.description", "输入框悬停时的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesBackgroundColor.name", "选项背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesBackgroundColor.description", "选项的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesTextColor.name", "选项文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesTextColor.description", "选项的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredBackgroundColor.name", "选项悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredBackgroundColor.description", "选项悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredTextColor.name", "选项悬停文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredTextColor.description", "选项悬停时的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultBackgroundColor.name", "选项默认背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultBackgroundColor.description", "选项的默认背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultTextColor.name", "选项默认文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultTextColor.description", "选项的默认文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledBackgroundColor.name", "启用选项背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledBackgroundColor.description", "启用选项的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledTextColor.name", "启用选项文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledTextColor.description", "启用选项的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesAreaBackgroundColor.name", "选项区域背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesAreaBackgroundColor.description", "选项区域的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteBackgroundColor.name", "颜色调色板背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteBackgroundColor.description", "颜色调色板的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteOutlineColor.name", "颜色调色板轮廓颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteOutlineColor.description", "颜色调色板的轮廓颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenBackgroundColor.name", "主题页面选中组件背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenBackgroundColor.description", "主题页面选中组件的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentTextColor.name", "主题页面组件文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentTextColor.description", "主题页面组件的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentAuthorsColor.name", "主题页面组件作者颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentAuthorsColor.description", "主题页面组件作者的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredAuthorsColor.name", "主题页面组件悬停作者颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredAuthorsColor.description", "主题页面组件悬停时作者的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenAuthorsColor.name", "主题页面选中组件作者颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenAuthorsColor.description", "主题页面选中组件作者的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredBackgroundColor.name", "主题页面组件悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredBackgroundColor.description", "主题页面组件悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentBackgroundColor.name", "主题页面组件背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentBackgroundColor.description", "主题页面组件的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredTextColor.name", "主题页面组件悬停文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredTextColor.description", "主题页面组件悬停时的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenTextColor.name", "主题页面选中组件文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenTextColor.description", "主题页面选中组件的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenBackgroundColor.name", "配置页面选中组件背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenBackgroundColor.description", "配置页面选中组件的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentTextColor.name", "配置页面组件文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentTextColor.description", "配置页面组件的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentDateColor.name", "配置页面组件日期颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentDateColor.description", "配置页面组件日期的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredDateColor.name", "配置页面组件悬停日期颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredDateColor.description", "配置页面组件悬停时日期的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenDateColor.name", "配置页面选中组件日期颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenDateColor.description", "配置页面选中组件日期的颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredBackgroundColor.name", "配置页面组件悬停背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredBackgroundColor.description", "配置页面组件悬停时的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentBackgroundColor.name", "配置页面组件背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentBackgroundColor.description", "配置页面组件的背景颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredTextColor.name", "配置页面组件悬停文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredTextColor.description", "配置页面组件悬停时的文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenTextColor.name", "配置页面选中组件文本颜色");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenTextColor.description", "配置页面选中组件的文本颜色");
        languageBase.put("Module.Modules.PingLagSpoof.name", "延迟伪造");
        languageBase.put("Module.Modules.PingLagSpoof.description", "通过延迟保持连接数据包来伪造你的延迟");
        languageBase.put("Module.Modules.PingLagSpoof.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.PingLagSpoof.Options.DoubleOption.Delay.description", "伪造延迟的延迟（毫秒）");
        languageBase.put("Module.Modules.AutoBowAim.name", "自动弓箭瞄准");
        languageBase.put("Module.Modules.AutoBowAim.description", "自动将你的弓箭瞄准目标");
        languageBase.put("Module.Modules.AutoBowAim.Options.MultipleOption.Targets.name", "目标");
        languageBase.put("Module.Modules.AutoBowAim.Options.MultipleOption.Targets.description", "要瞄准的实体类型");
        languageBase.put("Module.Modules.AutoBowAim.Options.DoubleOption.Range.name", "范围");
        languageBase.put("Module.Modules.AutoBowAim.Options.DoubleOption.Range.description", "瞄准目标的最大距离");
        languageBase.put("Module.Modules.FastEat.name", "快速进食");
        languageBase.put("Module.Modules.FastEat.description", "加快进食速度");
        languageBase.put("Module.Modules.FastEat.Options.EnumOption.Mode.name", "模式");
        languageBase.put("Module.Modules.FastEat.Options.EnumOption.Mode.description", "用于加快进食的模式");
        languageBase.put("Module.Modules.FastEat.Options.DoubleOption.Ticks.name", "刻数");
        languageBase.put("Module.Modules.FastEat.Options.DoubleOption.Ticks.description", "加快进食速度的刻数");
        languageBase.put("Module.Modules.MultipleTask.name", "多任务");
        languageBase.put("Module.Modules.MultipleTask.description", "同时执行多个任务");
        languageBase.put("Module.Modules.NoEntityTrace.name", "无实体追踪");
        languageBase.put("Module.Modules.NoEntityTrace.description", "防止服务器追踪实体");
        languageBase.put("Module.Modules.NoEntityTrace.Options.BooleanOption.OnlyPickaxe.name", "仅镐");
        languageBase.put("Module.Modules.NoEntityTrace.Options.BooleanOption.OnlyPickaxe.description", "仅在手持镐时应用无追踪效果");
        languageBase.put("Module.Modules.NoInteract.name", "无交互");
        languageBase.put("Module.Modules.NoInteract.description", "防止与实体和方块交互");
        languageBase.put("Module.Modules.LagNotify.name", "延迟通知");
        languageBase.put("Module.Modules.LagNotify.description", "在服务器延迟或客户端高延迟时通知你");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ServerLagging.name", "服务器延迟");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ServerLagging.description", "服务器响应时间超过阈值时通知");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ClientLayback.name", "客户端延迟");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ClientLayback.description", "客户端体验到显著延迟时通知");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.Sounds.name", "播放声音");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.Sounds.description", "检测到延迟时播放声音");
        languageBase.put("Module.Modules.LagNotify.Messages.ServerLag", "服务器延迟: {timer}秒");
        languageBase.put("Module.Modules.LagNotify.Messages.ClientLag", "客户端延迟: {timer}秒");
        languageBase.put("Module.Modules.FastLatencyCalc.name", "快速延迟计算");
        languageBase.put("Module.Modules.FastLatencyCalc.description", "通过发送命令补全请求计算延迟");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Delay.name", "延迟");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Delay.description", "发送命令补全请求的延迟");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.BooleanOption.spikeNotify.name", "延迟峰值通知");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.BooleanOption.spikeNotify.description", "检测到延迟峰值时通知");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Threshold.name", "阈值");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Threshold.description", "触发延迟峰值通知所需的最小延迟增加");
        languageBase.put("Module.Modules.FastLatencyCalc.Messages.Spike", "检测到延迟峰值");
        languageBase.put("Module.Modules.UnfocusedFPS.name", "未聚焦FPS");
        languageBase.put("Module.Modules.UnfocusedFPS.description", "在游戏窗口未聚焦时限制FPS");
        languageBase.put("Module.Modules.UnfocusedFPS.Options.DoubleOption.FPSLimit.name", "FPS限制");
        languageBase.put("Module.Modules.UnfocusedFPS.Options.DoubleOption.FPSLimit.description", "未聚焦时的最大FPS");
    }
}
