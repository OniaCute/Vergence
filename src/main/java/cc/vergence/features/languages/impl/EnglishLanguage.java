package cc.vergence.features.languages.impl;

import cc.vergence.Vergence;
import cc.vergence.features.languages.Language;
import cc.vergence.features.managers.other.TextManager;

public class EnglishLanguage extends Language {
    public EnglishLanguage() {
        load();
        Vergence.CONSOLE.logInfo("language \"English (English)\" was loaded!");
    }

    @Override
    public void load() {
        languageBase.put("COMMANDS.USAGE", "§6Usage: §e");
        languageBase.put("COMMANDS.Aim.desc", "Aim to pos");
        languageBase.put("COMMANDS.Friend.desc", "Edit friend list");
        languageBase.put("COMMANDS.Enemy.desc", "Edit enemy list");
        languageBase.put("COMMANDS.Bind.desc", "Bind key");
        languageBase.put("COMMANDS.Prefix.desc", "Set command prefix");
        languageBase.put("COMMANDS.Toggle.desc", "Toggle module status");
        languageBase.put("COMMANDS.CONFIG.desc", "Manage configuration files");
        languageBase.put("COMMANDS.MESSAGE.COMMAND_NOT_FOUND", "No commands found about:");
        languageBase.put("COMMANDS.MESSAGE.INVALID_COMMAND", "§cInvalid Command! §fType§b help§f for a list of commands");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.LIST_TITLE", "§bFriends:");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.EMPTY", "Friends list is empty");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.RESET", "Friends list got reset");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.REMOVE", "Friend removed successfully");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.ADD", "Friend added successfully");
        languageBase.put("COMMANDS.MESSAGE.FRIEND.IS_ENEMY", "§cThis player in your enemy list!");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.LIST_TITLE", "§bEnemies:");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.EMPTY", "Enemies list is empty");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.RESET", "Enemies list got reset");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.REMOVE", "Enemy removed successfully");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.ADD", "Enemy added successfully");
        languageBase.put("COMMANDS.MESSAGE.ENEMY.IS_FRIEND", "§cThis player in your friend list!");
        languageBase.put("COMMANDS.MESSAGE.BIND.UNKNOWN_MODULE", "Target is a unknown module");
        languageBase.put("COMMANDS.MESSAGE.BIND.NO_KEY", "Please specify a key");
        languageBase.put("COMMANDS.MESSAGE.BIND.UNKNOWN_ERROR", "Unknown internal error");
        languageBase.put("COMMANDS.MESSAGE.BIND.BIND_OK", "Key bind successfully");
        languageBase.put("COMMANDS.MESSAGE.PREFIX.NO_PREFIX", "Please specify a prefix. (one char)");
        languageBase.put("COMMANDS.MESSAGE.PREFIX.OK", "Now prefix is");
        languageBase.put("COMMANDS.MESSAGE.TOGGLE.UNKNOWN_MODULE", "Target is a unknown module");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.SAVED", "Saved config \"{config}\"");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.LOADED", "Loaded config \"{config}\"");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.LIST_TITLE", "Configs:");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.NO_CONFIGS", "§cNo configs found.");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.NOT_FOUND", "Config §b{config} §rnot found.");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.MISSING_NAME", "§cPlease specify a config name.");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.DELETED", "Deleted config file \"{config}\"");
        languageBase.put("COMMANDS.CONFIG.MESSAGE.CANNOT_DELETE_DEFAULT", "§cCannot delete default config file.");
        languageBase.put("COMMANDS.THEME.desc", "Manage custom themes");
        languageBase.put("COMMANDS.THEME.MESSAGE.SAVED", "Saved theme \"{theme}\"");
        languageBase.put("COMMANDS.THEME.MESSAGE.LOADED", "Loaded theme \"{theme}\"");
        languageBase.put("COMMANDS.THEME.MESSAGE.LIST_TITLE", "Themes:");
        languageBase.put("COMMANDS.THEME.MESSAGE.NO_THEMES", "§cNo themes found!");
        languageBase.put("COMMANDS.THEME.MESSAGE.NOT_FOUND", "Theme §b{theme} §rnot found.");
        languageBase.put("COMMANDS.THEME.MESSAGE.MISSING_NAME", "§cPlease specify a theme name.");
        languageBase.put("COMMANDS.THEME.MESSAGE.DELETED", "Deleted theme \"{theme}\"");
        languageBase.put("COMMANDS.THEME.MESSAGE.CANNOT_DELETE_DEFAULT", "§cCannot delete default theme.");

        languageBase.put("SCREEN.MainMenu.Buttons.SinglePlayer", "Single Player");
        languageBase.put("SCREEN.MainMenu.Buttons.MultiPlayer", "Multiplayer");
        languageBase.put("SCREEN.MainMenu.Buttons.Options", "Options");
        languageBase.put("SCREEN.MainMenu.Buttons.Exit", "Exit");

        languageBase.put("Module.Category.CLIENT.name", "Client");
        languageBase.put("Module.Category.COMBAT.name", "Combat");
        languageBase.put("Module.Category.MOVEMENT.name", "Movement");
        languageBase.put("Module.Category.PLAYER.name", "Player");
        languageBase.put("Module.Category.EXPLOIT.name", "Exploit");
        languageBase.put("Module.Category.VISUAL.name", "Visual");
        languageBase.put("Module.Category.MISC.name", "Misc");
        languageBase.put("Module.Category.HUD.name", "HUD");

        languageBase.put("Module.Special.Options.MultipleOptions.Empty", "Empty");
        languageBase.put("Module.Special.Messages.Blocked", "Module §b{a} §ris §cblocked by §b{b}§r");
        languageBase.put("Module.Special.Messages.Unblock", "Module §b{a} §ris §aunblocked by §b{b}§r");
        languageBase.put("Module.Special.Messages.Enable", "Module {module} is §aEnabled");
        languageBase.put("Module.Special.Messages.Disable", "Module {module} is §cDisabled");
        languageBase.put("Module.Special.ModuleBind.name", "Hotkey");
        languageBase.put("Module.Special.ModuleBind.description", "The hotkey of the module");
        languageBase.put("Module.Special.ModulePriority.name", "Priority");
        languageBase.put("Module.Special.ModulePriority.description", "The priority of the module");
        languageBase.put("Module.Special.ModuleDraw.name", "Display");
        languageBase.put("Module.Special.ModuleDraw.description", "Display module in ArrayList");

        languageBase.put("Theme.DefaultTheme.name", "Default Theme");
        languageBase.put("Theme.DefaultTheme.description", "The default theme of vergence client");
        languageBase.put("Theme.Messages.Loaded", "Theme \"{theme}\" ({raw_theme}) is loaded!");

        languageBase.put("Config.Messages.Loaded", "Config \"{config}\" is loaded!");
        languageBase.put("Config.Messages.OutOfDate", "The version of config \"{version}\" may be out of date!");

        languageBase.put("Module.Modules.ClickGUI.name", "Click GUI");
        languageBase.put("Module.Modules.ClickGUI.description", "The options of click gui");
        languageBase.put("Module.Modules.ClickGUI.Options.TextOption.Title.name", "Title");
        languageBase.put("Module.Modules.ClickGUI.Options.TextOption.Title.description", "The title of client click gui");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.BlurBackground.name", "Blur Background");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.BlurBackground.description", "Use blur effect in background of ClickGui");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.ShowOptionDescription.name", "Show Option Description");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.ShowOptionDescription.description", "display the options descriptions");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchForDescription.name", "Search For Description");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchForDescription.description", "Include option descriptions in search");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchIgnoreCase.name", "Search Ignore Case");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.SearchIgnoreCase.description", "Ignore case when searching");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.RainbowSync.name", "Rainbow SYNC");
        languageBase.put("Module.Modules.ClickGUI.Options.BooleanOption.RainbowSync.description", "Make all the colors of the rainbow the same");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowOffset.name", "Rainbow Offset");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowOffset.description", "The maximum offset between each of the rainbow colors");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowSpeed.name", "Rainbow Speed");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.RainbowSpeed.description", "The speed at which the colors of the rainbow color change");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.MainPageAnimationTime.name", "MainPage Animation Time");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.MainPageAnimationTime.description", "The duration of animation");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ModuleSpreadAnimationTime.name", "Module Animation Time");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ModuleSpreadAnimationTime.description", "The duration of animation");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.OptionsSpreadAnimationTime.name", "Options Animation Time");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.OptionsSpreadAnimationTime.description", "The duration of animation");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.DescriptionSpreadAnimationTime.name", "Description Animation Time");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.DescriptionSpreadAnimationTime.description", "The duration of animation");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollAnimationTime.name", "Scroll Animation Time");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollAnimationTime.description", "The duration of animation");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollScale.name", "Scroll Scale");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ScrollScale.description", "The scale of the distance that the rollers roll");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ColorAnimationTime.name", "Color Animation Time");
        languageBase.put("Module.Modules.ClickGUI.Options.DoubleOption.ColorAnimationTime.description", "The duration of animation");

        languageBase.put("Module.Modules.Client.name", "Client");
        languageBase.put("Module.Modules.Client.description", "Manage many settings of vergence client");
        languageBase.put("Module.Modules.Client.Options.BooleanOption.Sync.name", "SYNC");
        languageBase.put("Module.Modules.Client.Options.BooleanOption.Sync.description", "Share your Vergence user status so that you can be seen by other users who have enabled Sync and have their Vergence icons displayed");
        languageBase.put("Module.Modules.Client.Options.TextOption.Brand.name", "Brand");
        languageBase.put("Module.Modules.Client.Options.TextOption.Brand.description", "Client brand name");
        languageBase.put("Module.Modules.Client.Options.EnumOption.UIScale.name", "UI Scale");
        languageBase.put("Module.Modules.Client.Options.EnumOption.UIScale.description", "The UI scale of client");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Language.name", "Language");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Language.description", "The language of client");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Font.name", "Font");
        languageBase.put("Module.Modules.Client.Options.EnumOption.Font.description", "The font style of client");

        languageBase.put("Module.Modules.Notify.name", "Notify");
        languageBase.put("Module.Modules.Notify.description", "On-screen notification system for alerts and messages");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.Align.name", "Align");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.Align.description", "Horizontal alignment of notifications");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.PopType.name", "Pop Type");
        languageBase.put("Module.Modules.Notify.Options.EnumOption.PopType.description", "Direction of the notification animation");
        languageBase.put("Module.Modules.Notify.Options.BooleanOption.Rounded.name", "Rounded");
        languageBase.put("Module.Modules.Notify.Options.BooleanOption.Rounded.description", "Round the corners of notification backgrounds");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Radius.name", "Radius");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Radius.description", "Corner radius when rounded is enabled");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Padding.name", "Padding");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.Padding.description", "Space around notification content");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeWidth.name", "Alive Time Width");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeWidth.description", "Width multiplier of the alive time bar");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.NotificationAliveTime.name", "Notification Alive Time");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.NotificationAliveTime.description", "Duration of each notification");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AnimationTime.name", "Animation Time");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AnimationTime.description", "Duration of the show/hide animation");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeRadius.name", "Alive Time Radius");
        languageBase.put("Module.Modules.Notify.Options.DoubleOption.AliveTimeRadius.description", "Corner radius of the alive-time bar");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.BackgroundColor.name", "Background Color");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.BackgroundColor.description", "Notification background color");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TitleColor.name", "Title Color");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TitleColor.description", "Color of the notification title");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TextColor.name", "Text Color");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.TextColor.description", "Color of the notification body text");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.AliveTimeColor.name", "Alive Time Color");
        languageBase.put("Module.Modules.Notify.Options.ColorOption.AliveTimeColor.description", "Color of the alive-time progress bar");

        languageBase.put("Module.Modules.HudEditor.name", "HUD Editor");
        languageBase.put("Module.Modules.HudEditor.description", "Edit something about HUDs");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.TextColor.name", "Text Color");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.TextColor.description", "The text color of hud in hud editor screen");
        languageBase.put("Module.Modules.HudEditor.Options.BooleanOption.Outline.name", "Outline");
        languageBase.put("Module.Modules.HudEditor.Options.BooleanOption.Outline.description", "Display the outline when the hud is selected");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.OutlineColor.name", "Outline Color");
        languageBase.put("Module.Modules.HudEditor.Options.ColorOption.OutlineColor.description", "The outline color of hud");

        languageBase.put("Module.Modules.Watermark.name", "Watermark");
        languageBase.put("Module.Modules.Watermark.description", "Draw a watermark on the screen");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.CustomTitle.name", "Custom Title");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.CustomTitle.description", "Whether to customize the watermark title");
        languageBase.put("Module.Modules.Watermark.Options.TextOption.Title.name", "Title");
        languageBase.put("Module.Modules.Watermark.Options.TextOption.Title.description", "the watermark title");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Outline.name", "Outline");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Outline.description", "Display outline");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.OutlineWidth.name", "Outline Width");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.OutlineWidth.description", "The width of outline");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Rounded.name", "Rounded Rect");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Rounded.description", "Apply rounded rect to the watermark");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.Radius.name", "Rounded Radius");
        languageBase.put("Module.Modules.Watermark.Options.DoubleOption.Radius.description", "The radius of watermark");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Split.name", "Split");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.Split.description", "Display each part of the Watermark in separate sections");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedTime.name", "Include Time");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedTime.description", "Incorporate the time component into the watermark");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedFPS.name", "Include FPS");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedFPS.description", "Incorporate the fps component into the watermark");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedUser.name", "Include Username");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedUser.description", "Incorporate the username component into the watermark");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedConfig.name", "Include Config");
        languageBase.put("Module.Modules.Watermark.Options.BooleanOption.IncludedConfig.description", "Incorporate the config component into the watermark");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.TextColor.name", "Text Color");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.TextColor.description", "The text color of watermark");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.BackgroundColor.name", "Background Color");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.BackgroundColor.description", "The background color of watermark");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.OutlineColor.name", "Outline Color");
        languageBase.put("Module.Modules.Watermark.Options.ColorOption.OutlineColor.description", "The outline color of watermark");

        languageBase.put("Module.Modules.Spammer.name", "Spammer");
        languageBase.put("Module.Modules.Spammer.description", "Auto type some text to chat screen");
        languageBase.put("Module.Modules.Spammer.Options.DoubleOption.Cooldown.name", "Cool Down");
        languageBase.put("Module.Modules.Spammer.Options.DoubleOption.Cooldown.description", "The cooling time for sending messages");
        languageBase.put("Module.Modules.Spammer.Options.EnumOption.ListOrder.name", "List Order");
        languageBase.put("Module.Modules.Spammer.Options.EnumOption.ListOrder.description", "The order of the text list");
        languageBase.put("Module.Modules.Spammer.Options.TextOption.FileName.name", "File Name");
        languageBase.put("Module.Modules.Spammer.Options.TextOption.FileName.description", "The file name of text list");

        languageBase.put("Module.Modules.AutoSprint.name", "Auto Sprint");
        languageBase.put("Module.Modules.AutoSprint.description", "Always sprint when you move");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.Attack.name", "Attack");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.Attack.description", "The module will have an impact when you attack");
        languageBase.put("Module.Modules.AutoSprint.Options.DoubleOption.AttackCounteract.name", "Attack Counteract");
        languageBase.put("Module.Modules.AutoSprint.Options.DoubleOption.AttackCounteract.description", "The counteract scale of attack");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.UseItem.name", "Using Items");
        languageBase.put("Module.Modules.AutoSprint.Options.BooleanOption.UseItem.description", "Keep sprint while you using items");

        languageBase.put("Module.Modules.FastUse.name", "Fast Use");
        languageBase.put("Module.Modules.FastUse.description", "Reduce the delay between actions");
        languageBase.put("Module.Modules.FastUse.Options.DoubleOption.Delay.name", "Delay");
        languageBase.put("Module.Modules.FastUse.Options.DoubleOption.Delay.description", "The delay of actions");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Blocks.name", "Blocks");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Blocks.description", "Reduce the spacing between blocks");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Crystals.name", "Crystals");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.Crystals.description", "Reduce the spacing between crystals");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.XP.name", "XP");
        languageBase.put("Module.Modules.FastUse.Options.BooleanOption.XP.description", "Reduce the intervals of discarding the XP bottles");

        languageBase.put("Module.Modules.AntiHungry.name", "Anti Hungry");
        languageBase.put("Module.Modules.AntiHungry.description", "By using a reasonable method, you can reduce the feeling of hunger");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Sprint.name", "Sprint");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Sprint.description", "Cancel sprint packets to prevent hunger");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Ground.name", "Ground");
        languageBase.put("Module.Modules.AntiHungry.Options.BooleanOption.Ground.description", "Modify onGround flag to prevent hunger");

        languageBase.put("Module.Modules.BetterChat.name", "Better Chat");
        languageBase.put("Module.Modules.BetterChat.description", "Allow you to highly customize the chat hud");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.Prefix.name", "Prefix Style");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.Prefix.description", "Choose between Default or Line prefix style for messages");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PrefixColor.name", "Prefix Color");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PrefixColor.description", "Color of the chat prefix");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatPrefix.name", "Chat Prefix");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatPrefix.description", "Text placed before every chat message");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatSuffix.name", "Chat Suffix");
        languageBase.put("Module.Modules.BetterChat.Options.TextOption.ChatSuffix.description", "Text placed after every chat message");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomNameColor.name", "Custom Name Color");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomNameColor.description", "Apply a custom color to your player name");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerNameColor.name", "Player Name Color");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerNameColor.description", "Color used for your player name when custom color is enabled");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomChatColor.name", "Custom Chat Color");
        languageBase.put("Module.Modules.BetterChat.Options.BooleanOption.CustomChatColor.description", "Apply a custom color to your chat messages");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerChatColor.name", "Player Chat Color");
        languageBase.put("Module.Modules.BetterChat.Options.ColorOption.PlayerChatColor.description", "Color used for your chat messages when custom color is enabled");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationTime.name", "Animation Time");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationTime.description", "Duration of the chat message fade in animation in milliseconds");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationOffset.name", "Animation Offset");
        languageBase.put("Module.Modules.BetterChat.Options.DoubleOption.AnimationOffset.description", "Horizontal offset applied to the fade in animation");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.AnimationQuadType.name", "Animation Type");
        languageBase.put("Module.Modules.BetterChat.Options.EnumOption.AnimationQuadType.description", "Easing type used for the chat fade in animation");

        languageBase.put("Module.Modules.SafeMode.name", "Safe Mode");
        languageBase.put("Module.Modules.SafeMode.description", "Try your best to avoid being detected by anti cheat");
        languageBase.put("Module.Modules.SafeMode.Options.EnumOption.AntiCheatMode.name", "Anti Cheat Mode");
        languageBase.put("Module.Modules.SafeMode.Options.EnumOption.AntiCheatMode.description", "Determine which functions need to be blocked by anti cheat mode");
        languageBase.put("Module.Modules.SafeMode.Options.BooleanOption.AllowTimer.name", "Allow Timer");
        languageBase.put("Module.Modules.SafeMode.Options.BooleanOption.AllowTimer.description", "If it is enabled, it means that the Timer can be used. This might result in you being detected by anti cheat");

        languageBase.put("Module.Modules.KillAura.name", "Kill Aura");
        languageBase.put("Module.Modules.KillAura.description", "Auto attacks the closest valid target within range");
        languageBase.put("Module.Modules.KillAura.Options.MultipleOption.Targets.name", "Targets");
        languageBase.put("Module.Modules.KillAura.Options.MultipleOption.Targets.description", "Entity types that will be attacked");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.ClickType.name", "Click Type");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.ClickType.description", "Attack timing method: Old = CPS-based, New = delay after full cooldown");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Range.name", "Range");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Range.description", "Maximum distance to the target for attacks to occur");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.FOV.name", "FOV");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.FOV.description", "Horizontal field of view within which the target must be located");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MinCPS.name", "Min CPS");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MinCPS.description", "Minimum clicks per second");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MaxCPS.name", "Max CPS");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.MaxCPS.description", "Maximum clicks per second");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Delay.name", "Delay");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.Delay.description", "Milliseconds to wait after full cooldown");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.CrosshairLock.name", "Crosshair Lock");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.CrosshairLock.description", "Only attack when the crosshair is directly on the target");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.RotateType.name", "Rotate Type");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.RotateType.description", "Method used to rotate towards the target");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateSpeed.name", "Rotate Speed");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateSpeed.description", "Degrees per tick when rotating towards the target");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.RotateLock.name", "Rotate Lock");
        languageBase.put("Module.Modules.KillAura.Options.BooleanOption.RotateLock.description", "Prevent new rotations for a short time after attacking");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateLockTime.name", "Rotate Lock Time");
        languageBase.put("Module.Modules.KillAura.Options.DoubleOption.RotateLockTime.description", "Duration in milliseconds to lock rotation after an attack");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.SwingMode.name", "Swing Mode");
        languageBase.put("Module.Modules.KillAura.Options.EnumOption.SwingMode.description", "Swing mode when attack");

        languageBase.put("Module.Modules.Scaffold.name", "Scaffold");
        languageBase.put("Module.Modules.Scaffold.description", "Auto places blocks under you while walking");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Sprint.name", "Sprint");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Sprint.description", "Allow sprinting while scaffolding");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Rotate.name", "Rotate");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Rotate.description", "Rotate towards the placement position");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.RotateMode.name", "Rotate Mode");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.RotateMode.description", "Rotation method used to look at the placement spot");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateSpeed.name", "Rotate Speed");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateSpeed.description", "Degrees per tick when rotating to target");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableRotateRandom.name", "Enable Rotate Random");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableRotateRandom.description", "Add small random offsets to rotation");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomYaw.name", "Rotate Random Yaw");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomYaw.description", "Maximum random yaw offset in degrees");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomPitch.name", "Rotate Random Pitch");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateRandomPitch.description", "Maximum random pitch offset in degrees");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Swing.name", "Swing");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.Swing.description", "Perform swing animation when placing");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableSwing.name", "Enable Swing");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.EnableSwing.description", "Enable custom swing settings");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingMode.name", "Swing Mode");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingMode.description", "Where the swing animation is shown");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingHand.name", "Swing Hand");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.SwingHand.description", "Hand used for swing animation");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.PlaceMode.name", "Place Mode");
        languageBase.put("Module.Modules.Scaffold.Options.EnumOption.PlaceMode.description", "Method used to place blocks");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomPlaceDelay.name", "Random Place Delay");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomPlaceDelay.description", "Randomize delay between placements");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMin.name", "Place Delay Min");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMin.description", "Minimum delay in milliseconds");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMax.name", "Place Delay Max");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceDelayMax.description", "Maximum delay in milliseconds");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceableRange.name", "Placeable Range");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.PlaceableRange.description", "Maximum placement distance");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateYawOffset.name", "Rotate Yaw Offset");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotateYawOffset.description", "Additional yaw offset to apply");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotatePitchOffset.name", "Rotate Pitch Offset");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.RotatePitchOffset.description", "Additional pitch offset to apply");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.DoShift.name", "Do Shift");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.DoShift.description", "Auto sneak while scaffolding");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.OnlyBack.name", "Only Back");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.OnlyBack.description", "Only sneak when moving backwards");
        languageBase.put("Module.Modules.Scaffold.Options.MultipleOption.SneakMode.name", "Sneak Mode");
        languageBase.put("Module.Modules.Scaffold.Options.MultipleOption.SneakMode.description", "Sneak interaction method");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.SneakDelay.name", "Sneak Delay");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.SneakDelay.description", "Ticks to wait before sneaking again");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomThreshold.name", "Random Threshold");
        languageBase.put("Module.Modules.Scaffold.Options.BooleanOption.RandomThreshold.description", "Randomize sneak trigger distance");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.Threshold.name", "Threshold");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.Threshold.description", "Fixed distance to trigger sneak");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MaxThreshold.name", "Max Threshold");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MaxThreshold.description", "Maximum random sneak trigger distance");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MinThreshold.name", "Min Threshold");
        languageBase.put("Module.Modules.Scaffold.Options.DoubleOption.MinThreshold.description", "Minimum random sneak trigger distance");

        languageBase.put("Module.Modules.Reach.name", "Reach");
        languageBase.put("Module.Modules.Reach.description", "Change the range of interaction and attack");
        languageBase.put("Module.Modules.Reach.Options.DoubleOption.Range.name", "Range");
        languageBase.put("Module.Modules.Reach.Options.DoubleOption.Range.description", "The range of interaction and attack");

        languageBase.put("Module.Modules.FakePlayer.name", "FakePlayer");
        languageBase.put("Module.Modules.FakePlayer.description", "Create a fake player");
        languageBase.put("Module.Modules.FakePlayer.Options.TextOption.PlayerName.name", "Player Name");
        languageBase.put("Module.Modules.FakePlayer.Options.TextOption.PlayerName.description", "The name of the fake player to be displayed");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.GoldenApple.name", "Golden Apple");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.GoldenApple.description", "Enable golden apple effects on the fake player");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.AutoTotem.name", "Auto Totem");
        languageBase.put("Module.Modules.FakePlayer.Options.BooleanOption.AutoTotem.description", "Auto use a totem when the fake player dies");

        languageBase.put("Module.Modules.SafeWalk.name", "Safe Walk");
        languageBase.put("Module.Modules.SafeWalk.description", "Auto-sneak near edges to prevent falling");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoInject.name", "Do Inject");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoInject.description", "Allow unsafe movement when enabled");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoShift.name", "Do Shift");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.DoShift.description", "Auto-sneak when near an edge");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.OnlyBack.name", "Only Back");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.OnlyBack.description", "Check only the direction behind the player");
        languageBase.put("Module.Modules.SafeWalk.Options.MultipleOption.SneakMode.name", "Sneak Mode");
        languageBase.put("Module.Modules.SafeWalk.Options.MultipleOption.SneakMode.description", "Where to apply sneaking");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.SneakDelay.name", "Sneak Delay");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.SneakDelay.description", "Ticks between resending sneak packets");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.RandomThreshold.name", "Random Threshold");
        languageBase.put("Module.Modules.SafeWalk.Options.BooleanOption.RandomThreshold.description", "Use a random edge detection distance");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.Threshold.name", "Threshold");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.Threshold.description", "Fixed distance from edge to trigger sneaking");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MaxThreshold.name", "Max Threshold");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MaxThreshold.description", "Maximum random edge distance");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MinThreshold.name", "Min Threshold");
        languageBase.put("Module.Modules.SafeWalk.Options.DoubleOption.MinThreshold.description", "Minimum random edge distance");

        languageBase.put("Module.Modules.FOVModifier.name", "FOVModifier");
        languageBase.put("Module.Modules.FOVModifier.description", "Change the fov of the players");
        languageBase.put("Module.Modules.FOVModifier.Options.DoubleOption.FOV.name", "FOV");
        languageBase.put("Module.Modules.FOVModifier.Options.DoubleOption.FOV.description", "The fov");
        languageBase.put("Module.Modules.FOVModifier.Options.BooleanOption.Items.name", "Items");
        languageBase.put("Module.Modules.FOVModifier.Options.BooleanOption.Items.description", "Apply the effect to the items");

        languageBase.put("Module.Modules.Disabler.name", "Disabler");
        languageBase.put("Module.Modules.Disabler.description", "Attempt to disable certain anti cheat behaviors");

        languageBase.put("Module.Modules.InventoryMove.name", "Inventory Move");
        languageBase.put("Module.Modules.InventoryMove.description", "Enable you to be able to move when opening certain GUI");
        languageBase.put("Module.Modules.InventoryMove.Options.BooleanOption.HorizontalCollision.name", "Horizontal Collision");
        languageBase.put("Module.Modules.InventoryMove.Options.BooleanOption.HorizontalCollision.description", "Whether to enable Horizontal Collision when sending packets");


        languageBase.put("Module.Modules.AutoWalk.name", "Auto Walk");
        languageBase.put("Module.Modules.AutoWalk.description", "Move forward automatically");
        languageBase.put("Module.Modules.AutoWalk.Options.EnumOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.AutoWalk.Options.EnumOption.Mode.description", "Baritone support");

        languageBase.put("Module.Modules.NoCooldown.name", "No Cooldown");
        languageBase.put("Module.Modules.NoCooldown.description", "Reduce the cooling time between operations");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Break.name", "Break");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Break.description", "No break cooldown");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Attack.name", "Attack");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Attack.description", "No attack cooldown");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Jump.name", "Jump");
        languageBase.put("Module.Modules.NoCooldown.Options.BooleanOption.Jump.description", "No jump cooldown");
        languageBase.put("Module.Modules.NoCooldown.Options.DoubleOption.JumpTicks.name", "Jump Ticks");
        languageBase.put("Module.Modules.NoCooldown.Options.DoubleOption.JumpTicks.description", "The amount of ticks that have to be waited for before jumping again");

        languageBase.put("Module.Modules.PortalGod.name", "Portal God Mode");
        languageBase.put("Module.Modules.PortalGod.description", "Allows you to interact with portals without being teleported");
        languageBase.put("Module.Modules.PortalGod.Options.BooleanOption.Inventory.name", "Inventory");
        languageBase.put("Module.Modules.PortalGod.Options.BooleanOption.Inventory.description", "Allow interaction with inventory while in a portal");
        languageBase.put("Module.Modules.PortalGod.Options.DoubleOption.ConfirmTime.name", "Confirm Time");
        languageBase.put("Module.Modules.PortalGod.Options.DoubleOption.ConfirmTime.description", "Delay before confirming the teleport");

        languageBase.put("Module.Modules.NoFall.name", "No Fall Damage");
        languageBase.put("Module.Modules.NoFall.description", "Prevent fall damage");
        languageBase.put("Module.Modules.NoFall.Options.EnumOption.AntiCheat.name", "Anti Cheat");
        languageBase.put("Module.Modules.NoFall.Options.EnumOption.AntiCheat.description", "Determine which functions need to be blocked by anti cheat mode");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.HorizontalCollision.name", "HorizontalCollision");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.HorizontalCollision.description", "Enable horizontal collision check for Grim");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.AlwaysActive.name", "AlwaysActive");
        languageBase.put("Module.Modules.NoFall.Options.BooleanOption.AlwaysActive.description", "Always active regardless of falling state");

        languageBase.put("Module.Modules.Placeholder.name", "Placeholder Support");
        languageBase.put("Module.Modules.Placeholder.description", "Display client and player information placeholders");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_ID.name", "{id}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_ID.description", "Client ID placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Name.name", "{name}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Name.description", "Client name placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Full_Name.name", "{full_name}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Full_Name.description", "Client full name placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Version.name", "{version}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Client_Version.description", "Client version placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Player.name", "{player}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Player.description", "Player name placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_HP.name", "{hp}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_HP.description", "Player health placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Max_HP.name", "{max_hp}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Max_HP.description", "Player max health placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Armor.name", "{armor}");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Armor.description", "Player armor placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_OverWorld.name", "{world} (Overworld)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_OverWorld.description", "Overworld dimension placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Nether.name", "{world} (Nether)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_Nether.description", "Nether dimension placeholder");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_TheEnd.name", "{world} (TheEnd)");
        languageBase.put("Module.Modules.Placeholder.Options.TextOption.Placeholder_TheEnd.description", "The End dimension placeholder");

        languageBase.put("Module.Modules.Title.name", "Title");
        languageBase.put("Module.Modules.Title.description", "Customize and animate the window title");
        languageBase.put("Module.Modules.Title.Options.TextOption.Title.name", "Title");
        languageBase.put("Module.Modules.Title.Options.TextOption.Title.description", "Window title text");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.Animation.name", "Animation");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.Animation.description", "Enable title animation");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.ReverseAnimation.name", "Reverse Animation");
        languageBase.put("Module.Modules.Title.Options.BooleanOption.ReverseAnimation.description", "Reverse the animation direction");
        languageBase.put("Module.Modules.Title.Options.DoubleOption.AnimationDelay.name", "Animation Delay");
        languageBase.put("Module.Modules.Title.Options.DoubleOption.AnimationDelay.description", "Delay between animation steps");

        languageBase.put("Module.Modules.BetterTab.name", "Better Tab");
        languageBase.put("Module.Modules.BetterTab.description", "Improve the player tab list with custom colors and limits");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Clean.name", "Clean");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Clean.description", "Remove random character effect");
        languageBase.put("Module.Modules.BetterTab.Options.DoubleOption.PlayerLimit.name", "Player Limit");
        languageBase.put("Module.Modules.BetterTab.Options.DoubleOption.PlayerLimit.description", "Maximum players shown in tab list");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Myself.name", "Myself");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Myself.description", "Apply custom prefix, suffix and color to yourself");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MyPrefix.name", "My Prefix");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MyPrefix.description", "Text placed before your name");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MySuffix.name", "My Suffix");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.MySuffix.description", "Text placed after your name");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.MyColor.name", "My Color");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.MyColor.description", "Color applied to your name");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Friends.name", "Friends");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Friends.description", "Apply custom prefix, suffix and color to friends");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendPrefix.name", "Friend Prefix");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendPrefix.description", "Text placed before friend names");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendSuffix.name", "Friend Suffix");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.FriendSuffix.description", "Text placed after friend names");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.FriendColor.name", "Friend Color");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.FriendColor.description", "Color applied to friend names");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Enemies.name", "Enemies");
        languageBase.put("Module.Modules.BetterTab.Options.BooleanOption.Enemies.description", "Apply custom prefix, suffix and color to enemies");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemyPrefix.name", "Enemy Prefix");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemyPrefix.description", "Text placed before enemy names");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemySuffix.name", "Enemy Suffix");
        languageBase.put("Module.Modules.BetterTab.Options.TextOption.EnemySuffix.description", "Text placed after enemy names");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.EnemyColor.name", "Enemy Color");
        languageBase.put("Module.Modules.BetterTab.Options.ColorOption.EnemyColor.description", "Color applied to enemy names");

        languageBase.put("Module.Modules.ModuleList.name", "Module List");
        languageBase.put("Module.Modules.ModuleList.description", "Display a list of enabled modules on the HUD");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.Align.name", "Align");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.Align.description", "module list alignment");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.FontSize.name", "FontSize");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.FontSize.description", "Font size for module names");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Details.name", "Details");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Details.description", "Show module details");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.DetailsColor.name", "Details Color");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.DetailsColor.description", "Details text color");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.DetailsType.name", "Details Type");
        languageBase.put("Module.Modules.ModuleList.Options.EnumOption.DetailsType.description", "Type of details to display");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Padding.name", "Padding");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Padding.description", "Padding between elements");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.TextColor.name", "TextColor");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.TextColor.description", "Module name color");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Background.name", "Background");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Background.description", "Enable background");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.BackgroundColor.name", "Background Color");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.BackgroundColor.description", "Background color");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rounded.name", "Rounded");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rounded.description", "Round background corners");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Radius.name", "Radius");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.Radius.description", "Corner radius");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rect.name", "Rect");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Rect.description", "Enable rectangle around text");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RectWidth.name", "Rect Width");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RectWidth.description", "Rectangle width");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.RectColor.name", "Rect Color");
        languageBase.put("Module.Modules.ModuleList.Options.ColorOption.RectColor.description", "Rectangle color");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.RoundedRect.name", "Rounded Rect");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.RoundedRect.description", "Round rectangle corners");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RadiusRect.name", "Radius Rect");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.RadiusRect.description", "Rectangle corner radius");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Animation.name", "Animation");
        languageBase.put("Module.Modules.ModuleList.Options.BooleanOption.Animation.description", "Enable fade-in animation");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.AnimationTime.name", "Animation Time");
        languageBase.put("Module.Modules.ModuleList.Options.DoubleOption.AnimationTime.description", "Animation duration");


        languageBase.put("Module.Modules.Advertiser.name", "Advertiser");
        languageBase.put("Module.Modules.Advertiser.description", "Auto advertise messages in chat");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.Command.name", "Command");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.Command.description", "Command to execute for advertisement");
        languageBase.put("Module.Modules.Advertiser.Options.DoubleOption.Cooldown.name", "Cooldown");
        languageBase.put("Module.Modules.Advertiser.Options.DoubleOption.Cooldown.description", "Delay between advertisements");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.FileName.name", "File Name");
        languageBase.put("Module.Modules.Advertiser.Options.TextOption.FileName.description", "File containing advertisement messages");
        languageBase.put("Module.Modules.Advertiser.Options.EnumOption.ListOrder.name", "List Order");
        languageBase.put("Module.Modules.Advertiser.Options.EnumOption.ListOrder.description", "Order of advertisement messages");

        languageBase.put("Module.Modules.Hotkeys.name", "Hotkeys");
        languageBase.put("Module.Modules.Hotkeys.description", "Display bound hotkeys in a HUD list");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.OnlyEnabled.name", "Only Enabled");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.OnlyEnabled.description", "Show only hotkeys of enabled modules");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.FontSize.name", "FontSize");
        languageBase.put("Module.Modules.Hotkeys.Options.EnumOption.FontSize.description", "Font size for hotkey entries");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Padding.name", "Padding");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Padding.description", "Padding between elements");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.Rounded.name", "Rounded");
        languageBase.put("Module.Modules.Hotkeys.Options.BooleanOption.Rounded.description", "Round background corners");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Radius.name", "Radius");
        languageBase.put("Module.Modules.Hotkeys.Options.DoubleOption.Radius.description", "Corner radius");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextTopColor.name", "Text Top Color");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextTopColor.description", "Color of the title text");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextColor.name", "Text Color");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextColor.description", "Color of hotkey text");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundTopColor.name", "Background Top Color");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundTopColor.description", "Background color of the title bar");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundColor.name", "Background Color");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundColor.description", "Background color of the list");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextEnabledColor.name", "Text Enabled Color");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.TextEnabledColor.description", "Text color for enabled modules");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundEnabledColor.name", "Background Enabled Color");
        languageBase.put("Module.Modules.Hotkeys.Options.ColorOption.BackgroundEnabledColor.description", "Background color for enabled modules");

        languageBase.put("Module.Modules.MainMenu.name", "Main Menu");
        languageBase.put("Module.Modules.MainMenu.description", "Customize the appearance of the main menu");
        languageBase.put("Module.Modules.MainMenu.Options.TextOption.Title.name", "Title");
        languageBase.put("Module.Modules.MainMenu.Options.TextOption.Title.description", "Main menu title text");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TitleColor.name", "Title Color");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TitleColor.description", "Color of the title text");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TextColor.name", "Text Color");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.TextColor.description", "General text color in the menu");
        languageBase.put("Module.Modules.MainMenu.Options.BooleanOption.Background.name", "Background");
        languageBase.put("Module.Modules.MainMenu.Options.BooleanOption.Background.description", "Enable background");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.BackgroundColor.name", "Background Color");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.BackgroundColor.description", "Background color of the menu");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonTextColor.name", "Button Text Color");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonTextColor.description", "Text color for buttons");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredTextColor.name", "Button Hovered TextColor");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredTextColor.description", "Text color when button is hovered");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonBackgroundColor.name", "Button Background Color");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonBackgroundColor.description", "Background color for buttons");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredBackgroundColor.name", "Button Hovered Background Color");
        languageBase.put("Module.Modules.MainMenu.Options.ColorOption.ButtonHoveredBackgroundColor.description", "Background color when button is hovered");

        languageBase.put("Module.Modules.AutoSword.name", "Auto Sword");
        languageBase.put("Module.Modules.AutoSword.description", "Auto switches to a sword when enemies are nearby");
        languageBase.put("Module.Modules.AutoSword.Options.MultipleOption.Targets.name", "Targets");
        languageBase.put("Module.Modules.AutoSword.Options.MultipleOption.Targets.description", "entity types to trigger sword switching");
        languageBase.put("Module.Modules.AutoSword.Options.BooleanOption.SlotBack.name", "Slot Back");
        languageBase.put("Module.Modules.AutoSword.Options.BooleanOption.SlotBack.description", "return to previous slot when no targets are nearby");
        languageBase.put("Module.Modules.AutoSword.Options.DoubleOption.Distance.name", "Distance");
        languageBase.put("Module.Modules.AutoSword.Options.DoubleOption.Distance.description", "maximum distance to trigger sword switching");

        languageBase.put("Module.Modules.AirPearl.name", "Air Pearl");
        languageBase.put("Module.Modules.AirPearl.description", "Auto switches to ender pearl when falling");
        languageBase.put("Module.Modules.AirPearl.Options.BooleanOption.FastCheck.name", "Fast Check");
        languageBase.put("Module.Modules.AirPearl.Options.BooleanOption.FastCheck.description", "use simple ground check instead of fall distance");
        languageBase.put("Module.Modules.AirPearl.Options.DoubleOption.Distance.name", "Distance");
        languageBase.put("Module.Modules.AirPearl.Options.DoubleOption.Distance.description", "minimum fall distance to trigger pearl switching");

        languageBase.put("Module.Modules.AutoTool.name", "Auto Tool");
        languageBase.put("Module.Modules.AutoTool.description", "Auto switch to the most suitable tool");
        languageBase.put("Module.Modules.AutoTool.Options.BooleanOption.SlotBack.name", "Slot Back");
        languageBase.put("Module.Modules.AutoTool.Options.BooleanOption.SlotBack.description", "return to previous slot when action finished");

        languageBase.put("Module.Modules.NoBacktrack.name", "No Backtrack");
        languageBase.put("Module.Modules.NoBacktrack.description", "Not displaying the continuity between player actions (may improve performance)");

        languageBase.put("Module.Modules.NoRender.name", "No Render");
        languageBase.put("Module.Modules.NoRender.description", "Disables annoying visual effects and entities");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoHurtCamera.name", "No Hurt Camera");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoHurtCamera.description", "Disable the camera shake effect when taking damage");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoExplosions.name", "No Explosions");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoExplosions.description", "Disable explosion effects");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoParticle.name", "No Particles");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoParticle.description", "Disable particle effects");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoBlindness.name", "No Blindness");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoBlindness.description", "Disable the blindness effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoCorpses.name", "No Corpses");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoCorpses.description", "Disable rendering of dead entities");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoLiquidOverlay.name", "No Liquid Overlay");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoLiquidOverlay.description", "Disable the liquid overlay effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoBlockOverlay.name", "No Block Overlay");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoBlockOverlay.description", "Disable the block overlay effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoFireOverlay.name", "No Fire Overlay");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoFireOverlay.description", "Disable the fire overlay effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoSnowOverlay.name", "No Snow Overlay");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoSnowOverlay.description", "Disable the snow overlay effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoPumpkinOverlay.name", "No Pumpkin Overlay");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoPumpkinOverlay.description", "Disable the pumpkin overlay effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoPortalOverlay.name", "No Portal Overlay");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoPortalOverlay.description", "Disable the portal overlay effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoVignette.name", "No Vignette");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoVignette.description", "Disable the vignette effect");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoFog.name", "No Fog");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoFog.description", "Disable fog effects");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoArmor.name", "No Armor");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoArmor.description", "Disable rendering of armor");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoSignText.name", "No Sign Text");
        languageBase.put("Module.Modules.NoRender.Options.BooleanOption.NoSignText.description", "Disable rendering of sign text");

        languageBase.put("Module.Modules.FreeCamera.name", "Free Camera");
        languageBase.put("Module.Modules.FreeCamera.description", "Allows detached camera movement");
        languageBase.put("Module.Modules.FreeCamera.Options.BooleanOption.RotateSync.name", "Rotate Sync");
        languageBase.put("Module.Modules.FreeCamera.Options.BooleanOption.RotateSync.description", "Sync the actual head turns of the players with the camera");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.HorizontalSpeed.name", "Horizontal Speed");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.HorizontalSpeed.description", "Speed of horizontal camera movement");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.VerticalSpeed.name", "Vertical Speed");
        languageBase.put("Module.Modules.FreeCamera.Options.DoubleOption.VerticalSpeed.description", "Speed of vertical camera movement");

        languageBase.put("Module.Modules.CameraClip.name", "Camera Clip");
        languageBase.put("Module.Modules.CameraClip.description", "Allows your camera clip from wall");
        languageBase.put("Module.Modules.CameraClip.Options.DoubleOption.Distance.name", "Distance");
        languageBase.put("Module.Modules.CameraClip.Options.DoubleOption.Distance.description", "The distance of the third person camera from your character");

        languageBase.put("Module.Modules.Chams.name", "Chams");
        languageBase.put("Module.Modules.Chams.description", "Highlights entities through walls with customizable fill and outline colors");
        languageBase.put("Module.Modules.Chams.Options.MultipleOption.Targets.name", "Targets");
        languageBase.put("Module.Modules.Chams.Options.MultipleOption.Targets.description", "Entity categories to highlight");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderEnemy.name", "Render Enemy");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderEnemy.description", "Highlight enemy players");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderFriend.name", "Render Friend");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderFriend.description", "Highlight friendly players");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderSelf.name", "Render Self");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderSelf.description", "Highlight your own player");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderCrystal.name", "Render Crystal");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.RenderCrystal.description", "Highlight all crystal all the time");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.Shine.name", "Shine");
        languageBase.put("Module.Modules.Chams.Options.BooleanOption.Shine.description", "Apply a glowing effect to highlighted models");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.CrystalFill.name", "Crystal Fill");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.CrystalFill.description", "Fill color for crystal players");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.CrystalOutline.name", "Crystal Outline");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.CrystalOutline.description", "Outline color for crystal players");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyFill.name", "Enemy Fill");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyFill.description", "Fill color for enemy players");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyOutline.name", "Enemy Outline");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.EnemyOutline.description", "Outline color for enemy players");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendFill.name", "Friend Fill");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendFill.description", "Fill color for friendly players");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendOutline.name", "Friend Outline");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.FriendOutline.description", "Outline color for friendly players");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfFill.name", "Self Fill");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfFill.description", "Fill color for your own player");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfOutline.name", "Self Outline");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.SelfOutline.description", "Outline color for your own player");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobFill.name", "Mob Fill");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobFill.description", "Fill color for hostile mobs");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobOutline.name", "Mob Outline");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.MobOutline.description", "Outline color for hostile mobs");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalFill.name", "Animal Fill");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalFill.description", "Fill color for passive animals");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalOutline.name", "Animal Outline");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.AnimalOutline.description", "Outline color for passive animals");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultFill.name", "Default Fill");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultFill.description", "Fallback fill color for unmatched entities");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultOutline.name", "Default Outline");
        languageBase.put("Module.Modules.Chams.Options.ColorOption.DefaultOutline.description", "Fallback outline color for unmatched entities");

        languageBase.put("Module.Modules.FullBright.name", "Full Bright");
        languageBase.put("Module.Modules.FullBright.description", "Removes darkness and provides maximum visibility");
        languageBase.put("Module.Modules.FullBright.Options.EnumOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.FullBright.Options.EnumOption.Mode.description", "Brightness implementation method");

        languageBase.put("Module.Modules.SwingModifier.name", "Swing Modifier");
        languageBase.put("Module.Modules.SwingModifier.description", "Customize attack swing animation speed and movement components");
        languageBase.put("Module.Modules.SwingModifier.Options.DoubleOption.Speed.name", "Speed");
        languageBase.put("Module.Modules.SwingModifier.Options.DoubleOption.Speed.description", "Swing animation speed multiplier");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateX.name", "Translate X");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateX.description", "Enable X-axis translation during swing");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateY.name", "Translate Y");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateY.description", "Enable Y-axis translation during swing");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateZ.name", "Translate Z");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.TranslateZ.description", "Enable Z-axis translation during swing");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationX.name", "Rotation X");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationX.description", "Enable pitch rotation during swing");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationY.name", "Rotation Y");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationY.description", "Enable yaw rotation during swing");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationZ.name", "Rotation Z");
        languageBase.put("Module.Modules.SwingModifier.Options.BooleanOption.RotationZ.description", "Enable roll rotation during swing");

        languageBase.put("Module.Modules.HandModifier.name", "Hand Modifier");
        languageBase.put("Module.Modules.HandModifier.description", "Customize first person hand position and swing progress and eating animation");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.NoEatingAnimation.name", "No Eating Animation");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.NoEatingAnimation.description", "Disable the eating animation");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.MainHandModify.name", "Modify Main Hand");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.MainHandModify.description", "Enable custom swing progress for the main hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.MainHandProgress.name", "Main Hand Progress");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.MainHandProgress.description", "Swing progress for the main hand");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.OffHandModify.name", "Modify Off Hand");
        languageBase.put("Module.Modules.HandModifier.Options.BooleanOption.OffHandModify.description", "Enable custom swing progress for the off hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.OffHandProgress.name", "Off Hand Progress");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.OffHandProgress.description", "Swing progress for the off hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateX.name", "Translate X");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateX.description", "Horizontal offset of the hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateY.name", "Translate Y");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateY.description", "Vertical offset of the hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateZ.name", "Translate Z");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.TranslateZ.description", "Forward/backward offset of the hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationX.name", "Rotation X");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationX.description", "Pitch rotation of the hand in degrees");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationY.name", "Rotation Y");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationY.description", "Yaw rotation of the hand in degrees");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationZ.name", "Rotation Z");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.RotationZ.description", "Roll rotation of the hand in degrees");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleX.name", "Scale X");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleX.description", "Width scale multiplier of the hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleY.name", "Scale Y");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleY.description", "Height scale multiplier of the hand");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleZ.name", "Scale Z");
        languageBase.put("Module.Modules.HandModifier.Options.DoubleOption.ScaleZ.description", "Depth scale multiplier of the hand");

        languageBase.put("Module.Modules.BlockHighlight.name", "Block Highlight");
        languageBase.put("Module.Modules.BlockHighlight.description", "Draws an outline or fill around the block you are looking at");
        languageBase.put("Module.Modules.BlockHighlight.Options.MultipleOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.BlockHighlight.Options.MultipleOption.Mode.description", "Visual style of the highlight");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.FillColor.name", "Fill Color");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.FillColor.description", "Color used when fill mode is enabled");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.Outline.name", "Outline Color");
        languageBase.put("Module.Modules.BlockHighlight.Options.ColorOption.Outline.description", "Color used for the outline");
        languageBase.put("Module.Modules.BlockHighlight.Options.EnumOption.AnimationMode.name", "Animation Mode");
        languageBase.put("Module.Modules.BlockHighlight.Options.EnumOption.AnimationMode.description", "Animation style when the target block changes");
        languageBase.put("Module.Modules.BlockHighlight.Options.DoubleOption.AnimationSmooth.name", "Animation Smooth");
        languageBase.put("Module.Modules.BlockHighlight.Options.DoubleOption.AnimationSmooth.description", "Duration of the slide animation in seconds");

        languageBase.put("Module.Modules.MiddleClickExpansion.name", "Middle Click Expansion");
        languageBase.put("Module.Modules.MiddleClickExpansion.description", "Adds extra actions to the middle mouse button");
        languageBase.put("Module.Modules.MiddleClickExpansion.Options.EnumOption.Action.name", "Action");
        languageBase.put("Module.Modules.MiddleClickExpansion.Options.EnumOption.Action.description", "Action performed on middle click");

        languageBase.put("Module.Modules.SaveBreak.name", "Save Break");
        languageBase.put("Module.Modules.SaveBreak.description", "Save the break progress to ensure it does not abort");

        languageBase.put("Module.Modules.Timer.name", "Timer");
        languageBase.put("Module.Modules.Timer.description", "Globally adjusts game speed");
        languageBase.put("Module.Modules.Timer.Options.DoubleOption.TimerScale.name", "Timer Scale");
        languageBase.put("Module.Modules.Timer.Options.DoubleOption.TimerScale.description", "Multiplier for client tick speed");

        languageBase.put("Module.Modules.MovementLagSpoof.name", "Movement Lag Spoof");
        languageBase.put("Module.Modules.MovementLagSpoof.description", "Delays movement packets to simulate lag");
        languageBase.put("Module.Modules.MovementLagSpoof.Options.DoubleOption.Choke.name", "Choke");
        languageBase.put("Module.Modules.MovementLagSpoof.Options.DoubleOption.Choke.description", "Milliseconds to hold movement packets before releasing");

        languageBase.put("Module.Modules.AntiLevitation.name", "Anti Levitation");
        languageBase.put("Module.Modules.AntiLevitation.description", "Reduce the effect of levitation");

        languageBase.put("Module.Modules.Parkour.name", "Parkour");
        languageBase.put("Module.Modules.Parkour.description", "Try to jump as far as possible along the edges of the block");

        languageBase.put("Module.Modules.TickShift.name", "Tick Shift");
        languageBase.put("Module.Modules.TickShift.description", "Stores idle ticks and releases them for a speed boost");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.SafeDistance.name", "Safe Distance");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.SafeDistance.description", "Fall distance at which TickShift pauses");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.MaxTicks.name", "Max Ticks");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.MaxTicks.description", "Maximum stored ticks available for speed burst");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.Delay.name", "Delay");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.Delay.description", "Ticks to wait before storing another tick");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.TimerSpeed.name", "Timer Speed");
        languageBase.put("Module.Modules.TickShift.Options.DoubleOption.TimerSpeed.description", "Speed multiplier applied when spending stored ticks");

        languageBase.put("Module.Modules.NameProtect.name", "Name Protect");
        languageBase.put("Module.Modules.NameProtect.description", "Add an nick name to protect the real names of local player");
        languageBase.put("Module.Modules.NameProtect.Options.TextOption.NickName.name", "Nick Name");
        languageBase.put("Module.Modules.NameProtect.Options.TextOption.NickName.description", "The nick name of local player");

        languageBase.put("Module.Modules.AutoLogin.name", "Auto Login");
        languageBase.put("Module.Modules.AutoLogin.description", "Auto sends login command when the local player joins the server");
        languageBase.put("Module.Modules.AutoLogin.Options.TextOption.Password.name", "Password");
        languageBase.put("Module.Modules.AutoLogin.Options.TextOption.Password.description", "The password appended to the command");

        languageBase.put("Module.Modules.VisualRange.name", "Visual Range");
        languageBase.put("Module.Modules.VisualRange.description", "Notifies you when players enter or leave your render distance");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerJoin.name", "Player Join");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerJoin.description", "Display a notification when a player enters your visual range");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerLeave.name", "Player Leave");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.PlayerLeave.description", "Display a notification when a player leaves your visual range");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Friend.name", "Include Friends");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Friend.description", "Show notifications even when the player is on your friend list");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Sound.name", "Play Sound");
        languageBase.put("Module.Modules.VisualRange.Options.BooleanOption.Sound.description", "Play a sound along with the notification");
        languageBase.put("Module.Modules.VisualRange.Messages.Join", "Player §b{player} §rhas §ajoined §rthe visual range!");
        languageBase.put("Module.Modules.VisualRange.Messages.Leave", "Player §b{player} §rhas §cleaved §rthe visual range!");

        languageBase.put("Module.Modules.SilentDisconnect.name", "Silent Disconnect");
        languageBase.put("Module.Modules.SilentDisconnect.description", "When you are kicked out of the server, your will be retained in the server");
        languageBase.put("Module.Modules.SilentDisconnect.Messages.Disconnect", "You got §ckicked§r: {reason}");

        languageBase.put("Module.Modules.CarryPro.name", "Carry+");
        languageBase.put("Module.Modules.CarryPro.description", "Keep the items in the composite bar");

        languageBase.put("Module.Modules.AutoRespawn.name", "Auto Respawn");
        languageBase.put("Module.Modules.AutoRespawn.description", "Auto respawn when you die");

        languageBase.put("Module.Modules.PacketsLimit.name", "Packets Limit");
        languageBase.put("Module.Modules.PacketsLimit.description", "Restricts the rate of movement packets sent to the server to reduce anti cheat flags");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Stop.name", "Stop");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Stop.description", "Cancel the sending of the packets when the limit is exceeded");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.ResetTime.name", "Reset Time");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.ResetTime.description", "The interval for resetting a record");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.Limit.name", "Full Packet Limit");
        languageBase.put("Module.Modules.PacketsLimit.Options.DoubleOption.Limit.description", "Maximum Full PlayerMove packets sent in period of time");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Notify.name", "Notify");
        languageBase.put("Module.Modules.PacketsLimit.Options.BooleanOption.Notify.description", "Notify when the number of packets reaches the limit");
        languageBase.put("Module.Modules.PacketsLimit.Messages.Full", "The number of packets has reached the limit!");

        languageBase.put("Module.Modules.NameTags.name", "Name Tags");
        languageBase.put("Module.Modules.NameTags.description", "Renders customizable 3D name tags above players");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.AntiBot.name", "Anti Bot");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.AntiBot.description", "Do not apply name tags to bot players");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Myself.name", "My Self");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Myself.description", "Apply name tags to local player");
        languageBase.put("Module.Modules.NameTags.Options.EnumOption.FonsSize.name", "Font Size");
        languageBase.put("Module.Modules.NameTags.Options.EnumOption.FonsSize.description", "Size of the font used for the name tag");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.TextColor.name", "Text Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.TextColor.description", "Color of the player name and additional text");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.InfoColor.name", "Info Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.InfoColor.description", "Color of the additional information text");
        languageBase.put("Module.Modules.NameTags.Options.MultipleOption.Modes.name", "Modes");
        languageBase.put("Module.Modules.NameTags.Options.MultipleOption.Modes.description", "Visual layers to apply behind the text");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FillColor.name", "Fill Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FillColor.description", "Background fill color when Fill mode is enabled");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.OutlineColor.name", "Outline Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.OutlineColor.description", "Border color when Outline mode is enabled");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.OutlineWidth.name", "Outline Width");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.OutlineWidth.description", "Thickness of the outline border in pixels");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Friend.name", "Friend");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Friend.description", "Apply name tags to friends");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendTextColor.name", "Friend Text Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendTextColor.description", "Color of the friend's name and additional text");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendInfoColor.name", "Friend Info Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendInfoColor.description", "Color of the additional information text for friends");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendFillColor.name", "Friend Fill Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendFillColor.description", "Background fill color for friends when Fill mode is enabled");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendOutlineColor.name", "Friend Outline Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.FriendOutlineColor.description", "Border color for friends when Outline mode is enabled");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Enemy.name", "Enemy");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Enemy.description", "Apply name tags to enemies");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyTextColor.name", "Enemy Text Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyTextColor.description", "Color of the enemy's name and additional text");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyInfoColor.name", "Enemy Info Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyInfoColor.description", "Color of the additional information text for enemies");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyFillColor.name", "Enemy Fill Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyFillColor.description", "Background fill color for enemies when Fill mode is enabled");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyOutlineColor.name", "Enemy Outline Color");
        languageBase.put("Module.Modules.NameTags.Options.ColorOption.EnemyOutlineColor.description", "Border color for enemies when Outline mode is enabled");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Rounded.name", "Rounded");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Rounded.description", "Apply rounded corners to the background rectangle");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Radius.name", "Radius");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Radius.description", "Corner radius when rounded is enabled");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Ping.name", "Ping");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Ping.description", "Show player latency next to the name");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Health.name", "Health");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Health.description", "Display current health and absorption");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Distance.name", "Distance");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Distance.description", "Show distance from the local player");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.GameMode.name", "Game Mode");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.GameMode.description", "Show the player's current game mode");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Popped.name", "Popped");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Popped.description", "Show recent totem pops count");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Items.name", "Items");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Items.description", "Show the items the player is holding");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.ItemName.name", "Item Name");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.ItemName.description", "Show the name of the item the player is holding");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Enchantments.name", "Enchantments");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Enchantments.description", "Show the enchantments on the player's items");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Durability.name", "Durability");
        languageBase.put("Module.Modules.NameTags.Options.BooleanOption.Durability.description", "Show the durability of the player's items");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Height.name", "Height");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.Height.description", "Vertical offset from the default position");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MaxScale.name", "Max Scale");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MaxScale.description", "Maximum scale multiplier based on distance");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MineScale.name", "Min Scale");
        languageBase.put("Module.Modules.NameTags.Options.DoubleOption.MineScale.description", "Minimum scale when very close to the target");

        languageBase.put("Module.Modules.ResourceESP.name", "Resource ESP");
        languageBase.put("Module.Modules.ResourceESP.description", "Highlights valuable ores and blocks around you");
        languageBase.put("Module.Modules.ResourceESP.Options.DoubleOption.Range.name", "Range");
        languageBase.put("Module.Modules.ResourceESP.Options.DoubleOption.Range.description", "Maximum search radius in blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetherPortalColor.name", "Nether Portal Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetherPortalColor.description", "Color used to outline Nether portals");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.DiamondColor.name", "Diamond Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.DiamondColor.description", "Color for diamond ores and blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.GoldColor.name", "Gold Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.GoldColor.description", "Color for gold ores and blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.EmeraldColor.name", "Emerald Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.EmeraldColor.description", "Color for emerald ores and blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.RedstoneColor.name", "Redstone Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.RedstoneColor.description", "Color for redstone ores and blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.LapisColor.name", "Lapis Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.LapisColor.description", "Color for lapis ores and blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.IronColor.name", "Iron Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.IronColor.description", "Color for iron ores and blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.CoalColor.name", "Coal Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.CoalColor.description", "Color for coal ores and blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetheriteColor.name", "Netherite Color");
        languageBase.put("Module.Modules.ResourceESP.Options.ColorOption.NetheriteColor.description", "Color for netherite blocks");
        languageBase.put("Module.Modules.ResourceESP.Options.MultipleOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.ResourceESP.Options.MultipleOption.Mode.description", "Whether to draw filled boxes");

        languageBase.put("Module.Modules.StorageESP.name", "Storage ESP");
        languageBase.put("Module.Modules.StorageESP.description", "Highlights storage containers around you");
        languageBase.put("Module.Modules.StorageESP.Options.DoubleOption.Range.name", "Range");
        languageBase.put("Module.Modules.StorageESP.Options.DoubleOption.Range.description", "Maximum search radius in blocks");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ChestColor.name", "Chest Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ChestColor.description", "Color for chests");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.TrappedChestColor.name", "Trapped Chest Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.TrappedChestColor.description", "Color for trapped chests");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.EnderChestColor.name", "Ender Chest Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.EnderChestColor.description", "Color for ender chests");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BarrelColor.name", "Barrel Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BarrelColor.description", "Color for barrels");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ShulkerBoxColor.name", "Shulker Box Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.ShulkerBoxColor.description", "Color for shulker boxes");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.FurnaceColor.name", "Furnace Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.FurnaceColor.description", "Color for furnaces");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BlastFurnaceColor.name", "Blast Furnace Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.BlastFurnaceColor.description", "Color for blast furnaces");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.SmokerColor.name", "Smoker Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.SmokerColor.description", "Color for smokers");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DispenserColor.name", "Dispenser Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DispenserColor.description", "Color for dispensers");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DropperColor.name", "Dropper Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.DropperColor.description", "Color for droppers");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.HopperColor.name", "Hopper Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.HopperColor.description", "Color for hoppers");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.CraftingTableColor.name", "Crafting Table Color");
        languageBase.put("Module.Modules.StorageESP.Options.ColorOption.CraftingTableColor.description", "Color for crafting tables");
        languageBase.put("Module.Modules.StorageESP.Options.MultipleOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.StorageESP.Options.MultipleOption.Mode.description", "Whether to draw filled boxes");

        languageBase.put("Module.Modules.HitBoxDesync.name", "Hitbox Desync");
        languageBase.put("Module.Modules.HitBoxDesync.description", "Moves your hitbox slightly to desync with your actual position");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Alternating.name", "Alternating");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Alternating.description", "Toggle between two directions each interval");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Specific.name", "Specific");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.Specific.description", "Use a precise offset when alternating");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.AutoDisable.name", "Auto Disable");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.AutoDisable.description", "Disable the module after one cycle");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.JumpDisable.name", "Jump Disable");
        languageBase.put("Module.Modules.HitBoxDesync.Options.BooleanOption.JumpDisable.description", "Disable the module when you jump");

        languageBase.put("Module.Modules.MurdererCatcher.name", "Murderer Catcher");
        languageBase.put("Module.Modules.MurdererCatcher.description", "Detects and marks the killer when a player dies nearby");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.MarkEnemy.name", "Mark Killer");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.MarkEnemy.description", "Auto add the killer to your enemy list");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.Sound.name", "Play Sound");
        languageBase.put("Module.Modules.MurdererCatcher.Options.BooleanOption.Sound.description", "Play a sound along with the notification");
        languageBase.put("Module.Modules.MurdererCatcher.Messages.PlayerDiedSuppose", "Player §b{player} §rwas killed by §c{Murderer} §r(distance: §b{distance}m§r)");
        languageBase.put("Module.Modules.MurdererCatcher.Messages.ItemCheckSuppose", "Player §c{murderer} §rhad a sword! §r(distance: §b{distance}m§r)");
        languageBase.put("Module.Modules.MurdererCatcher.Messages.BowCheck", "Player §b{bowmen} §rhad a Bow! §r(distance: §b{distance}m§r)");

        languageBase.put("Module.Modules.ColorMatcher.name", "Color Matcher");
        languageBase.put("Module.Modules.ColorMatcher.description", "Highlights color block blocks based on their dye color within a configurable range");
        languageBase.put("Module.Modules.ColorMatcher.Options.MultipleOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.ColorMatcher.Options.MultipleOption.Mode.description", "Visual style of the highlight (fill, outline, or both)");
        languageBase.put("Module.Modules.ColorMatcher.Options.DoubleOption.Range.name", "Range");
        languageBase.put("Module.Modules.ColorMatcher.Options.DoubleOption.Range.description", "Maximum search radius in blocks");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.NearestColor.name", "Nearest Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.NearestColor.description", "Special color used to highlight the closest color block block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.WhiteColor.name", "White Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.WhiteColor.description", "Highlight color for white color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.OrangeColor.name", "Orange Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.OrangeColor.description", "Highlight color for orange color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.MagentaColor.name", "Magenta Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.MagentaColor.description", "Highlight color for magenta color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightBlueColor.name", "Light Blue Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightBlueColor.description", "Highlight color for light blue color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.YellowColor.name", "Yellow Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.YellowColor.description", "Highlight color for yellow color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LimeColor.name", "Lime Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LimeColor.description", "Highlight color for lime color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PinkColor.name", "Pink Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PinkColor.description", "Highlight color for pink color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GrayColor.name", "Gray Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GrayColor.description", "Highlight color for gray color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightGrayColor.name", "Light Gray Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.LightGrayColor.description", "Highlight color for light gray color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.CyanColor.name", "Cyan Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.CyanColor.description", "Highlight color for cyan color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PurpleColor.name", "Purple Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.PurpleColor.description", "Highlight color for purple color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlueColor.name", "Blue Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlueColor.description", "Highlight color for blue color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BrownColor.name", "Brown Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BrownColor.description", "Highlight color for brown color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GreenColor.name", "Green Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.GreenColor.description", "Highlight color for green color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.RedColor.name", "Red Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.RedColor.description", "Highlight color for red color block");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlackColor.name", "Black Color");
        languageBase.put("Module.Modules.ColorMatcher.Options.ColorOption.BlackColor.description", "Highlight color for black color block");

        languageBase.put("Module.Modules.FakeAnimalCatcher.name", "Fake Animal Catcher");
        languageBase.put("Module.Modules.FakeAnimalCatcher.description", "Detects and highlights animals that are likely fake players or disguised bots");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.BooleanOption.Shine.name", "Shine");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.BooleanOption.Shine.description", "Apply a glowing effect to the highlighted fake animals");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.FillColor.name", "Fill Color");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.FillColor.description", "Color used to fill the animal model");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.OutlineColor.name", "Outline Color");
        languageBase.put("Module.Modules.FakeAnimalCatcher.Options.ColorOption.OutlineColor.description", "Color used for the animal model outline");

        languageBase.put("Module.Modules.AntiCheat.name", "Anti Cheat");
        languageBase.put("Module.Modules.AntiCheat.description", "Adjusts module settings to avoid detection by specific anti cheat systems");
        languageBase.put("Module.Modules.AntiCheat.Options.DoubleOption.Fov.name", "Fov");
        languageBase.put("Module.Modules.AntiCheat.Options.DoubleOption.Fov.description", "Field of view for rotation");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.AntiCheat.name", "Anti Cheat");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.AntiCheat.description", "Select the anti cheat system to adjust settings for");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.RotateMode.name", "Rotate Mode");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.RotateMode.description", "Rotation mode used by combat modules");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.SwingMode.name", "Swing Mode");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.SwingMode.description", "Swing animation mode used by combat modules");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.PlaceMode.name", "Place Mode");
        languageBase.put("Module.Modules.AntiCheat.Options.EnumOption.PlaceMode.description", "Placement mode used by combat modules");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.AttackRotate.name", "Attack Rotate");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.AttackRotate.description", "Rotate towards the target when attacking");
        languageBase.put("Module.Modules.AntiCheat.Options.DoubleOption.AttackDelay.name", "Attack Delay");
        languageBase.put("Module.Modules.AntiCheat.Options.DoubleOption.AttackDelay.description", "Delay between attacks in seconds");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.ForceSync.name", "Force Sync");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.ForceSync.description", "Force synchronization with the server");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.SpamCheck.name", "Spam Packets Check");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.SpamCheck.description", "Check for spamming packets");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.MultiPlace.name", "Multiple Place");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.MultiPlace.description", "Allow placing multiple blocks at once");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.StrictBlock.name", "Strict Block");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.StrictBlock.description", "Apply strict block placement checks");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.InventorySync.name", "Inventory Sync");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.InventorySync.description", "Synchronize inventory with the server");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.InventoryBypass.name", "Inventory Bypass");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.InventoryBypass.description", "Bypass inventory checks");
        languageBase.put("Module.Modules.AntiCheat.Options.DoubleOption.HitboxSize.name", "Hitbox Size");
        languageBase.put("Module.Modules.AntiCheat.Options.DoubleOption.HitboxSize.description", "Size of the hitbox");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.PacketPlace.name", "Packet Place");
        languageBase.put("Module.Modules.AntiCheat.Options.BooleanOption.PacketPlace.description", "Use packet placing for block placement");

        languageBase.put("Module.Modules.AutoLogout.name", "Auto Logout");
        languageBase.put("Module.Modules.AutoLogout.description", "Auto disconnects from the server when dangerous conditions are met");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AutoDisable.name", "Auto Disable");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AutoDisable.description", "Disable the module after a successful disconnect");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AntiMistake.name", "Anti Mistake");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.AntiMistake.description", "Prevents instant disconnect after joining by waiting a short delay");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.RegretTime.name", "Regret Time");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.RegretTime.description", "Seconds to wait before allowing a disconnect");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IllegalDisconnect.name", "Illegal Disconnect");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IllegalDisconnect.description", "Send an invalid packet to force a disconnect");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Health.name", "Low Health");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Health.description", "Disconnect when health drops below threshold");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.LowestHealth.name", "Lowest Health");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.LowestHealth.description", "Health value that triggers a disconnect");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Players.name", "Player Count");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Players.description", "Disconnect when player count exceeds limit");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MaxPlayers.name", "Max Players");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MaxPlayers.description", "Maximum players allowed before disconnect");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Distance.name", "Enemy Distance");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.Distance.description", "Disconnect if an enemy is too close");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MinDistance.name", "Min Distance");
        languageBase.put("Module.Modules.AutoLogout.Options.DoubleOption.MinDistance.description", "Minimum distance to trigger disconnect");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IgnoreFriend.name", "Ignore Friend");
        languageBase.put("Module.Modules.AutoLogout.Options.BooleanOption.IgnoreFriend.description", "Exclude friends from player count and distance checks");
        languageBase.put("Module.Modules.AutoLogout.Messages.LowHealth", "§e[Auto Logout] §cYour health dropped below §b{health}§c!");
        languageBase.put("Module.Modules.AutoLogout.Messages.TooManyPlayers", "§e[Auto Logout] §cToo many players around you! §7(§b{amount}§7)");
        languageBase.put("Module.Modules.AutoLogout.Messages.TooCloseAround", "§e[Auto Logout] §cThere is a enemy within §b{distance} §cblocks!");

        languageBase.put("Module.Modules.AutoRepairArmor.name", "Auto Repair Armor");
        languageBase.put("Module.Modules.AutoRepairArmor.description", "Auto throws XP bottles to repair your armor when durability is low");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Notify.name", "Notify");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Notify.description", "Notify you when repairing the item");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Sounds.name", "Play Sound");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Sounds.description", "Play a sound along with the notification");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.DurabilityCheck.name", "Durability Check");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.DurabilityCheck.description", "Stop repairing once all items are fully repaired");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Rotate.name", "Rotate");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Rotate.description", "Look straight up before throwing XP bottles");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Swing.name", "Swing");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.BooleanOption.Swing.description", "Perform a swing animation when throwing");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.DoubleOption.Delay.name", "Delay");
        languageBase.put("Module.Modules.AutoRepairArmor.Options.DoubleOption.Delay.description", "Milliseconds between each XP bottle throw");
        languageBase.put("Module.Modules.AutoRepairArmor.Messages.Repairing", "Trying to repair armor now");
        languageBase.put("Module.Modules.AutoRepairArmor.Messages.Stopped", "Stop repairing armor now");

        languageBase.put("Module.Modules.Scoreboard.name", "Scoreboard");
        languageBase.put("Module.Modules.Scoreboard.description", "Customizes the appearance of the vanilla scoreboard");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Hide.name", "Hide");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Hide.description", "Hide the vanilla scoreboard");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleColor.name", "Title Color");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleColor.description", "Color of the scoreboard title");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TextColor.name", "Text Color");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TextColor.description", "Color of the scoreboard text");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Rounded.name", "Rounded");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Rounded.description", "Apply rounded corners to the background");
        languageBase.put("Module.Modules.Scoreboard.Options.DoubleOption.Radius.name", "Radius");
        languageBase.put("Module.Modules.Scoreboard.Options.DoubleOption.Radius.description", "Corner radius when rounded is enabled");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.TitleBackground.name", "Title Background");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.TitleBackground.description", "Draw a background behind the scoreboard title");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleBackgroundColor.name", "Title Background Color");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.TitleBackgroundColor.description", "Color used for the title background");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Background.name", "Background");
        languageBase.put("Module.Modules.Scoreboard.Options.BooleanOption.Background.description", "Draw a background behind the scoreboard");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.BackgroundColor.name", "Background Color");
        languageBase.put("Module.Modules.Scoreboard.Options.ColorOption.BackgroundColor.description", "Color used for the scoreboard background");

        languageBase.put("Module.Modules.ThemeEditor.name", "Theme Editor");
        languageBase.put("Module.Modules.ThemeEditor.description", "Edit and customize themes for Vergence client");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.DisplayName.name", "Display Name");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.DisplayName.description", "The display name of the theme");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Description.name", "Description");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Description.description", "A brief description of the theme");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Author.name", "Author");
        languageBase.put("Module.Modules.ThemeEditor.Options.TextOption.Author.description", "The author(s) of the theme (separated by ',')");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainColor.name", "Main Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainColor.description", "The primary color used in the theme");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageBackgroundColor.name", "Main Page Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageBackgroundColor.description", "Background color of the main page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageSplitLineColor.name", "Main Page Split Line Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.MainPageSplitLineColor.description", "Color of the split lines on the main page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryBackgroundColor.name", "Category Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryBackgroundColor.description", "Background color of categories");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryTextColor.name", "Category Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryTextColor.description", "Text color of categories");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredBackgroundColor.name", "Category Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredBackgroundColor.description", "Background color when a category is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredTextColor.name", "Category Hovered Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryHoveredTextColor.description", "Text color when a category is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentBackgroundColor.name", "Category Current Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentBackgroundColor.description", "Background color of the current category");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentTextColor.name", "Category Current Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.CategoryCurrentTextColor.description", "Text color of the current category");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleBackgroundColor.name", "Module Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleBackgroundColor.description", "Background color of modules");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledBackgroundColor.name", "Module Enabled Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledBackgroundColor.description", "Background color of enabled modules");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleTextColor.name", "Module Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleTextColor.description", "Text color of modules");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledTextColor.name", "Module Enabled Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledTextColor.description", "Text color of enabled modules");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredBackgroundColor.name", "Module Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredBackgroundColor.description", "Background color when a module is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredTextColor.name", "Module Hovered Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredTextColor.description", "Text color when a module is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleGearTextColor.name", "Module Gear Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleGearTextColor.description", "Text color of the gear icon in modules");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredGearTextColor.name", "Module Hovered Gear Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleHoveredGearTextColor.description", "Text color of the gear icon when hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledGearTextColor.name", "Module Enabled Gear Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ModuleEnabledGearTextColor.description", "Text color of the gear icon when enabled");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationBackgroundColor.name", "Notification Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationBackgroundColor.description", "Background color of notifications");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationTextColor.name", "Notification Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationTextColor.description", "Text color of notifications");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationHighlightTextColor.name", "Notification Highlight Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.NotificationHighlightTextColor.description", "Highlighted text color in notifications");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonCircleColor.name", "Button Circle Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonCircleColor.description", "Color of the circular part of buttons");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonInlineColor.name", "Button Inline Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonInlineColor.description", "Color of the inline part of buttons");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledCircleColor.name", "Button Enabled Circle Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledCircleColor.description", "Color of the circular part when the button is enabled");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledInlineColor.name", "Button Enabled Inline Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledInlineColor.description", "Color of the inline part when the button is enabled");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonBackgroundColor.name", "Button Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonBackgroundColor.description", "Background color of buttons");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredBackgroundColor.name", "Button Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredBackgroundColor.description", "Background color when a button is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledBackgroundColor.name", "Button Enabled Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonEnabledBackgroundColor.description", "Background color when a button is enabled");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredInlineColor.name", "Button Hovered Inline Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredInlineColor.description", "Inline color when a button is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredCircleColor.name", "Button Hovered Circle Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ButtonHoveredCircleColor.description", "Circular color when a button is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderBackgroundColor.name", "Slider Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderBackgroundColor.description", "Background color of sliders");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredBackgroundColor.name", "Slider Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredBackgroundColor.description", "Background color when a slider is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderCircleColor.name", "Slider Circle Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderCircleColor.description", "Color of the circular part of sliders");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderInlineColor.name", "Slider Inline Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderInlineColor.description", "Color of the inline part of sliders");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredCircleColor.name", "Slider Hovered Circle Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredCircleColor.description", "Circular color when a slider is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredInlineColor.name", "Slider Hovered Inline Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderHoveredInlineColor.description", "Inline color when a slider is hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedCircleColor.name", "Slider Clicked Circle Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedCircleColor.description", "Circular color when a slider is clicked");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedInlineColor.name", "Slider Clicked Inline Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderClickedInlineColor.description", "Inline color when a slider is clicked");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderValuedBackgroundColor.name", "Slider Valued Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.SliderValuedBackgroundColor.description", "Background color of the valued part of sliders");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionsTextColor.name", "Options Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionsTextColor.description", "Text color of options");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionAreaBackgroundColor.name", "Option Area Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.OptionAreaBackgroundColor.description", "Background color of the option area");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HudEditorTipsTextColor.name", "HUD Editor Tips Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HudEditorTipsTextColor.description", "Text color of tips in the HUD editor");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentBackgroundColor.name", "Hover Component Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentBackgroundColor.description", "Background color of hover components");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentTextColor.name", "Hover Component Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.HoverComponentTextColor.description", "Text color of hover components");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionBackgroundColor.name", "Description Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionBackgroundColor.description", "Background color of descriptions");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionTextColor.name", "Description Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.DescriptionTextColor.description", "Text color of descriptions");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChatPrefixColor.name", "Chat Prefix Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChatPrefixColor.description", "Color of the chat prefix");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.TopBarBackgroundColor.name", "Top Bar Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.TopBarBackgroundColor.description", "Background color of the top bar");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameBackgroundColor.name", "Input Frame Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameBackgroundColor.description", "Background color of input frames");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameTextColor.name", "Input Frame Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameTextColor.description", "Text color of input frames");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredBackgroundColor.name", "Input Frame Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredBackgroundColor.description", "Background color of input frames when hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredTextColor.name", "Input Frame Hovered Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.InputFrameHoveredTextColor.description", "Text color of input frames when hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesBackgroundColor.name", "Choices Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesBackgroundColor.description", "Background color of choices");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesTextColor.name", "Choices Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesTextColor.description", "Text color of choices");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredBackgroundColor.name", "Choices Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredBackgroundColor.description", "Background color of choices when hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredTextColor.name", "Choices Hovered Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesHoveredTextColor.description", "Text color of choices when hovered");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultBackgroundColor.name", "Choices Default Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultBackgroundColor.description", "Default background color of choices");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultTextColor.name", "Choices Default Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesDefaultTextColor.description", "Default text color of choices");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledBackgroundColor.name", "Choices Enabled Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledBackgroundColor.description", "Background color of enabled choices");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledTextColor.name", "Choices Enabled Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesEnabledTextColor.description", "Text color of enabled choices");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesAreaBackgroundColor.name", "Choices Area Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ChoicesAreaBackgroundColor.description", "Background color of the choices area");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteBackgroundColor.name", "Color Palette Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteBackgroundColor.description", "Background color of the color palette");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteOutlineColor.name", "Color Palette Outline Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ColorPaletteOutlineColor.description", "Outline color of the color palette");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenBackgroundColor.name", "Theme Page Component Chosen Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenBackgroundColor.description", "Background color of chosen components on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentTextColor.name", "Theme Page Component Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentTextColor.description", "Text color of components on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentAuthorsColor.name", "Theme Page Component Authors Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentAuthorsColor.description", "Color of authors in components on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredAuthorsColor.name", "Theme Page Component Hovered Authors Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredAuthorsColor.description", "Color of authors when hovered in components on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenAuthorsColor.name", "Theme Page Component Chosen Authors Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenAuthorsColor.description", "Color of authors in chosen components on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredBackgroundColor.name", "Theme Page Component Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredBackgroundColor.description", "Background color of components when hovered on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentBackgroundColor.name", "Theme Page Component Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentBackgroundColor.description", "Background color of components on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredTextColor.name", "Theme Page Component Hovered Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentHoveredTextColor.description", "Text color of components when hovered on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenTextColor.name", "Theme Page Component Chosen Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ThemePageComponentChosenTextColor.description", "Text color of chosen components on the theme page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenBackgroundColor.name", "Config Page Component Chosen Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenBackgroundColor.description", "Background color of chosen components on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentTextColor.name", "Config Page Component Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentTextColor.description", "Text color of components on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentDateColor.name", "Config Page Component Date Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentDateColor.description", "Color of authors in components on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredDateColor.name", "Config Page Component Hovered Date Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredDateColor.description", "Color of authors when hovered in components on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenDateColor.name", "Config Page Component Chosen Date Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenDateColor.description", "Color of authors in chosen components on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredBackgroundColor.name", "Config Page Component Hovered Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredBackgroundColor.description", "Background color of components when hovered on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentBackgroundColor.name", "Config Page Component Background Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentBackgroundColor.description", "Background color of components on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredTextColor.name", "Config Page Component Hovered Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentHoveredTextColor.description", "Text color of components when hovered on the config page");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenTextColor.name", "Config Page Component Chosen Text Color");
        languageBase.put("Module.Modules.ThemeEditor.Options.ColorOption.ConfigPageComponentChosenTextColor.description", "Text color of chosen components on the config page");

        languageBase.put("Module.Modules.PingLagSpoof.name", "Ping Lag Spoof");
        languageBase.put("Module.Modules.PingLagSpoof.description", "Spoof your ping to the server by delaying keep alive packets");
        languageBase.put("Module.Modules.PingLagSpoof.Options.DoubleOption.Delay.name", "Delay");
        languageBase.put("Module.Modules.PingLagSpoof.Options.DoubleOption.Delay.description", "The delay in milliseconds to spoof your ping");

        languageBase.put("Module.Modules.AutoBowAim.name", "Auto Bow Aim");
        languageBase.put("Module.Modules.AutoBowAim.description", "Auto aims your bow at targets");
        languageBase.put("Module.Modules.AutoBowAim.Options.MultipleOption.Targets.name", "Targets");
        languageBase.put("Module.Modules.AutoBowAim.Options.MultipleOption.Targets.description", "Select which types of entities to target");
        languageBase.put("Module.Modules.AutoBowAim.Options.DoubleOption.Range.name", "Range");
        languageBase.put("Module.Modules.AutoBowAim.Options.DoubleOption.Range.description", "The maximum distance to target entities");

        languageBase.put("Module.Modules.FastEat.name", "Fast Eat");
        languageBase.put("Module.Modules.FastEat.description", "Speeds up the eating process");
        languageBase.put("Module.Modules.FastEat.Options.EnumOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.FastEat.Options.EnumOption.Mode.description", "The mode to use for speeding up eating");
        languageBase.put("Module.Modules.FastEat.Options.DoubleOption.Ticks.name", "Ticks");
        languageBase.put("Module.Modules.FastEat.Options.DoubleOption.Ticks.description", "The number of ticks to speed up the eating process");

        languageBase.put("Module.Modules.MultipleTask.name", "Multiple Task");
        languageBase.put("Module.Modules.MultipleTask.description", "Allows you to perform multiple tasks at once");

        languageBase.put("Module.Modules.NoEntityTrace.name", "No Entity Trace");
        languageBase.put("Module.Modules.NoEntityTrace.description", "Prevents the server from tracing entities");
        languageBase.put("Module.Modules.NoEntityTrace.Options.BooleanOption.OnlyPickaxe.name", "Only Pickaxe");
        languageBase.put("Module.Modules.NoEntityTrace.Options.BooleanOption.OnlyPickaxe.description", "Only applies the no trace effect when holding a pickaxe");

        languageBase.put("Module.Modules.NoInteract.name", "No Interact");
        languageBase.put("Module.Modules.NoInteract.description", "Prevents interaction with entities and blocks");

        languageBase.put("Module.Modules.LagNotify.name", "Lag Notify");
        languageBase.put("Module.Modules.LagNotify.description", "Notifies you when the server is lagging or when the client is experiencing high latency");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ServerLagging.name", "Server Lagging");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ServerLagging.description", "Notify when the server response time exceeds a certain threshold");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ClientLayback.name", "Client Layback");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.ClientLayback.description", "Notify when the client experiences significant lag");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.Sounds.name", "Sounds");
        languageBase.put("Module.Modules.LagNotify.Options.BooleanOption.Sounds.description", "Play a sound when lag is detected");
        languageBase.put("Module.Modules.LagNotify.Messages.ServerLag", "§cServer is lagging! Response time: §b{timer}s");
        languageBase.put("Module.Modules.LagNotify.Messages.ClientLag", "§cClient is lagging! Lag time: §b{timer}s");

        languageBase.put("Module.Modules.FastLatencyCalc.name", "Fast Latency Calc");
        languageBase.put("Module.Modules.FastLatencyCalc.description", "Calculates your latency to the server by sending command completion requests");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Delay.name", "Delay");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Delay.description", "The delay between sending command completion requests");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.BooleanOption.spikeNotify.name", "Spike Notify");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.BooleanOption.spikeNotify.description", "Notify when a latency spike is detected");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Threshold.name", "Threshold");
        languageBase.put("Module.Modules.FastLatencyCalc.Options.DoubleOption.Threshold.description", "The minimum latency increase required to trigger a spike notification");
        languageBase.put("Module.Modules.FastLatencyCalc.Messages.Spike", "Latency spike detected!");

        languageBase.put("Module.Modules.UnfocusedFPS.name", "Unfocused FPS");
        languageBase.put("Module.Modules.UnfocusedFPS.description", "Limits the FPS when the game window is not focused");
        languageBase.put("Module.Modules.UnfocusedFPS.Options.DoubleOption.FPSLimit.name", "FPS Limit");
        languageBase.put("Module.Modules.UnfocusedFPS.Options.DoubleOption.FPSLimit.description", "The maximum FPS allowed when the game window is not focused");

        languageBase.put("Module.Modules.FastDrop.name", "Fast Drop");
        languageBase.put("Module.Modules.FastDrop.description", "Reduces the delay between dropping items");
        languageBase.put("Module.Modules.FastDrop.Options.DoubleOption.Delay.name", "Delay");
        languageBase.put("Module.Modules.FastDrop.Options.DoubleOption.Delay.description", "The delay in ticks between each item drop");

        languageBase.put("Module.Modules.FastFall.name", "Fast Fall");
        languageBase.put("Module.Modules.FastFall.description", "Allows you to fall faster");
        languageBase.put("Module.Modules.FastFall.Options.EnumOption.FallMode.name", "Fall Mode");
        languageBase.put("Module.Modules.FastFall.Options.EnumOption.FallMode.description", "The mode used to accelerate falling");
        languageBase.put("Module.Modules.FastFall.Options.DoubleOption.ShiftTicks.name", "Shift Ticks");
        languageBase.put("Module.Modules.FastFall.Options.DoubleOption.ShiftTicks.description", "Number of ticks to shift when falling");
        languageBase.put("Module.Modules.FastFall.Options.DoubleOption.Distance.name", "Distance");
        languageBase.put("Module.Modules.FastFall.Options.DoubleOption.Distance.description", "Maximum distance to check for blocks below");

        languageBase.put("Module.Modules.AutoReplenish.name", "Auto Replenish");
        languageBase.put("Module.Modules.AutoReplenish.description", "Auto replenishes items in your hotbar when they are low");
        languageBase.put("Module.Modules.AutoReplenish.Options.DoubleOption.Limit.name", "Limit");
        languageBase.put("Module.Modules.AutoReplenish.Options.DoubleOption.Limit.description", "The percentage of item stack to trigger replenishment");

        languageBase.put("Module.Modules.CrystalAura.name", "Crystal Aura");
        languageBase.put("Module.Modules.CrystalAura.description", "Auto places and attacks crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.Page.name", "Page");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.Page.description", "Select the config page");
        languageBase.put("Module.Modules.CrystalAura.Options.MultipleOption.Targets.name", "Targets");
        languageBase.put("Module.Modules.CrystalAura.Options.MultipleOption.Targets.description", "Select which types of entities to target");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.Range.name", "Range");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.Range.description", "Maximum distance to target entities");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AutoDisable.name", "Auto Disable");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AutoDisable.description", "Auto disable the module when logging out");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.MaxYAxisOffset.name", "Max Y Axis Offset");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.MaxYAxisOffset.description", "Maximum Y-axis offset for crystal placement");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.MaxPlayerDamage.name", "Max Player Damage");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.MaxPlayerDamage.description", "Maximum self-damage allowed");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.MinDamage.name", "Min Damage");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.MinDamage.description", "Minimum damage required to attack a crystal");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.MultiTask.name", "Multi Task");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.MultiTask.description", "Allow multitasking while using the module");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.WhileMining.name", "While Mining");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.WhileMining.description", "Allow crystal placement while mining");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.SwapDelay.name", "Swap Delay");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.SwapDelay.description", "Delay between item swaps");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.BlockDestruction.name", "Block Destruction");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.BlockDestruction.description", "Calculate damage considering block destruction");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ArmorDestroyer.name", "Armor Destroyer");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ArmorDestroyer.description", "Prioritize targets with low armor durability");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.ArmorScale.name", "Armor Scale");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.ArmorScale.description", "Scale for armor durability calculation");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.LethalMultiplier.name", "Lethal Multiplier");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.LethalMultiplier.description", "Multiplier for lethal damage calculation");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.LethalTick.name", "Lethal Tick");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.LethalTick.description", "Only attack on specific ticks for lethal damage");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.SafeCheck.name", "Safe Check");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.SafeCheck.description", "Check if the crystal is safe to place");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.SafeOverride.name", "Safe Override");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.SafeOverride.description", "Override safe check for crystal placement");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoRotate.name", "Rotate");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoRotate.description", "Rotate towards the crystal");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.RotateMode.name", "Rotate Mode");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.RotateMode.description", "Mode used for rotating towards the crystal");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.RotateYawStep.name", "Yaw Step");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.RotateYawStep.description", "Yaw step for rotation");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.RotateYawStepLimit.name", "Yaw Step Limit");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.RotateYawStepLimit.description", "Maximum yaw step limit");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoPlace.name", "Place");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoPlace.description", "Enable crystal placement");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.PlacementMode.name", "Placement Mode");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.PlacementMode.description", "Mode used for placing crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.PlaceRange.name", "Place Range");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.PlaceRange.description", "Maximum distance to place crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.PlaceWallRange.name", "Place Wall Range");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.PlaceWallRange.description", "Maximum distance to place crystals through walls");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceSwing.name", "Place Swing");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceSwing.description", "Swing arm when placing a crystal");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.PlaceSpeed.name", "Place Speed");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.PlaceSpeed.description", "Speed of crystal placement");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceCalcByEye.name", "Place Calc By Eye");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceCalcByEye.description", "Calculate placement based on eye position");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceCalcCenter.name", "Place Calc Center");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceCalcCenter.description", "Calculate placement based on block center");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.PlaceSwapMode.name", "Place Swap Mode");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.PlaceSwapMode.description", "Mode used for swapping items when placing");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AntiSurround.name", "Anti Surround");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AntiSurround.description", "Prevent surrounding by crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceStrict.name", "Place Strict");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceStrict.description", "Strict placement conditions");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceOnlyVisible.name", "Place Only Visible");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceOnlyVisible.description", "Only place crystals on visible blocks");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceOnlyExposed.name", "Place Only Exposed");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.PlaceOnlyExposed.description", "Only place crystals on exposed blocks");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoAttack.name", "Attack");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoAttack.description", "Enable crystal attack");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackRange.name", "Attack Range");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackRange.description", "Maximum distance to attack crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackWallRange.name", "Attack Wall Range");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackWallRange.description", "Maximum distance to attack crystals through walls");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackSwing.name", "Attack Swing");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackSwing.description", "Swing arm when attacking a crystal");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackSpeed.name", "Attack Speed");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackSpeed.description", "Speed of crystal attack");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackDelay.name", "Attack Delay");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackDelay.description", "Delay between crystal attacks");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackFactor.name", "Attack Factor");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackFactor.description", "Factor for attack delay calculation");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackRayTrace.name", "Attack Ray Trace");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackRayTrace.description", "Use ray trace for attack calculation");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackTicksExisted.name", "Attack Ticks Existed");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackTicksExisted.description", "Minimum ticks existed for a crystal to be attacked");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.AttackAntiWeakness.name", "Attack Anti Weakness");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.AttackAntiWeakness.description", "Mode used to counteract weakness effect");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackInhibit.name", "Attack Inhibit");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackInhibit.description", "Prevent attacking if the crystal is too close");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackAnyCrystal.name", "Attack Any Crystal");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackAnyCrystal.description", "Attack any crystal regardless of target");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackDelayCalc.name", "Attack Delay Calc");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.AttackDelayCalc.description", "Calculate attack delay dynamically");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackTimeout.name", "Attack Timeout");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackTimeout.description", "Timeout for attack delay calculation");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackMinTimeout.name", "Attack Min Timeout");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackMinTimeout.description", "Minimum timeout for attack delay calculation");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ForceAttack.name", "Force Attack");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ForceAttack.description", "Force attack on crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ForceAttackCalc.name", "Force Attack Calc");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ForceAttackCalc.description", "Calculate force attack dynamically");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ForceAttackMax.name", "Force Attack Max");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.ForceAttackMax.description", "Attack only if maximum damage is achieved");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.ForceAttackDamage.name", "Force Attack Damage");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.ForceAttackDamage.description", "Minimum damage required for force attack");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoRender.name", "Render");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoRender.description", "Enable rendering of crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoFade.name", "Fade");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DoFade.description", "Enable fade effect for crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.FadeTime.name", "Fade Time");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.FadeTime.description", "Duration of the fade effect");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.RenderDamage.name", "Render Damage");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.RenderDamage.description", "Render damage values on crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Render.name", "Render");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Render.description", "Enable rendering of crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.Placement.name", "Placement");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.Placement.description", "Mode used for placing crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Fade.name", "Fade");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Fade.description", "Enable fade effect for crystals");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.AntiWeakness.name", "Anti Weakness");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.AntiWeakness.description", "Mode used to counteract weakness effect");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Rotate.name", "Rotate");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Rotate.description", "Rotate towards the crystal");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.YawStepLimit.name", "Yaw Step Limit");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.YawStepLimit.description", "Maximum yaw step limit");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackTickExisted.name", "Attack Tick Existed");
        languageBase.put("Module.Modules.CrystalAura.Options.DoubleOption.AttackTickExisted.description", "Minimum ticks existed for a crystal to be attacked");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Attack.name", "Attack");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Attack.description", "Enable crystal attack");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.YawStep.name", "Yaw Step");
        languageBase.put("Module.Modules.CrystalAura.Options.EnumOption.YawStep.description", "Yaw step for rotation");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Place.name", "Place");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.Place.description", "Enable crystal placement");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DebugInfo.name", "Debug Info");
        languageBase.put("Module.Modules.CrystalAura.Options.BooleanOption.DebugInfo.description", "Display debug information");

        languageBase.put("Module.Modules.SmartOffhand.name", "Smart Offhand");
        languageBase.put("Module.Modules.SmartOffhand.description", "Auto manages items in the offhand slot");
        languageBase.put("Module.Modules.SmartOffhand.Options.EnumOption.Item.name", "Items");
        languageBase.put("Module.Modules.SmartOffhand.Options.EnumOption.Item.description", "Select the item to prioritize in the offhand");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.TickAbort.name", "Tick Abort");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.TickAbort.description", "Enable the interval between switching item which is determine by player ping");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.HealthCheck.name", "Health");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.HealthCheck.description", "Check player health to determine if a totem is needed");
        languageBase.put("Module.Modules.SmartOffhand.Options.DoubleOption.MinHealth.name", "Min Health");
        languageBase.put("Module.Modules.SmartOffhand.Options.DoubleOption.MinHealth.description", "Minimum health to trigger totem placement");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.FallCheck.name", "Fall");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.FallCheck.description", "Check fall distance to determine if a totem is needed");
        languageBase.put("Module.Modules.SmartOffhand.Options.DoubleOption.FallDistance.name", "Fall Distance");
        languageBase.put("Module.Modules.SmartOffhand.Options.DoubleOption.FallDistance.description", "Minimum fall distance to trigger totem placement");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.ElytraCheck.name", "Elytra");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.ElytraCheck.description", "Check if elytra is equipped to determine if a totem is needed");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.LethalOverride.name", "Lethal Override");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.LethalOverride.description", "Override totem placement if lethal damage is detected");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.SwordCheck.name", "Smart Sword");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.SwordCheck.description", "Switches to a golden apple in your offhand when holding right click and holding a sword");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.MineCheck.name", "Smart Mine");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.MineCheck.description", "Switches to a crystal whenever you start mining and a totem when you aren't mining");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.DisplayTotemCount.name", "Display Totem Count");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.DisplayTotemCount.description", "Display the number of totems in the inventory");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.SmartMine.name", "Smart Mine");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.SmartMine.description", "Prioritize end crystal when mining");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.Health.name", "Health");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.Health.description", "Check player health to determine if a totem is needed");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.SmartSword.name", "Smart Sword");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.SmartSword.description", "Prioritize enchanted golden apple when using a sword");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.Elytra.name", "Elytra");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.Elytra.description", "Check if elytra is equipped to determine if a totem is needed");
        languageBase.put("Module.Modules.SmartOffhand.Options.EnumOption.Items.name", "Items");
        languageBase.put("Module.Modules.SmartOffhand.Options.EnumOption.Items.description", "Select the item to prioritize in the offhand");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.Fall.name", "Fall");
        languageBase.put("Module.Modules.SmartOffhand.Options.BooleanOption.Fall.description", "Check fall distance to determine if a totem is needed");

        languageBase.put("Module.Modules.AutoBowRelease.name", "Auto Bow Release");
        languageBase.put("Module.Modules.AutoBowRelease.description", "Auto releases the bow or crossbow when fully drawn");
        languageBase.put("Module.Modules.AutoBowRelease.Options.BooleanOption.AutoRelease.name", "AutoRelease");
        languageBase.put("Module.Modules.AutoBowRelease.Options.BooleanOption.AutoRelease.description", "Auto release the bow or crossbow when fully drawn");
        languageBase.put("Module.Modules.AutoBowRelease.Options.DoubleOption.Ticks.name", "Ticks");
        languageBase.put("Module.Modules.AutoBowRelease.Options.DoubleOption.Ticks.description", "Number of ticks to wait before releasing the bow");
        languageBase.put("Module.Modules.AutoBowRelease.Options.BooleanOption.Packets.name", "Packets");
        languageBase.put("Module.Modules.AutoBowRelease.Options.BooleanOption.Packets.description", "Send packets to release the bow or crossbow");

        languageBase.put("Module.Modules.Velocity.name", "Velocity");
        languageBase.put("Module.Modules.Velocity.description", "Modifies the velocity of the player");
        languageBase.put("Module.Modules.Velocity.Options.EnumOption.Mode.name", "Mode");
        languageBase.put("Module.Modules.Velocity.Options.EnumOption.Mode.description", "The mode used to modify velocity");
        languageBase.put("Module.Modules.Velocity.Options.DoubleOption.Horizontal.name", "Horizontal");
        languageBase.put("Module.Modules.Velocity.Options.DoubleOption.Horizontal.description", "Horizontal velocity multiplier");
        languageBase.put("Module.Modules.Velocity.Options.DoubleOption.Vertical.name", "Vertical");
        languageBase.put("Module.Modules.Velocity.Options.DoubleOption.Vertical.description", "Vertical velocity multiplier");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.Explosions.name", "Explosions");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.Explosions.description", "Apply velocity modifications to explosions");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.Pause.name", "Pause");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.Pause.description", "Pause velocity modifications");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiPush.name", "Anti Push");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiPush.description", "Prevent being pushed by entities");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiLiquidPush.name", "Anti Liquid Push");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiLiquidPush.description", "Prevent being pushed by liquids");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiBlockPush.name", "Anti Block Push");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiBlockPush.description", "Prevent being pushed by blocks");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiFishingRod.name", "Anti Fishing Rod");
        languageBase.put("Module.Modules.Velocity.Options.BooleanOption.AntiFishingRod.description", "Prevent being pulled by fishing rods");

        languageBase.put("Module.Modules.Surround.name", "Surround");
        languageBase.put("Module.Modules.Surround.description", "Auto places obsidian around the player");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.FOV.name", "FOV");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.FOV.description", "Field of view for rotation");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.MultiPlace.name", "Multi Place");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.MultiPlace.description", "Blocks placed in one tick");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.TickLimit.name", "Tick Limit");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.TickLimit.description", "Limit the number of blocks placed per tick");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.ToCenter.name", "Move Center");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.ToCenter.description", "Move the player to the center of the block");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.Extension.name", "Extension");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.Extension.description", "Extend the surround to cover more area");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.OnlySelf.name", "Only Self");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.OnlySelf.description", "Only place blocks if the player is the only entity");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.FillBottom.name", "Fill Bottom");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.FillBottom.description", "Fill the bottom layer of the surround");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.WhileEating.name", "While Eating");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.WhileEating.description", "Allow placing blocks while eating");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.WhileMining.name", "While Mining");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.WhileMining.description", "Allow placing blocks while mining");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.InAir.name", "In Air");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.InAir.description", "Allow placing blocks while in the air");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.PacketPlace.name", "Packet Place");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.PacketPlace.description", "Use packet placing for faster block placement");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.Limit.name", "Limit");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.Limit.description", "Maximum number of blocks to place");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.PlaceDelay.name", "Place Delay");
        languageBase.put("Module.Modules.Surround.Options.DoubleOption.PlaceDelay.description", "Delay between placing blocks");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.DoSwap.name", "Swap");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.DoSwap.description", "Swap to the block in the inventory");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.InventorySwap.name", "Inventory Swap");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.InventorySwap.description", "Swap using inventory slots");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.EnderChest.name", "Ender Chest");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.EnderChest.description", "Use ender chest for block placement");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.DoRotate.name", "Rotate");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.DoRotate.description", "Rotate towards the block placement");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.YawStep.name", "Yaw Step");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.YawStep.description", "Step yaw when rotating");
        languageBase.put("Module.Modules.Surround.Options.EnumOption.RotateMode.name", "Rotate Mode");
        languageBase.put("Module.Modules.Surround.Options.EnumOption.RotateMode.description", "Mode used for rotating");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.DoSwing.name", "Swing");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.DoSwing.description", "Swing arm when placing a block");
        languageBase.put("Module.Modules.Surround.Options.EnumOption.SwingMode.name", "Swing Mode");
        languageBase.put("Module.Modules.Surround.Options.EnumOption.SwingMode.description", "Mode used for swinging");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.AutoDisable.name", "Auto Disable");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.AutoDisable.description", "Automatically disable the module");
        languageBase.put("Module.Modules.Surround.Options.MultipleOption.DisableItems.name", "Disable Items");
        languageBase.put("Module.Modules.Surround.Options.MultipleOption.DisableItems.description", "Items to disable when auto disabling");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.AntiCrystal.name", "Anti Crystal");
        languageBase.put("Module.Modules.Surround.Options.BooleanOption.AntiCrystal.description", "Prevent crystal placement");
        languageBase.put("Module.Modules.Surround.Options.MultipleOption.Blocker.name", "Module Blocker");
        languageBase.put("Module.Modules.Surround.Options.MultipleOption.Blocker.description", "Modules to block");
        languageBase.put("Module.Modules.Surround.Messages.NoSuchBlocks", "No suitable blocks found in inventory");

        languageBase.put("Module.Modules.Defender.name", "Defender");
        languageBase.put("Module.Modules.Defender.description", "Auto places obsidian to defend against crystal attacks");
        languageBase.put("Module.Modules.Defender.Options.DoubleOption.PlaceDelay.name", "Place Delay");
        languageBase.put("Module.Modules.Defender.Options.DoubleOption.PlaceDelay.description", "Delay between placing blocks");
        languageBase.put("Module.Modules.Defender.Options.DoubleOption.MultiPlace.name", "Multi Place");
        languageBase.put("Module.Modules.Defender.Options.DoubleOption.MultiPlace.description", "Number of blocks to place per tick");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.DoRotate.name", "Rotate");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.DoRotate.description", "Rotate towards the block placement");
        languageBase.put("Module.Modules.Defender.Options.EnumOption.RotateMode.name", "Rotate Mode");
        languageBase.put("Module.Modules.Defender.Options.EnumOption.RotateMode.description", "Mode used for rotating");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.InventorySwap.name", "Inventory Swap");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.InventorySwap.description", "Swap using inventory slots");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.AntiCrystal.name", "Anti Crystal");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.AntiCrystal.description", "Attack crystals before placing blocks");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.WhileEating.name", "While Eating");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.WhileEating.description", "Allow placing blocks while eating");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.WhileMining.name", "While Mining");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.WhileMining.description", "Allow placing blocks while mining");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.ForFace.name", "Face");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.ForFace.description", "Place blocks on the face of the player");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.ForBottom.name", "Bottom");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.ForBottom.description", "Place blocks on the bottom layer");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.Burrow.name", "Burrow");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.Burrow.description", "Place blocks around the player's feet");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.InAir.name", "In Air");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.InAir.description", "Allow placing blocks while in the air");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.OnlySurround.name", "Only Surround");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.OnlySurround.description", "Only place blocks if Surround is enabled");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.BevelCev.name", "Bevel Cev");
        languageBase.put("Module.Modules.Defender.Options.BooleanOption.BevelCev.description", "Place blocks in a specific pattern");

        languageBase.put("Module.Modules.Xray.name", "X-Ray");
        languageBase.put("Module.Modules.Xray.description", "Show only resource blocks");

        languageBase.put("Module.Modules.NoSlowdown.name", "No Slowdown");
        languageBase.put("Module.Modules.NoSlowdown.description", "Prevent you from slowing down");
    }
}
